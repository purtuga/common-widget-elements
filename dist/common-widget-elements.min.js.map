{"version":3,"sources":["webpack://CommonWidgetElements/webpack/universalModuleDefinition","webpack://CommonWidgetElements/webpack/bootstrap","webpack://CommonWidgetElements/external \"(Set.Set = Set)\"","webpack://CommonWidgetElements/./node_modules/common-micro-libs/src/jsutils/getGlobal.js","webpack://CommonWidgetElements/external \"(Symbol.Symbol = Symbol)\"","webpack://CommonWidgetElements/./node_modules/common-micro-libs/src/jsutils/objectExtend.js","webpack://CommonWidgetElements/./node_modules/common-micro-libs/src/jsutils/runtime-aliases.js","webpack://CommonWidgetElements/./node_modules/common-micro-libs/src/jsutils/nextTick.js","webpack://CommonWidgetElements/./node_modules/observables/src/objectWatchProp.js","webpack://CommonWidgetElements/./node_modules/common-micro-libs/src/domutils/domAddEventListener.js","webpack://CommonWidgetElements/./node_modules/common-micro-libs/src/jsutils/dataStore.js","webpack://CommonWidgetElements/./node_modules/component-element/src/utils.js","webpack://CommonWidgetElements/./node_modules/component-element/src/polyfill-support.js","webpack://CommonWidgetElements/./node_modules/component-element/src/ComponentElement.js","webpack://CommonWidgetElements/./node_modules/component-element/src/decorators/prop.js","webpack://CommonWidgetElements/./node_modules/component-element/src/decorators/bind.js","webpack://CommonWidgetElements/./node_modules/common-micro-libs/src/domutils/domPosition.js","webpack://CommonWidgetElements/./src/Popup/Popup.js","webpack://CommonWidgetElements/./node_modules/common-micro-libs/src/domutils/domInsertBefore.js","webpack://CommonWidgetElements/./src/ContentAccess/ContentAccess.js","webpack://CommonWidgetElements/./src/index.js","webpack://CommonWidgetElements/(webpack)/buildin/global.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Set","GLOBAL","global","self","Function","OBJECT_TYPE","_toString","toString","jsutils_objectExtend","objectExtend","mergeIntoObj","mergeObjects","response","total","length","deepMerge","shift","functionBindCall","functionBind","objectDefineProperty","objectKeys","defineProperties","keys","runtime_aliases_arr","isArray","Array","consoleLog","forEach","indexOf","splice","console","log","error","iterator","reIsNativeCode","jsutils_nextTick","setImediate","test","Promise","resolved","resolve","fn","then","catch","e","immediates","processing","push","processPending","setTimeout","OBSERVABLE_IDENTIFIER","DEFAULT_PROP_DEFINITION","configurable","TRACKERS","external_Set_Set_default","a","WATCHER_IDENTIFIER","ARRAY_WATCHABLE_PROTO","HAS_ARRAY_WATCHABLE_PROTO","ARRAY_MUTATING_METHODS","isPureObject","obj","NOTIFY_QUEUE","isNotifyQueued","objectWatchProp","prop","callback","setupObjState","props","setupPropState","setupPropInterceptors","setupInterceptors","storeCallback","makeObservable","unWatch","propSetup","dependents","delete","unsetCallbackAsWatcherOf","watchers","destroy","writable","deep","setupCallbackStore","store","async","isQueued","notify","val","undefined","parent","propOldDescriptor","getOwnPropertyDescriptor","size","set","newVal","priorVal","walk","force","arr","arrCurrentProto","__proto__","arrProtoInterceptor","method","args","this","makeArrayWatchable","walkArray","walkObject","pushCallbacksToQueue","execCallback","cb","flushQueue","queueCallbackAndScheduleRun","add","queuedCallbacks","clear","x","asDependent","setCallbackAsWatcherOf","watchersSet","watching","watcherList","src_objectWatchProp","domAddEventListener","ele","event","capture","events","split","evListeners","evName","addEventListener","remove","removeEventListener","listeners","domutils_domAddEventListener","WeakMap","counter","Date","now","Math","random","entry","has","jsutils_dataStore","stash","PRIVATE","STATE_SYMBOL","external_Symbol_Symbol_Symbol_","elementHasAttributeForProp","propDef","aliases","some","propAlias","hasAttribute","getState","instance","state","ready","readyWatcher","destroyCallbacks","destroyQueued","isMounted","hasTemplate","propDefintions","getPropsDefinition","constructor","required","filter","propName","_isAlias","setReadyState","every","ComponentClass","getComponentClassState","propsDef","propAliasDef","propNameAlias","template","observedAttrs","getComponentTemplate","Component","classState","document","createElement","innerHTML","supportsShadyCSS","getGlobal","ShadyCSS","SHADOW_DOM_SUPPORTED","head","createShadowRoot","attachShadow","EV_DEFAULT_INIT","bubbles","cancelable","composed","ComponentElement_ComponentElement","HTMLElement","super","setupComponent","tagName","Error","[object Object]","prepareTemplate","prepareComponentTemplate","customElements","delayDestroy","useShadow","shadowMode","eleInstance","componentInstance","ownerDocument","importNode","content","getComponentInstanceTemplate","eventInitOptions","observedAttributes","propList","attr","attributeChangedCallback","oldValue","newValue","clearTimeout","parentNode","removeChild","onDestroy","_$props","propDefinitions","propValue","default","boolean","attrVal","getAttribute","geAttributeValueForProp","$ui","_$ui","$","selector","querySelector","$$","result","querySelectorAll","slice","init","unready","mounted","unmounted","emit","eventName","data","eventInit","dispatchEvent","CustomEvent","detail","on","eventNames","onPropsChange","connectedCallback","styleElement","styleComponentInstanceElement","disconnectedCallback","component","lastReadyState","handleReadyChanges","appendChild","renderTemplate","shadowRoot","RE_UPPER_CASE_LETTERS","NOOP","prop_prop","setupProp","options","Proto","descriptor","setter","setAttribute","removeAttribute","classProps","getClassProps","toLowerCase","str","replace","match","p1","getKebabCase","getPropDef","lazyProp","propAliasName","aliasPropGetterSetterSetup","$propName","isUpdateMode","arguments","getOwnPropertyNames","writeToPropName","propFn","WINDOW","DOCUMENT","SCROLL_TOP","SCROLL_LEFT","PAGE_Y_OFFSET","PAGE_X_OFFSET","UNDEFINED","PX","isLeft","domutils_domPosition","positionEle","anchorEle","positionEleStyles","style","anchorEleRect","getBoundingClientRect","positionEleRect","opt","my","at","viewport","scrollTop","scrollLeft","documentElement","body","getViewportScrollInfo","viewportBottom","innerHeight","viewportRight","innerWidth","isMyLeft","isMyRight","isAtLeft","isAtRight","posLeft","left","posTop","bottom","right","width","height","top","removeBodyEvent","eleInst","_bodyEv","Popup_Popup","_dec","_dec2","_dec3","_dec4","_dec5","_applyDecoratedDescriptor","_class","for","show","autoClose","position","_handleShowProp","ev","contains","target","domInsertBefore","newNode","referenceNode","insertBefore","INTERCEPTOR_TOP_1","INTERCEPTOR_TOP_2","INTERCEPTOR_BOTTOM_1","INTERCEPTOR_BOTTOM_2","INTERCEPTOR_LIST","INTERCEPTOR_STYLES","ContentAccess_ContentAccess","ContentAccess_dec","ContentAccess_dec2","ContentAccess_applyDecoratedDescriptor","ContentAccess_class","block","onParent","isRefocusing","_handleBlock","removeTabInterceptors","inst","innerText","_role","createTabInterceptorElements","firstChild","nextSibling","insertTabInterceptors","handleEvent","type","focus","interceptorEle","__webpack_exports__","VERSION","g","eval"],"mappings":"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","file":"common-widget-elements.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"CommonWidgetElements\"] = factory();\n\telse\n\t\troot[\"CommonWidgetElements\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","module.exports = (Set.Set = Set);","\r\nexport const GLOBAL = (() => {\r\n    const undef = 'undefined';\r\n    /* global self, window, global */\r\n    if (typeof window !== undef) { return window; }\r\n    if (typeof global !== undef) { return global; }\r\n    if (typeof self !== undef) { return self; }\r\n    return Function('return this;')();\r\n})();\r\n\r\nexport function getGlobal() {\r\n    return GLOBAL;\r\n}\r\nexport default getGlobal;","module.exports = (Symbol.Symbol = Symbol);","const OBJECT_TYPE   = \"[object Object]\";\r\nconst _toString     = Function.call.bind(Object.prototype.toString);\r\n\r\n//============================================================\r\n\r\n/**\r\n * Extends an object with the properties of another.\r\n *\r\n * @param {Object|Boolean} mergeIntoObj\r\n *  The object that will have the properties of every other object provided\r\n *  on input merged into. This can also be a `Boolean`, in which case,\r\n *  a deep merge of objects will be done - argument number 2 will\r\n *  become the `mergeIntoObj`.\r\n * @param {...Object} mergeObjects\r\n *\r\n * @return {Object}\r\n */\r\nexport function objectExtend(mergeIntoObj, ...mergeObjects) {\r\n    let response    = mergeIntoObj || {};\r\n    let total       = mergeObjects.length;\r\n    let deepMerge   = false;\r\n    let i;\r\n    let key;\r\n\r\n    if (typeof mergeIntoObj === \"boolean\") {\r\n        deepMerge   = mergeIntoObj;\r\n        response    = mergeObjects.shift() || {};\r\n        total       = mergeObjects.length;\r\n    }\r\n\r\n    for (i = 0; i < total; i++) {\r\n        if (!mergeObjects[i]) {\r\n            continue;\r\n        }\r\n\r\n        for (key in mergeObjects[i]) {\r\n            if (mergeObjects[i].hasOwnProperty(key)){\r\n                if (\r\n                    deepMerge &&\r\n                    _toString(response[key]) === OBJECT_TYPE &&\r\n                    _toString(mergeObjects[i][key]) === OBJECT_TYPE\r\n                ) {\r\n                    response[key] = objectExtend( true, response[key], mergeObjects[i][key]);\r\n                    \r\n                } else {\r\n                    response[key] = mergeObjects[i][key];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return response;\r\n}\r\nexport default objectExtend;","\r\n// Function\r\n    // functionBind(fn, fnParent)\r\nexport const functionBind       = Function.bind.call.bind(Function.bind);\r\n    // usage: functionBindCall(Array.prototype.forEach) // generates a bound function to Array.prototype.forEach.call\r\nexport const functionBindCall   = functionBind(Function.call.bind, Function.call);\r\n\r\n// Object\r\nexport const objectDefineProperty     = Object.defineProperty;\r\nexport const objectDefineProperties   = Object.defineProperties;\r\nexport const objectKeys               = Object.keys;\r\n\r\n\r\n// Array\r\nconst arr = [];\r\nexport const isArray        = Array.isArray;\r\nexport const arrayForEach   = functionBindCall(arr.forEach);\r\nexport const arrayIndexOf   = functionBindCall(arr.indexOf);\r\nexport const arraySplice    = functionBindCall(arr.splice);\r\n\r\n// Logging\r\nexport const consoleLog = console.log;\r\nexport const consoleError = console.error || consoleLog;\r\n\r\n// Iterators\r\nexport const SymbolIterator = \"undefined\" !== typeof Symbol && Symbol.iterator ? Symbol.iterator : \"@@iterator\";","let reIsNativeCode = /native code/i;\r\n\r\n/**\r\n * Executes a function at the end of the current event Loop - during micro-task processing\r\n *\r\n * @param {Function} callback\r\n */\r\nlet nextTick = (function(){\r\n    if (typeof setImediate !== \"undefined\" && reIsNativeCode.test(setImediate.toString())) {\r\n        return setImediate;\r\n    }\r\n\r\n    // Native Promsie? Use it.\r\n    if (typeof Promise === 'function' && reIsNativeCode.test(Promise.toString())) {\r\n        let resolved = Promise.resolve();\r\n        return function _nextTick(fn) {\r\n            resolved.then(fn).catch(e => console.log(e));\r\n        };\r\n    }\r\n\r\n    // fallback to setTimeout\r\n    // From: https://bugzilla.mozilla.org/show_bug.cgi?id=686201#c68\r\n    let immediates = [];\r\n    let processing = false;\r\n\r\n    function processPending() {\r\n        setTimeout(function() {\r\n            immediates.shift()();\r\n            if (immediates.length) {\r\n                processPending();\r\n\r\n            } else {\r\n                processing = false;\r\n            }\r\n        }, 0);\r\n    }\r\n\r\n    return function _nextTick(fn) {\r\n        immediates.push(fn);\r\n        if (!processing) {\r\n            processing = true;\r\n            processPending();\r\n        }\r\n    };\r\n})();\r\n\r\nexport default nextTick;\r\nexport { nextTick };\r\n","import {objectDefineProperty, objectKeys, isArray} from \"common-micro-libs/src/jsutils/runtime-aliases\";\r\nimport Set from \"common-micro-libs/src/jsutils/Set\"\r\nimport nextTick from \"common-micro-libs/src/jsutils/nextTick\"\r\n\r\n//---------------------------------------------------------------------------\r\nexport const OBSERVABLE_IDENTIFIER = \"___$observable$___\"; // FIXME: this should be a Symbol()\r\n\r\nconst DEFAULT_PROP_DEFINITION = { configurable: true, enumerable: true };\r\nconst TRACKERS = new Set();\r\nconst WATCHER_IDENTIFIER = \"___$watching$___\";\r\nconst ARRAY_WATCHABLE_PROTO = \"__$watchable$__\";\r\nconst HAS_ARRAY_WATCHABLE_PROTO = `__$is${ARRAY_WATCHABLE_PROTO}`;\r\nconst ARRAY_MUTATING_METHODS = [\r\n    \"pop\",\r\n    \"push\",\r\n    \"shift\",\r\n    \"splice\",\r\n    \"unshift\",\r\n    \"sort\",\r\n    \"reverse\"\r\n];\r\nconst isPureObject = obj => obj && Object.prototype.toString.call(obj) === \"[object Object]\";\r\nconst NOTIFY_QUEUE = new Set();\r\nlet isNotifyQueued = false;\r\n\r\n/**\r\n * A lightweight utility to Watch an object's properties and get notified when it changes.\r\n *\r\n * @param {Object} obj\r\n *\r\n * @param {String} [prop]\r\n *  the property to be watched. If left undefined, then all existing properties are watched.\r\n *\r\n * @param {Function} [callback]\r\n *  The callback to be executed when property or object changes. If left undefined, then\r\n *  `obj` is only made observable (internal structure created and all current enumerable'\r\n *  properties are made \"watchable\")\r\n *\r\n *  __NOTE:__\r\n *  The callback will include a new non-enumerable property named `stopWatchingAll` of\r\n *  type `Function` that can be used to remove the given callback from all places where\r\n *  it is being used to watch a property. example:\r\n *\r\n *      const obj1 = { first: \"john\" };\r\n *      const obj2 = { last: \"smith\" };\r\n *      const watcher = () => console.log(\"changed\");\r\n *\r\n *      objectWatchProp(obj, \"first\", watcher);\r\n *      objectWatchProp(obj1, \"last\", watcher);\r\n *\r\n *      watcher.stopWatchingAll(); // removes callback from all objects that it is watching\r\n *\r\n *\r\n * @return {ObjectUnwatchProp}\r\n * Return a function to unwatch the property. Function also has a static property named\r\n * `destroy` that will do the same thing (ex. `unwatch.destroy()` is same as `unwatch()`)\r\n *\r\n * @example\r\n *\r\n * const oo = {};\r\n * const notifyNameChanged =() => console.log(`name changed: ${oo.name}`);\r\n * const unWatchName = objectWatchProp(oo, \"name\", notifyNameChanged);\r\n *\r\n * oo.name = \"paul\"; // console outputs: name changed: paul\r\n * unWatchName(); // stop watching\r\n * notifyNameChanged.stopWatchingAll(); // callback's `stopWatchingAll()` can also be called.\r\n *\r\n * @example\r\n *\r\n * const oo = {\r\n *      name: \"paul\",\r\n *      country: \"usa\"\r\n * };\r\n *\r\n * // watch all changes to object\r\n * objectWatchProp(oo, null, () => console.log(\"Something changed in object\"));\r\n *\r\n * // OR: make all properties of object observable\r\n * objectWatchProp(oo);\r\n *\r\n */\r\nexport function objectWatchProp(obj, prop, callback) {\r\n    if (!obj[OBSERVABLE_IDENTIFIER]) {\r\n        setupObjState(obj);\r\n    }\r\n\r\n    // Convert prop to observable?\r\n    if (prop && !obj[OBSERVABLE_IDENTIFIER].props[prop]) {\r\n        setupPropState(obj, prop);\r\n        setupPropInterceptors(obj, prop);\r\n    }\r\n    // Else: do we need to setup the interceptors (again)?\r\n    // (Used by Computed props when they are created against a prop has\r\n    // been setup as an observable)\r\n    else if (prop && obj[OBSERVABLE_IDENTIFIER].props[prop].setupInterceptors) {\r\n        setupPropInterceptors(obj, prop);\r\n    }\r\n\r\n    if (prop && callback) {\r\n        obj[OBSERVABLE_IDENTIFIER].props[prop].storeCallback(callback);\r\n    }\r\n    else if (!prop) {\r\n        makeObservable(obj, false);\r\n\r\n        if (callback) {\r\n            obj[OBSERVABLE_IDENTIFIER].storeCallback(callback);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Unwatch an object property or object.\r\n     *\r\n     * @typedef {Function} ObjectUnwatchProp\r\n     * @property {Function} destroy Same as function returned.\r\n     */\r\n    const unWatch = destroyWatcher.bind(\r\n        obj,\r\n        callback,\r\n        (prop ? obj[OBSERVABLE_IDENTIFIER].props[prop] : obj[OBSERVABLE_IDENTIFIER])\r\n    );\r\n\r\n    unWatch.destroy = unWatch;\r\n    return unWatch;\r\n}\r\n\r\nexport function setupObjState(obj) {\r\n    if (!obj[OBSERVABLE_IDENTIFIER]) {\r\n        objectDefineProperty(obj, OBSERVABLE_IDENTIFIER, {\r\n            configurable: true,\r\n            writable: true,\r\n            deep: false,\r\n            value: {\r\n                props: {},\r\n                dependents: new Set(),\r\n                watchers: new Set(),\r\n                storeCallback: storeCallback\r\n            }\r\n        });\r\n        setupCallbackStore(obj[OBSERVABLE_IDENTIFIER].dependents, false);\r\n        setupCallbackStore(obj[OBSERVABLE_IDENTIFIER].watchers, true);\r\n    }\r\n}\r\n\r\nfunction setupCallbackStore (store, async = false) {\r\n    store.async = async;\r\n    store.isQueued = false;\r\n    store.notify = notify;\r\n}\r\n\r\nfunction setupPropState(obj, prop) {\r\n    if (!obj[OBSERVABLE_IDENTIFIER].props[prop]) {\r\n        obj[OBSERVABLE_IDENTIFIER].props[prop] = {\r\n            val: undefined,\r\n            dependents: new Set(),\r\n            watchers: new Set(),\r\n            parent: obj[OBSERVABLE_IDENTIFIER],\r\n            storeCallback: storeCallback,\r\n            setupInterceptors: true,\r\n            deep: obj[OBSERVABLE_IDENTIFIER].deep\r\n        };\r\n        setupCallbackStore(obj[OBSERVABLE_IDENTIFIER].props[prop].dependents, false);\r\n        setupCallbackStore(obj[OBSERVABLE_IDENTIFIER].props[prop].watchers, true);\r\n    }\r\n    return obj[OBSERVABLE_IDENTIFIER].props[prop];\r\n}\r\n\r\nfunction setupPropInterceptors(obj, prop) {\r\n    const propOldDescriptor =\r\n        Object.getOwnPropertyDescriptor(obj, prop) || DEFAULT_PROP_DEFINITION;\r\n\r\n    if (!propOldDescriptor.get) {\r\n        obj[OBSERVABLE_IDENTIFIER].props[prop].val = obj[prop];\r\n\r\n        // If prop is marked as `deep` then walk the value and convert it to observables\r\n        if (obj[OBSERVABLE_IDENTIFIER].props[prop].deep) {\r\n            makeObservable(obj[OBSERVABLE_IDENTIFIER].props[prop].val);\r\n        }\r\n    }\r\n\r\n    objectDefineProperty(obj, prop, {\r\n        configurable: propOldDescriptor.configurable || false,\r\n        enumerable: propOldDescriptor.enumerable || false,\r\n        get() {\r\n            if (TRACKERS.size) {\r\n                TRACKERS.forEach(\r\n                    obj[OBSERVABLE_IDENTIFIER].props[prop].storeCallback,\r\n                    obj[OBSERVABLE_IDENTIFIER].props[prop]\r\n                );\r\n            }\r\n\r\n            if (propOldDescriptor.get) {\r\n                return propOldDescriptor.get.call(obj);\r\n            }\r\n\r\n            return obj[OBSERVABLE_IDENTIFIER].props[prop].val;\r\n        },\r\n        set(newVal) {\r\n            const priorVal = obj[prop];\r\n            if (propOldDescriptor.set) {\r\n                newVal = propOldDescriptor.set.call(obj, newVal);\r\n            } else {\r\n                obj[OBSERVABLE_IDENTIFIER].props[prop].val = newVal;\r\n            }\r\n\r\n            // If this `deep` is true and the new value is an object,\r\n            // then ensure its observable\r\n            if (obj[OBSERVABLE_IDENTIFIER].props[prop].deep) {\r\n                makeObservable(newVal);\r\n            }\r\n\r\n            if (newVal !== priorVal) {\r\n                obj[OBSERVABLE_IDENTIFIER].props[prop].watchers.notify();\r\n                obj[OBSERVABLE_IDENTIFIER].props[prop].dependents.notify();\r\n                obj[OBSERVABLE_IDENTIFIER].watchers.notify();\r\n            }\r\n\r\n            return newVal;\r\n        }\r\n    });\r\n\r\n    obj[OBSERVABLE_IDENTIFIER].props[prop].setupInterceptors = false;\r\n\r\n    // Notify object watchers that a new prop was added\r\n    if (propOldDescriptor === DEFAULT_PROP_DEFINITION) {\r\n        obj[OBSERVABLE_IDENTIFIER].watchers.notify();\r\n    }\r\n}\r\n\r\n/**\r\n * Makes an object (deep) observable.\r\n *\r\n * @param {Object|Array} obj\r\n * @param {Boolean} [walk=true]\r\n *  If `true` (default), the object's property values are walked and\r\n *  also make observable.\r\n * @param {Boolean} [force=false]\r\n *  if true, then even if object looks like it might have already been\r\n *  converted to an observable, it will still be walked\r\n *  (if `walk` is `true`)\r\n *\r\n * @return {Object|Array} Original `obj` is returned\r\n */\r\nexport function makeObservable(obj, walk = true, force = false) {\r\n    if (!isPureObject(obj) && !isArray(obj)) {\r\n        return obj;\r\n    }\r\n\r\n    if (!obj[OBSERVABLE_IDENTIFIER]) {\r\n        // OBJECT\r\n        if (isPureObject(obj)) {\r\n            setupObjState(obj, force);\r\n        }\r\n        // ARRAY\r\n        else if (isArray(obj)) {\r\n            makeArrayWatchable(obj, force);\r\n        }\r\n    }\r\n\r\n    // If object is marked as \"deep\" and we are not forcing the walk,\r\n    // then no need to do anything. Otherwise, mark this object as\r\n    // being `deep` and keep going\r\n    if (!force && obj[OBSERVABLE_IDENTIFIER].deep) {\r\n        return;\r\n    }\r\n    else if (walk) {\r\n        obj[OBSERVABLE_IDENTIFIER].deep = true;\r\n    }\r\n\r\n    if (isArray(obj)) {\r\n        walkArray(obj);\r\n    }\r\n    else {\r\n        walkObject(obj);\r\n    }\r\n\r\n    return obj;\r\n}\r\n\r\n\r\nfunction walkArray(arr, force) {\r\n    for (let i=0, t=arr.length; i<t; i++) {\r\n        makeObservable(arr[i], true, force);\r\n    }\r\n}\r\n\r\nfunction walkObject(obj, force) {\r\n    // make ALL props observable\r\n    const keys = objectKeys(obj);\r\n\r\n    for (let i=0, t=keys.length; i<t; i++) {\r\n        if (!obj[OBSERVABLE_IDENTIFIER].props[keys[i]]) {\r\n            setupPropState(obj, keys[i]);\r\n            setupPropInterceptors(obj, keys[i]);\r\n        }\r\n\r\n        // Do we need to walk this property's value?\r\n        if (\r\n            !obj[OBSERVABLE_IDENTIFIER].props[keys[i]].deep ||\r\n            force\r\n        ) {\r\n            obj[OBSERVABLE_IDENTIFIER].props[keys[i]].deep = true;\r\n\r\n            if (isPureObject(obj[keys[i]])) {\r\n                makeObservable(obj[keys[i]], true, force);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction notify() {\r\n    // this: new Set(). Set instance could have two additional attributes: async ++ isQueued\r\n\r\n    if (!this.size) {\r\n        return;\r\n    }\r\n\r\n    // If the watcher Set() is synchronous, then execute the callbacks now\r\n    if (!this.async) {\r\n        this.forEach(execCallback);\r\n\r\n    } else {\r\n        this.forEach(pushCallbacksToQueue);\r\n    }\r\n\r\n    queueCallbackAndScheduleRun();\r\n}\r\n\r\nexport function queueCallbackAndScheduleRun(cb) {\r\n    if (cb) {\r\n        pushCallbacksToQueue(cb);\r\n    }\r\n\r\n    if (isNotifyQueued || !NOTIFY_QUEUE.size) {\r\n        return;\r\n    }\r\n\r\n    isNotifyQueued = true;\r\n    nextTick(flushQueue);\r\n}\r\n\r\nfunction pushCallbacksToQueue(callback) {\r\n    NOTIFY_QUEUE.add(callback);\r\n}\r\n\r\nfunction execCallback(cb) {\r\n    cb();\r\n}\r\n\r\nfunction flushQueue() {\r\n    const queuedCallbacks = [...NOTIFY_QUEUE];\r\n    NOTIFY_QUEUE.clear();\r\n    isNotifyQueued = false;\r\n    for (let x=0, total=queuedCallbacks.length; x<total; x++) {\r\n        queuedCallbacks[x]();\r\n    }\r\n    queuedCallbacks.length = 0;\r\n}\r\n\r\nfunction storeCallback(callback) {\r\n    // this === PropState\r\n    if (callback.asDependent && this.dependents) {\r\n        setCallbackAsWatcherOf(callback, this.dependents);\r\n        this.dependents.add(callback);\r\n    } else {\r\n        setCallbackAsWatcherOf(callback, this.watchers);\r\n        this.watchers.add(callback);\r\n    }\r\n}\r\n\r\nexport function destroyWatcher(callback, propSetup) {\r\n    // this == obj\r\n    if (callback) {\r\n        // Object state does not have dependents\r\n        if (propSetup.dependents) {\r\n            propSetup.dependents.delete(callback);\r\n            unsetCallbackAsWatcherOf(callback, propSetup.dependents);\r\n        }\r\n        propSetup.watchers.delete(callback);\r\n        unsetCallbackAsWatcherOf(callback, propSetup.watchers);\r\n    }\r\n}\r\n\r\n/**\r\n * Sets a callback to be added to the list of watchers for any property\r\n * that is accessed after this function is called.\r\n *\r\n * @param {Function} callback\r\n *  The callback to be added to dependency list of watchers.\r\n *  NOTE: the callback will modified to include a new property\r\n *  `stopWatchingAll()` which can be used to remove the given callback\r\n *  from ALL dependencies that include it.\r\n *\r\n */\r\nexport function setDependencyTracker(callback) {\r\n    TRACKERS.add(callback);\r\n}\r\n\r\n/**\r\n * Removes a callback from being added to a property's watchers as they\r\n * are accessed.\r\n *\r\n * @param {Function} callback\r\n */\r\nexport function unsetDependencyTracker(callback) {\r\n    TRACKERS.delete(callback);\r\n}\r\n\r\n/**\r\n * Removes the given callback from all property watchers lists that it may\r\n * be included in.\r\n *\r\n * @param {Function} callback\r\n */\r\nexport function stopTrackerNotification(callback) {\r\n    if (callback[WATCHER_IDENTIFIER]) {\r\n        callback[WATCHER_IDENTIFIER].stopWatchingAll();\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Store a reference to the Set instance provided on input, on the callback.\r\n * @private\r\n * @param {Function} callback\r\n * @param {Set} watchersSet\r\n */\r\nfunction setCallbackAsWatcherOf(callback, watchersSet) {\r\n    if (!callback[WATCHER_IDENTIFIER]) {\r\n        objectDefineProperty(callback, WATCHER_IDENTIFIER, {\r\n            configurable: true,\r\n            writable: true,\r\n            value: {\r\n                watching: new Set()\r\n            }\r\n        });\r\n        objectDefineProperty(callback, \"stopWatchingAll\", {\r\n            configurable: true,\r\n            writable: true,\r\n            value() {\r\n                callback[WATCHER_IDENTIFIER].watching.forEach(watcherList =>\r\n                    watcherList.delete(callback)\r\n                );\r\n                callback[WATCHER_IDENTIFIER].watching.clear();\r\n            }\r\n        });\r\n    }\r\n\r\n    callback[WATCHER_IDENTIFIER].watching.add(watchersSet);\r\n}\r\n\r\n/**\r\n * Removes the reference to the given Set instance from the callback function provided\r\n * @private\r\n * @param {Function} callback\r\n * @param {Set} watchersSet\r\n */\r\nfunction unsetCallbackAsWatcherOf(callback, watchersSet) {\r\n    if (callback[WATCHER_IDENTIFIER]) {\r\n        callback[WATCHER_IDENTIFIER].watching.delete(watchersSet);\r\n    }\r\n}\r\n\r\n\r\nexport function makeArrayWatchable(arr) {\r\n    if (!arr[OBSERVABLE_IDENTIFIER]) {\r\n        setupObjState(arr);\r\n    }\r\n\r\n    // If array already has a watchable prototype, then exit\r\n    if (arr[HAS_ARRAY_WATCHABLE_PROTO]) {\r\n        return;\r\n    }\r\n\r\n    const arrCurrentProto = arr.__proto__; // eslint-disable-line\r\n\r\n    // Create prototype interceptors?\r\n    if (!arrCurrentProto[ARRAY_WATCHABLE_PROTO]) {\r\n        const arrProtoInterceptor = Object.create(arrCurrentProto);\r\n        ARRAY_MUTATING_METHODS.forEach(method => {\r\n            objectDefineProperty(arrProtoInterceptor, method, {\r\n                configurable: true,\r\n                writable: true,\r\n                value: function arrayMethodInterceptor(...args) {\r\n                    const response = arrCurrentProto[method].call(this, ...args);\r\n                    this[OBSERVABLE_IDENTIFIER].dependents.notify();\r\n                    this[OBSERVABLE_IDENTIFIER].watchers.notify();\r\n                    return response;\r\n                }\r\n            });\r\n        });\r\n\r\n        // VALUE ADD: include a `size` read only attribute\r\n        objectDefineProperty(arrProtoInterceptor, \"size\", {\r\n            configurable: true,\r\n            get() {\r\n                if (TRACKERS.size) {\r\n                    TRACKERS.forEach(\r\n                        this[OBSERVABLE_IDENTIFIER].storeCallback,\r\n                        this[OBSERVABLE_IDENTIFIER]\r\n                    );\r\n                }\r\n                return this.length;\r\n            }\r\n        });\r\n\r\n        // Add flag to new array interceptor prototype indicating its watchable\r\n        objectDefineProperty(arrProtoInterceptor, HAS_ARRAY_WATCHABLE_PROTO, {\r\n            value: true\r\n        });\r\n\r\n        // Store the new interceptor prototype on the real prototype\r\n        objectDefineProperty(arrCurrentProto, ARRAY_WATCHABLE_PROTO, {\r\n            configurable: true,\r\n            writable: true,\r\n            value: arrProtoInterceptor\r\n        });\r\n    }\r\n\r\n    arr.__proto__ = arrCurrentProto[ARRAY_WATCHABLE_PROTO]; // eslint-disable-line\r\n}\r\n\r\n\r\nexport default objectWatchProp;\r\n","/**\r\n * Adds an event handler to a DOM element and returns back an\r\n * object that allows for removal of the event.\r\n *\r\n * @function domAddEventListener\r\n *\r\n * @param {HTMLElement} ele\r\n * @param {String} event\r\n *  The event to listen to (ex. `click`). Multiple events can be defined\r\n *  by separating them with whitespace\r\n * @param {Function} callback\r\n * @param {Boolean} [capture]\r\n *\r\n * @return DOMEventListener\r\n *\r\n * @example\r\n *\r\n * var listener = domAddEventHandler(myEle, \"click\", function(){});\r\n * ...\r\n * listener.remove();\r\n */\r\nexport function domAddEventListener(ele, event, callback, capture) {\r\n    let events      = event.split(/\\s+/);\r\n    let evListeners = {};\r\n\r\n    events.forEach(evName => {\r\n        ele.addEventListener(evName, callback, capture);\r\n        evListeners[evName] = {\r\n            remove: () => ele.removeEventListener(evName, callback, capture)\r\n        }\r\n    });\r\n\r\n    /**\r\n     * A DOM Event listener.\r\n     *\r\n     * @typedef {Object} DOMEventListener\r\n     *\r\n     * @property {Function} remove\r\n     * @property {Object} listeners\r\n     *  List of listeners that were bound to the DOM element. Each listeners has a\r\n     *  corresponding `.remove()` method.\r\n     */\r\n    return Object.create({\r\n        listeners: evListeners,\r\n        remove: function () {\r\n            events.forEach(evName => evListeners[evName].remove());\r\n        }\r\n    });\r\n}\r\nexport default domAddEventListener;\r\n","// POLYFILL FOR WEAKMAP\r\n//  [pt] changed how \"delete\" is defined so that it can work in IE8\r\n\r\n/* jshint ignore:start */\r\n/**\r\n * @license\r\n * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\r\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\r\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\r\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\r\n * Code distributed by Google as part of the polymer project is also\r\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\r\n */\r\nif (typeof WeakMap === 'undefined') {\r\n  (function() {\r\n    var defineProperty = Object.defineProperty;\r\n    var counter = Date.now() % 1e9;\r\n\r\n    var WeakMap = function() {\r\n      this.name = '__st' + (Math.random() * 1e9 >>> 0) + (counter++ + '__');\r\n    };\r\n\r\n    WeakMap.prototype = {\r\n      set: function(key, value) {\r\n        var entry = key[this.name];\r\n        if (entry && entry[0] === key)\r\n          entry[1] = value;\r\n        else\r\n          defineProperty(key, this.name, {value: [key, value], writable: true});\r\n        return this;\r\n      },\r\n      get: function(key) {\r\n        var entry;\r\n        return (entry = key[this.name]) && entry[0] === key ?\r\n            entry[1] : undefined;\r\n      },\r\n      // [pt] Quotes around the delete property needed for IE8\r\n      \"delete\": function(key) {\r\n        var entry = key[this.name];\r\n        if (!entry || entry[0] !== key) return false;\r\n        entry[0] = entry[1] = undefined;\r\n        return true;\r\n      },\r\n      has: function(key) {\r\n        var entry = key[this.name];\r\n        if (!entry) return false;\r\n        return entry[0] === key;\r\n      }\r\n    };\r\n\r\n    window.WeakMap = WeakMap;\r\n  })();\r\n}\r\n/* jshint ignore:end */\r\n\r\n/**\r\n * Returns an object that contains an initialized WeakMap (`stash` property)\r\n * where data can be stored.\r\n *\r\n * @namespace dataStore\r\n *\r\n */\r\nvar dataStore = /** @lends dataStore */{\r\n    /**\r\n     * Stash data here.\r\n     * @type WeakMap\r\n     */\r\n    stash:  new WeakMap(),\r\n    /**\r\n     * Create a private data store and return it.\r\n     * @return {WeakMap}\r\n     */\r\n    create: function(){\r\n        return new WeakMap();\r\n    }\r\n};\r\n\r\nexport default dataStore;\r\nexport { dataStore };\r\n","import objectExtend from \"common-micro-libs/src/jsutils/objectExtend\"\r\nimport dataStore from \"common-micro-libs/src/jsutils/dataStore\"\r\nimport objectWatchProp from \"observables/src/objectWatchProp\"\r\nimport { isArray, objectKeys } from \"common-micro-libs/src/jsutils/runtime-aliases\"\r\nimport {Symbol} from \"common-micro-libs/src/jsutils/Symbol\"\r\n\r\n//============================================================================\r\nexport const PRIVATE = dataStore.create();\r\n\r\nexport const STATE_SYMBOL = Symbol(\"state\");\r\n\r\n/**\r\n * Checks if the element has an attribute set that matches any of the aliases for a prop\r\n *\r\n * @param {ComponentElement} ele\r\n * @param {ComponentElement~PropDefinition} propDef\r\n *\r\n * @return {Boolean}\r\n */\r\nexport function elementHasAttributeForProp(ele, propDef) {\r\n    return propDef.aliases.some(propAlias => ele.hasAttribute(propAlias));\r\n}\r\n\r\nexport function geAttributeValueForProp(ele, propDef) {\r\n    let attrVal = \"\";\r\n    propDef.aliases.some(propAlias => {\r\n        if (ele.hasAttribute(propAlias)) {\r\n            attrVal = ele.getAttribute(propAlias);\r\n            return true;\r\n        }\r\n    });\r\n    return attrVal;\r\n}\r\n\r\nexport function getState(instance) {\r\n    if (!PRIVATE.has(instance)) {\r\n        let state = {\r\n            ready: false,           // We have all required params\r\n            readyWatcher: null,\r\n            props: instance.props,\r\n            destroyCallbacks: [],\r\n            destroyQueued: null,\r\n            isMounted: false,\r\n            hasTemplate: false // template has been inserted into component.$ui\r\n        };\r\n\r\n        // Create all props\r\n        const propDefintions    = getPropsDefinition(instance.constructor);\r\n        const required          = objectKeys(propDefintions).filter(propName => !propDefintions[propName]._isAlias && propDefintions[propName].required);\r\n        const setReadyState     = () => {\r\n            if (!required.length || required.every(propName => !!state.props[propName])) {\r\n                state.ready = true;\r\n            }\r\n            else {\r\n                state.ready = false;\r\n            }\r\n        };\r\n\r\n        required.forEach(propName => objectWatchProp(state.props, propName, setReadyState));\r\n        setReadyState();\r\n        PRIVATE.set(instance, state);\r\n    }\r\n    return PRIVATE.get(instance);\r\n}\r\n\r\n\r\n/**\r\n * Returns a kebab-case representation of the given string on input. Essentially, replaces\r\n * each Capital letter with a `-` followed by that letter in lower case.\r\n *\r\n * @param {String} str\r\n *\r\n * @return {String}\r\n *\r\n * @example\r\n *\r\n * getKebabCase(\"Paul\"); // => -paul\r\n * getKebabCase(\"paulTavares\"); // => paul-tavares\r\n */\r\nexport function getKebabCase(str) {\r\n    return str.replace(/([A-Z])/g, (match, p1) => \"-\" + p1.toLowerCase())\r\n}\r\n\r\n\r\n/**\r\n * Given a string in kebab case (ex. paul-tavares), this will return a CamelCase\r\n * representation of that string.\r\n *\r\n * @param {String} str\r\n *\r\n * @return {String}\r\n */\r\nexport function getCamelCase(str) {\r\n    return str.replace(/(-[a-z])/g, (match, p1) => p1.toUpperCase().substr(1))\r\n}\r\n\r\n/**\r\n *\r\n * @param ComponentClass\r\n * @returns {Object<String,ComponentElement~PropDefinition>}\r\n */\r\nexport function getPropsDefinition(ComponentClass) {\r\n    let state = getComponentClassState(ComponentClass);\r\n\r\n    if (!state.propsDef) {\r\n        state.propsDef = {};\r\n\r\n        // The props are stored internally (weakmap) once for the Component Class.\r\n        // The internal definition has the \"aliases\" expanded as well.\r\n        if (ComponentClass.propsDef) {\r\n            objectKeys(ComponentClass.propsDef).forEach(propName => {\r\n                state.propsDef[propName] = ComponentClass.propsDef[propName];\r\n                // expand aliases as well\r\n                if (isArray(state.propsDef[propName].aliases)) {\r\n                    const propAliasDef = objectExtend({}, ComponentClass.propsDef[propName], { _isAlias: true });\r\n                    state.propsDef[propName].aliases.forEach(\r\n                        propNameAlias => !state.propsDef[propNameAlias] &&\r\n                                        (state.propsDef[propNameAlias] = propAliasDef));\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    return state.propsDef;\r\n}\r\n\r\n/**\r\n * Returns the internal state for the Component Class\r\n *\r\n * @param {ComponentElement} ComponentClass\r\n *\r\n * @return {Object}\r\n */\r\nexport function getComponentClassState(ComponentClass) {\r\n    if (!PRIVATE.has(ComponentClass)) {\r\n        PRIVATE.set(ComponentClass, {\r\n            propsDef: null,\r\n            template: null,\r\n            observedAttrs: null\r\n        });\r\n    }\r\n    return PRIVATE.get(ComponentClass);\r\n}\r\n\r\n/**\r\n * Returns a clone of the Class's template - ready to be used/inserted\r\n * into a instance of the class\r\n *\r\n * @param {ComponentElement} componentInstance\r\n *\r\n * @return {HTMLElement}\r\n */\r\nexport function getComponentInstanceTemplate(componentInstance) {\r\n    return componentInstance.ownerDocument.importNode(\r\n        getComponentTemplate(componentInstance.constructor).content,\r\n        true\r\n    );\r\n}\r\n\r\n/**\r\n * Returns a `HTMLTemplateElement` that holds the ComponentElement's template\r\n *\r\n * @param {ComponentElement} Component\r\n *  The ComponentElement class\r\n *\r\n * @return {HTMLTemplateElement}\r\n */\r\nexport function getComponentTemplate(Component) {\r\n    if (\"string\" === typeof Component.template) {\r\n        const classState = getComponentClassState(Component);\r\n\r\n        if (!classState.template) {\r\n            classState.template = document.createElement(\"template\");\r\n            classState.template.innerHTML = Component.template;\r\n        }\r\n\r\n        return classState.template;\r\n    }\r\n\r\n    return Component.template;\r\n}\r\n\r\n","//--------------------------------------------------------------\r\n// Utilities to work with polyfills like ShadyCSS\r\n//--------------------------------------------------------------\r\nimport {GLOBAL} from \"common-micro-libs/src/jsutils/getGlobal\"\r\nimport {getComponentTemplate} from \"./utils\"\r\n\r\n//===========================================================================================\r\nconst supportsShadyCSS = () => !!GLOBAL.ShadyCSS;\r\n\r\n// FIXME: code below should check also for native support for CEs (protect against polyfills loaded in a native env?)\r\n\r\n/**\r\n * Prepares the component's styles for the given `define` tag name.\r\n * Method should be called at the time the Element is registered into CustomElementsRegistry\r\n *\r\n * @param {ComponentElement} Component\r\n * @param {String} tagName\r\n */\r\nexport function prepareComponentTemplate(Component, tagName){\r\n    // FIXME: need additional checks here. ONly use shady if ShadowDom is not supported natively.\r\n    //              need to use: ShadyCSS.nativeShadow to check if shadowroot is supported\r\n    //              Also: should we check the Component's \"useShadow\" property?\r\n    if (supportsShadyCSS()) {\r\n        GLOBAL.ShadyCSS.prepareTemplate(getComponentTemplate(Component), tagName);\r\n    }\r\n}\r\n\r\n/**\r\n * Styles the instance of a custom element using ShadyCSS\r\n *\r\n * @param {HTMLElement} componentInstance\r\n */\r\nexport function styleComponentInstanceElement(componentInstance) {\r\n    if (supportsShadyCSS()) {\r\n        GLOBAL.ShadyCSS.styleElement(componentInstance);\r\n    }\r\n}\r\n\r\n/**\r\n * Restyles a component's sub-tree. Use it when DOM might have been altered dynamically\r\n * and polyfilled styles needs to be applied.\r\n *\r\n * @param {HTMLElement} componentInstance\r\n */\r\nexport function reStyleComponentInstanceSubtree(componentInstance) {\r\n    if (supportsShadyCSS()) {\r\n        GLOBAL.ShadyCSS.styleSubtree(componentInstance)\r\n    }\r\n}","import objectExtend from \"common-micro-libs/src/jsutils/objectExtend\"\r\nimport { objectKeys, objectDefineProperty } from \"common-micro-libs/src/jsutils/runtime-aliases\"\r\nimport {objectWatchProp} from \"observables/src/objectWatchProp\"\r\nimport domAddEventListener from \"common-micro-libs/src/domutils/domAddEventListener\"\r\nimport {\r\n    getState,\r\n    PRIVATE,\r\n    getPropsDefinition,\r\n    getComponentInstanceTemplate,\r\n    getComponentClassState,\r\n    elementHasAttributeForProp,\r\n    geAttributeValueForProp\r\n} from \"./utils\"\r\nimport {\r\n    prepareComponentTemplate,\r\n    styleComponentInstanceElement\r\n} from \"./polyfill-support\"\r\n\r\n//============================================================================\r\nconst SHADOW_DOM_SUPPORTED = document.head.createShadowRoot || document.head.attachShadow;\r\nconst EV_DEFAULT_INIT = { bubbles: false, cancelable: false, composed: false };\r\n\r\n\r\n/**\r\n * A generic class for building widgets based on HTML Custom Elements.\r\n *\r\n * @extends HTMLElement\r\n *\r\n */\r\nexport class ComponentElement extends HTMLElement {\r\n    constructor(...args) {\r\n        const self = super(...args) || this;\r\n        setupComponent(self);\r\n        return self;\r\n    }\r\n\r\n    //==============================================================\r\n    //  Static Members\r\n    //==============================================================\r\n\r\n    /**\r\n     * The Component's props definition\r\n     * @name propsDef\r\n     * @type {Object<String,ComponentElement~PropDefinition>}\r\n     */\r\n\r\n    /**\r\n     * Return default registration tag name\r\n     *\r\n     * @type {String}\r\n     */\r\n    static get tagName() { throw new Error(\"tagName not defined\") }\r\n\r\n    /**\r\n     * Registers the web component. Uses tagName as default input param\r\n     */\r\n    static define(name) {\r\n        prepareComponentTemplate(this, name || this.tagName);\r\n        window.customElements.define(name || this.tagName, this);\r\n    }\r\n\r\n    /**\r\n     * The number of milliseconds to wait after an element has been detached from DOM before\r\n     * the `.destroy()` method is auto executed.\r\n     *\r\n     * @type {Number}\r\n     */\r\n    static get delayDestroy() { return 250; }\r\n\r\n    /**\r\n     * If Shadow DOM should be used. Default `true`\r\n     *\r\n     * @type {Boolean}\r\n     */\r\n    static get useShadow() { return true; }\r\n\r\n    /**\r\n     * The value for the `mode` option that will be used on the `attachShadow` method.\r\n     *\r\n     * @type {string}\r\n     */\r\n    static get shadowMode() { return \"open\"; }\r\n\r\n    /**\r\n     * Returns the HTML template for the component. Could also be a Template html element\r\n     *\r\n     * @type {String|HTMLTemplateElement}\r\n     */\r\n    static get template() { return \"<div></div>\"; }\r\n\r\n    /**\r\n     * Renderer for the template and return what should be inserted into shadowDom.\r\n     * By default, this base class will simply clone the `template` defined in the\r\n     * static property above. This method will called prior to doing that, and if\r\n     * it returns a `truthy` value, then its assume to be either an HTMLElement or\r\n     * DocumentFragment with the element's instance UI (which will be inserted into\r\n     * shadowDom).\r\n     *\r\n     * **NOTE**: Should always use `getComponentInstanceTemplate` or `getComponentTemplate`\r\n     * to retrieve the template or its content, since it is manipulated in browsers that\r\n     * use the polyfills to make the template compatible in those platforms.\r\n     *\r\n     * @param {ComponentElement} eleInstance\r\n     *  The `ComponentElement` instance being initialized\r\n     *\r\n     * @return {HTMLElement|DocumentFragment}\r\n     */\r\n    static renderTemplate(eleInstance) {\r\n        // FIXME: should two additional params be provided - one to get templateInstance and another to get templateElement?\r\n        return getComponentInstanceTemplate(eleInstance);\r\n    }\r\n\r\n    /**\r\n     * The default initialization options for the `emit()` method.\r\n     * See [Event.contructor]{@link http://devdocs.io/dom/event/event} for more.\r\n     *\r\n     * @type EventInit\r\n     */\r\n    static get eventInitOptions() { return EV_DEFAULT_INIT; }\r\n\r\n    // Returns the list (Array) of props that were marked as `@attr`\r\n    static get observedAttributes() {\r\n        let state = getComponentClassState(this);\r\n\r\n        if (!state.observedAttrs) {\r\n            const propList = getPropsDefinition(this);\r\n            state.observedAttrs = objectKeys(propList).filter(p => propList[p].attr);\r\n        }\r\n\r\n        return state.observedAttrs;\r\n    }\r\n\r\n    //==============================================================\r\n    //  Instance Members\r\n    //==============================================================\r\n\r\n    // Reflects changed html attributes to state.props\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        const propsDef =  getPropsDefinition(this.constructor);\r\n        if (propsDef[name]) {\r\n            name = propsDef[name].name;\r\n        }\r\n        this.props[name] = newValue;\r\n    }\r\n\r\n    /**\r\n     * Destroy the instance of the widget\r\n     */\r\n    destroy() {\r\n        if (PRIVATE.has(this)) {\r\n            const state = getState(this);\r\n            PRIVATE.delete(this);\r\n            if (state.destroyQueued) {\r\n                clearTimeout(state.destroyQueued);\r\n                state.destroyQueued = null;\r\n            }\r\n            state.destroyCallbacks.splice(0).forEach(cb => cb());\r\n        }\r\n        if (this.parentNode) {\r\n            this.parentNode.removeChild(this);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Adds a callback to be executed when Component is destroyed.\r\n     * @param {Function} callback\r\n     */\r\n    onDestroy(callback) {\r\n        getState(this).destroyCallbacks.push(callback);\r\n    }\r\n\r\n    /**\r\n     * The Component's props.\r\n     * @type {Object}\r\n     */\r\n    get props() {\r\n        if (this.constructor.prototype === this) {\r\n            throw new Error(\"can't be used on own prototype\");\r\n        }\r\n\r\n        if (this._$props) {\r\n            return this._$props;\r\n        }\r\n\r\n        // On first call - setup the property on the instance\r\n        const propDefinitions = getPropsDefinition(this.constructor);\r\n        let props = {};\r\n\r\n        objectKeys(propDefinitions).forEach(propName => {\r\n            if (!propDefinitions[propName] || !propDefinitions[propName]._isAlias) {\r\n                let propValue = propDefinitions[propName].default.call(this);\r\n\r\n                if (\r\n                    propDefinitions[propName].attr &&\r\n                    !propDefinitions[propName].boolean &&\r\n                    elementHasAttributeForProp(this, propDefinitions[propName])\r\n                ) {\r\n                    propValue = geAttributeValueForProp(this, propDefinitions[propName]);\r\n                }\r\n\r\n                objectDefineProperty(props, propName, {\r\n                    configurable: true,\r\n                    enumerable: true,\r\n                    get() {\r\n                        return propValue;\r\n                    },\r\n                    set: newValue => {\r\n                        newValue = propDefinitions[propName].filter.call(this, newValue);\r\n                        return propValue = newValue;\r\n                    }\r\n                });\r\n            }\r\n        });\r\n\r\n        objectDefineProperty(this, \"_$props\", { value: props });\r\n        return props;\r\n    }\r\n\r\n    /**\r\n     * Pointer to the UI of the Component. Value is will either be the `showdowRoot` or the element\r\n     * itself.\r\n     *\r\n     * @returns {HTMLElement}\r\n     */\r\n    get $ui() {\r\n        return this._$ui;\r\n    }\r\n\r\n    /**\r\n     * Find an element in the `$ui` (alias for `querySelector()`)\r\n     *\r\n     * @param {String} selector\r\n     *\r\n     * @return {HTMLElement}\r\n     */\r\n    $(selector) {\r\n        return this.$ui.querySelector(selector);\r\n    }\r\n\r\n    /**\r\n     * Returns an array with matched set of DOM elements based on the given selector.\r\n     * (alias for `querySelectorAll()`)\r\n     *\r\n     * @param {String} selector\r\n     *\r\n     * @returns {Array<HTMLElement>}\r\n     */\r\n    $$(selector) {\r\n        const result = this.$ui.querySelectorAll(selector);\r\n        if (Array.isArray(result)) {\r\n            return;\r\n        }\r\n        return Array.prototype.slice.call(result, 0);\r\n    }\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~ LIFE CYCLE HOOKS ~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n    /**\r\n     * Called to initialize the component, but only after only after all required\r\n     * props have been provided.  This method could be called multiple times, if component\r\n     * has been destroyed, but then re-attached to the DOM Tree.\r\n     *\r\n     */\r\n    init() {}\r\n\r\n    /**\r\n     * Component is ready to be started. This means that all required props/param have been provided.\r\n     */\r\n    ready() {}\r\n\r\n    /**\r\n     * Component is not ready, and if already stated, it might need adjusted. This means that not all\r\n     * required props are currently defined.\r\n     */\r\n    unready() {}\r\n\r\n    /**\r\n     * Called only after the component has been initialized (`init()` has been called).\r\n     * This method could be called multiple times depending on whether the element is\r\n     * added/removed from DOM.\r\n     * This is a good place to setup global events and/or initiate retrieval of data.\r\n     */\r\n    mounted() {}\r\n\r\n\r\n    /**\r\n     * Called if component has been initialized (`init()` has run).\r\n     */\r\n    unmounted() {}\r\n\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~ EVENTEMITTER INTERFACE ~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n    /**\r\n     * Dispatches a native `CustomEvent`. The `data` provided will be available\r\n     * in the customEvent.detail property\r\n     *\r\n     * @param {String} eventName\r\n     * @param {*} data\r\n     * @param {EventInit} [eventInit=ComponentElement.eventInitOptions]\r\n     *  Any other options for the CustomEvent initialization.\r\n     *  See [Event.constructor]{@link http://devdocs.io/dom/event/event} for more.\r\n     *\r\n     * @example\r\n     *\r\n     * document.body.addEventListener(\"my-event\", function (ev) { console.log(ev.detail); });\r\n     *\r\n     * // My component\r\n     * myComponent.emit(\"my-event\", { msg: \"hello\" });\r\n     *\r\n     */\r\n    emit(eventName, data, eventInit) {\r\n        this.dispatchEvent(new CustomEvent(\r\n            eventName,\r\n            objectExtend({}, this.constructor.eventInitOptions, eventInit, { detail: data })\r\n        ));\r\n    }\r\n\r\n    /**\r\n     * Set an event listener on the current component\r\n     *\r\n     * @param {String} eventNames\r\n     *  One or more event names to listen for (space delimiter)\r\n     *\r\n     * @param {Function} callback\r\n     *\r\n     * @param {Boolean} [capture=false]\r\n     *\r\n     * @returns {DOMEventListener}\r\n     */\r\n    on(eventNames, callback, capture) {\r\n        return domAddEventListener(this, eventNames, callback, capture);\r\n    }\r\n\r\n    /**\r\n     * Add callback to be called when props change\r\n     *\r\n     * @param {Function} callback\r\n     * @param {String} [propName]\r\n     *  Optional. The specific prop to watch.\r\n     *\r\n     * @return {ObjectUnwatchProp}\r\n     */\r\n    onPropsChange(callback, propName) {\r\n        return objectWatchProp(this.props, propName, callback);\r\n    }\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~ BUITINS ~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n    connectedCallback() {\r\n        styleComponentInstanceElement(this);\r\n\r\n        // Cancel destroy if it is queued\r\n        if (PRIVATE.has(this)) {\r\n            const state = getState(this);\r\n            if (state.destroyQueued) {\r\n                clearTimeout(state.destroyQueued);\r\n                state.destroyQueued = null;\r\n            }\r\n            state.isMounted = true;\r\n            if (state.ready) {\r\n                this.mounted();\r\n            }\r\n        }\r\n        else {\r\n            getState(this).isMounted = true;\r\n            setupComponent(this);\r\n        }\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        // Delay calling .destroy() by 60s, just in case user re-attaches component back to dom.\r\n        // This seems to be currently the only way to ensure attached `onDestroy` logic run when\r\n        // the element is no longer needed.\r\n        if (PRIVATE.has(this)) {\r\n            const state = getState(this);\r\n            if (!state.destroyQueued) {\r\n                state.destroyQueued = setTimeout(this.destroy.bind(this), this.constructor.delayDestroy);\r\n            }\r\n            state.isMounted = false;\r\n            if (state.ready) {\r\n                this.unmounted();\r\n            }\r\n        }\r\n    }\r\n}\r\nexport default ComponentElement;\r\n\r\nfunction setupComponent(component) {\r\n    const state = getState(component);\r\n    let lastReadyState = null;\r\n    const handleReadyChanges = () => {\r\n        if (lastReadyState === state.ready) {\r\n            return;\r\n        }\r\n\r\n        lastReadyState = state.ready;\r\n\r\n        if (state.ready) {\r\n            if (!state.hasTemplate) {\r\n                // component._$ui.innerHTML = component.constructor.template;\r\n                component._$ui.appendChild(\r\n                    component.constructor.renderTemplate(component)\r\n                );\r\n                state.hasTemplate = true;\r\n            }\r\n\r\n            component.ready();\r\n\r\n            if (state.isMounted) {\r\n                component.mounted();\r\n            }\r\n        }\r\n        else if (state.hasTemplate) {\r\n            component.unready();\r\n        }\r\n\r\n    };\r\n\r\n    if (component.constructor.useShadow && SHADOW_DOM_SUPPORTED) {\r\n        if (component.shadowRoot) {\r\n            component._$ui = component.shadowRoot;\r\n        }\r\n        else {\r\n            component._$ui = component.attachShadow({ mode: component.constructor.shadowMode });\r\n        }\r\n    }\r\n    else {\r\n        component._$ui = component;\r\n    }\r\n\r\n    component.init();\r\n\r\n    state.readyWatcher = objectWatchProp(state, \"ready\", handleReadyChanges);\r\n    component.onDestroy(state.readyWatcher);\r\n    handleReadyChanges();\r\n}\r\n","import objectExtend from \"common-micro-libs/src/jsutils/objectExtend\"\r\nimport { objectDefineProperty } from \"common-micro-libs/src/jsutils/runtime-aliases\"\r\nimport { getKebabCase, getPropsDefinition, elementHasAttributeForProp } from \"../utils\"\r\n\r\n//===============================================================================\r\nconst RE_UPPER_CASE_LETTERS = /[A-Z]/;\r\nconst NOOP = val => val;\r\n\r\n/**\r\n * Create a ComponentElement property.\r\n *\r\n * @param {Object} [options]\r\n * @param {Object} [Proto]\r\n * @param {String} [prop]\r\n * @param {Object} [descriptor]\r\n *\r\n * @returns {Function}\r\n */\r\nexport function prop(...args) {\r\n    // Called with options? Return Design function\r\n    if (args.length < 2) {\r\n        return setupProp.bind(null, args[0]);\r\n    }\r\n    return setupProp(null, ...args);\r\n}\r\n\r\n\r\nfunction setupProp(options, Proto, prop, descriptor) {\r\n    let getter = descriptor.get;\r\n    let setter = descriptor.set;\r\n    let propDef;\r\n\r\n    // If prop is defined as `boolean` then ensure that the value stored is\r\n    // always a boolean based upon whether the prop is on the element or not\r\n    // In this case, defined getter/setter is ignored/discarded\r\n    // TODO: is there a use case where calling the real getter/setter is valid?\r\n    if (options && options.boolean) {\r\n        options.attr = true;\r\n\r\n        getter = descriptor.get = function () {\r\n            return elementHasAttributeForProp(this, propDef);\r\n        };\r\n\r\n        setter = descriptor.set = function (value) {\r\n            // When setting the value of this attribute directly on the instance (or instance.props),\r\n            // ensure that element attribute is also adjusted to reflect value.\r\n            // Do this only if the `value` is boolean - because when an attribute is added to the\r\n            // element, its value should be empty string.\r\n            if (\"boolean\" === typeof value) {\r\n                if (value && !elementHasAttributeForProp(this, propDef)) {\r\n                    this.setAttribute(prop, \"\");\r\n                }\r\n                else if (!value && elementHasAttributeForProp(this, propDef)) {\r\n                    this.removeAttribute(prop);\r\n                }\r\n            }\r\n            return elementHasAttributeForProp(this, propDef);\r\n        };\r\n    }\r\n\r\n    propDef = objectExtend(getPropDef(Proto, prop, getter, setter), options);\r\n    descriptor.get = descriptor.set = lazyProp(prop, getter, setter);\r\n\r\n    // Create a instance property for each alias as well\r\n    if (propDef.aliases.length) {\r\n        propDef.aliases.forEach(propAliasName => {\r\n            if (!(propAliasName in Proto)) {\r\n                const aliasPropGetterSetterSetup = lazyProp(propAliasName, getter, setter);\r\n                objectDefineProperty(Proto, propAliasName, {\r\n                    configurable: true,\r\n                    get: aliasPropGetterSetterSetup,\r\n                    set: aliasPropGetterSetterSetup\r\n                });\r\n            }\r\n        })\r\n    }\r\n    return descriptor;\r\n}\r\n\r\n\r\nfunction getClassProps(Proto) {\r\n    if (!Proto.constructor.propsDef) {\r\n        objectDefineProperty(Proto.constructor, \"propsDef\", { configurable: true, writable: true, value: {} })\r\n    }\r\n    return Proto.constructor.propsDef;\r\n}\r\n\r\n/**\r\n * Returns the PropDefinition\r\n *\r\n * @private\r\n *\r\n * @param Proto\r\n * @param name\r\n * @param getter\r\n * @param setter\r\n * @returns ComponentElement~PropDefinition\r\n */\r\nfunction getPropDef(Proto, name, getter, setter) {\r\n    const classProps = getClassProps(Proto);\r\n\r\n    if (!classProps[name]) {\r\n        /**\r\n         * A Class prop definition\r\n         *\r\n         * @typedef {Object} ComponentElement~PropDefinition\r\n         * @property {String} name              Then name of the prop\r\n         * @property {Boolean} attr             Can the prop be set via an HTML attribute\r\n         * @property {Boolean} required         Is the prop required\r\n         * @property {Boolean} boolean          Is the prop value mean to be a boolean (note: also forces `attr` to true)\r\n         * @property {Function} default         Function that returns default value (the `getter` when decorator is used)\r\n         * @property {Function} filter          Function that filters the value being set (the `setter` when decorator is used)\r\n         * @property {Array<String>} aliases    An array of aliases for the prop\r\n         */\r\n        classProps[name] = {\r\n            name,\r\n            attr: false,\r\n            required: false,\r\n            boolean: false,\r\n            default: getter || NOOP,\r\n            filter: setter || NOOP,\r\n            aliases: [\r\n                name.toLowerCase()\r\n            ]\r\n            // _isAlias: --- used in getPropsDefinition()\r\n        };\r\n\r\n        // If the prop name has upper case letters, then its possible that it is\r\n        // defined as camelCase - create ka-bab alias.\r\n        if (RE_UPPER_CASE_LETTERS.test(name)) {\r\n            classProps[name].aliases.push(getKebabCase(name));\r\n        }\r\n    }\r\n\r\n    return classProps[name];\r\n}\r\n\r\n/**\r\n * Return a getter/setter function to be used in a Property descriptor. When invoked first time as\r\n * part of an instance, it will setup the actually get/set function that will persist Props to the\r\n * instance `instance.props`\r\n *\r\n * @private\r\n *\r\n * @param propName\r\n * @param getter\r\n * @param setter\r\n *\r\n * @returns {Function}\r\n */\r\nfunction lazyProp(propName, getter, setter) { // FIXME: getter/setter not being used?\r\n    const $propName = `_$${ propName }`;\r\n\r\n    return function lazyGetterSetter() {\r\n        const isUpdateMode = arguments.length === 1;\r\n\r\n        if (Object.getOwnPropertyNames(this).indexOf($propName) !== -1) {\r\n            return isUpdateMode ? (this[$propName] = arguments[0]) : this[$propName];\r\n        }\r\n\r\n        // Ensure we write back to\r\n        const writeToPropName = getPropsDefinition(this.constructor)[propName].name;\r\n\r\n        objectDefineProperty(this, $propName, {\r\n            configurable: true,\r\n            get() {\r\n                return this.props[writeToPropName];\r\n            },\r\n            set(newValue) {\r\n                return this.props[writeToPropName] = newValue;\r\n            }\r\n        });\r\n\r\n        // update mode\r\n        if (isUpdateMode) {\r\n            return this[$propName] = arguments[0];\r\n        }\r\n\r\n        return this[$propName];\r\n    };\r\n}\r\n","import {objectDefineProperty} from \"common-micro-libs/src/jsutils/runtime-aliases\";\r\n\r\n/**\r\n * Binds the given attributes to the Class instance on first `get`.\r\n *\r\n * @return {Function|Object}\r\n */\r\nexport function bind(Proto, prop, descriptor) {\r\n    if (Proto && prop && descriptor && \"function\" === typeof descriptor.value) {\r\n        const propFn = descriptor.value;\r\n        const writable = descriptor.writable;\r\n        delete descriptor.value;\r\n        delete descriptor.writable;\r\n\r\n        descriptor.get = function () {\r\n            if (this[`__settingUp:${prop}`]) {\r\n                return;\r\n            }\r\n            this[`__settingUp:${prop}`] = true; // Fuck you IE!\r\n\r\n            const fn = propFn.bind(this);\r\n            objectDefineProperty(this, prop, {\r\n                configurable: descriptor.configurable,\r\n                enumerable: descriptor.enumerable,\r\n                writable: writable,\r\n                value: fn\r\n            });\r\n            delete this[`__settingUp:${prop}`];\r\n            return fn;\r\n        };\r\n        return descriptor;\r\n    }\r\n    return bind; // for when called explicitly with no params: `bind()`\r\n}\r\n","import objectExtend from \"../jsutils/objectExtend\"\r\n\r\nconst WINDOW        = window;\r\nconst DOCUMENT      = WINDOW.document;\r\nconst SCROLL_TOP    = \"scrollTop\";\r\nconst SCROLL_LEFT   = \"scrollLeft\";\r\nconst PAGE_Y_OFFSET = \"pageYOffset\";\r\nconst PAGE_X_OFFSET = \"pageXOffset\";\r\nconst UNDEFINED     = \"undefined\";\r\nconst PX            = \"px\";\r\n\r\n//const isTop     = /top/i;\r\n//const isBottom  = /bottom/i;\r\nconst isLeft    = /left/i;\r\n//const isRight   = /right/i;\r\n\r\n\r\n/**\r\n * Positions an element against another. Elements (both `positionEle` and\r\n * `anchorEle` should already be visible in dom (ex. call this method right\r\n * after adding them to DOM).\r\n *\r\n * @function domPosition\r\n *\r\n * @param {HTMLElement} positionEle\r\n *\r\n * @param {HTMLElement} anchorEle\r\n *\r\n * @param {Object} [options]\r\n * \r\n * @param {String} [options.my]\r\n *  Which area of the `positionEle` should be used to position it against the\r\n *  `anchorEle`. Default is `top left`. Possible values:\r\n *  -   `top left`\r\n *  -   `top right`\r\n *\r\n * @param {String} [options.at]\r\n *  The `anchorEle` position where the `positionEle` should be displayed. Default\r\n *  is `bottom left` (so right below the `anchorEle`, left aligned).\r\n *\r\n * @param {HTMLElement} [options.viewport=window]\r\n *  The viewport to be used in detecting collision. (NOTE: currently,\r\n *  only window is supported)\r\n *\r\n */\r\nexport function domPosition(positionEle, anchorEle, options){\r\n    var positionEleStyles   = positionEle.style;\r\n    var anchorEleRect       = anchorEle.getBoundingClientRect();\r\n    var positionEleRect     = positionEle.getBoundingClientRect();\r\n    var opt                 = objectExtend({\r\n        my:         \"top left\",\r\n        at:         \"bottom left\",\r\n        viewport:   WINDOW\r\n    }, options);\r\n    var { scrollTop, scrollLeft } = getViewportScrollInfo(opt.viewport); // FIXME: support for non-window viewport\r\n\r\n    // FIXME: support for non window viewport\r\n    // var viewportTop     = 0;\r\n    var viewportBottom  = opt.viewport.innerHeight;\r\n    var viewportRight   = opt.viewport.innerWidth;\r\n\r\n    var isMyLeft    = isLeft.test(opt.my);\r\n    var isMyRight   = !isMyLeft;\r\n    var isAtLeft    = isLeft.test(opt.at);\r\n    var isAtRight   = !isAtLeft;\r\n\r\n    // Set default coordinates based o above position defaults\r\n    var posLeft = anchorEleRect.left;\r\n    var posTop  = anchorEleRect.bottom + scrollTop;\r\n\r\n    //------------------------------------------\r\n    // CALCULATE: TOP\r\n    // Top side of position ele\r\n    //------------------------------------------\r\n\r\n    // FIXME: support for \"my\" === bottom as well as \"at\" top\r\n\r\n\r\n    //------------------------------------------\r\n    // CALCULATE: LEFT\r\n    // Left side of the position el\r\n    //------------------------------------------\r\n    // my === left  &&  at === right\r\n    if (isMyLeft && isAtRight) {\r\n        posLeft = anchorEleRect.right;\r\n\r\n    // my === left  &&  at === right\r\n    } else if (isMyRight && isAtRight) {\r\n        posLeft = anchorEleRect.right - positionEleRect.width;\r\n\r\n    // my === right  &&  at === left\r\n    } else if (isMyRight && isAtLeft) {\r\n        posLeft = anchorEleRect.left - positionEleRect.width;\r\n    }\r\n\r\n    //------------------------------------------------------\r\n    // Adjust positions based on viewport collisions\r\n    //------------------------------------------------------\r\n\r\n    //--- LEFT --\\\\\r\n    // If the Right side of the position element goes beyound\r\n    // the right side of the viewport, flip the horizontal position...\r\n    if ((posLeft + positionEleRect.width) > (viewportRight + scrollLeft)) {\r\n        posLeft -= positionEleRect.width;\r\n    }\r\n\r\n    //--- TOP --\\\\\r\n    // If it the position of the element goes beyond the bottom of\r\n    // the viewport, flip it up...\r\n    if ((posTop + positionEleRect.height) > (viewportBottom + scrollTop)) {\r\n        posTop -= (positionEleRect.height + anchorEleRect.height);\r\n    }\r\n\r\n    positionEleStyles.left = posLeft + PX;\r\n    positionEleStyles.top  = posTop + PX;\r\n}\r\n\r\nexport default domPosition;\r\n\r\n\r\n/**\r\n * returns the `scrollTop` and `scrollLeft` for a given element\r\n *\r\n * @param {HTMLElement|Window|Document} viewport\r\n * @returns {Object}\r\n *\r\n * @example\r\n *\r\n * // return object:\r\n *\r\n * {\r\n *      scrollTop:      222,\r\n *      scrollLeft:     11\r\n * }\r\n *\r\n */\r\nfunction getViewportScrollInfo(viewport) {\r\n    let response = {};\r\n\r\n    if (viewport === WINDOW || viewport === DOCUMENT){\r\n        if (typeof WINDOW[PAGE_Y_OFFSET] !== UNDEFINED){\r\n            response[SCROLL_TOP]    = WINDOW[PAGE_Y_OFFSET];\r\n            response[SCROLL_LEFT]   = WINDOW[PAGE_X_OFFSET];\r\n\r\n        } else if (DOCUMENT.documentElement) {\r\n            response[SCROLL_TOP]    = DOCUMENT.documentElement[SCROLL_TOP];\r\n            response[SCROLL_LEFT]   = DOCUMENT.documentElement[SCROLL_LEFT];\r\n\r\n        } else {\r\n            response[SCROLL_TOP]    = DOCUMENT.body[SCROLL_TOP];\r\n            response[SCROLL_LEFT]   = DOCUMENT.body[SCROLL_LEFT];\r\n        }\r\n    } else {\r\n        response[SCROLL_TOP]    = viewport[SCROLL_TOP];\r\n        response[SCROLL_LEFT]   = viewport[SCROLL_LEFT];\r\n    }\r\n\r\n    return response;\r\n}\r\n","import {ComponentElement, prop, bind} from \"component-element\"\r\nimport domPosition from \"common-micro-libs/src/domutils/domPosition\";\r\nimport domAddEventListener from \"common-micro-libs/src/domutils/domAddEventListener\";\r\n\r\n//=====================================================================================\r\nconst removeBodyEvent = eleInst => {\r\n    if (eleInst._bodyEv) {\r\n        eleInst._bodyEv.remove();\r\n        eleInst._bodyEv = null;\r\n    }\r\n};\r\n\r\n\r\n// FIXME: Support for `show` and `hide` events\r\n\r\n\r\n/**\r\n * A popup widget that will be displayed and position relative to a another element\r\n *\r\n * ### Styling\r\n * The following variables are used for styling:\r\n *\r\n *      --theme-box-shadow\r\n *      --theme-color-bg    (background)\r\n *      --theme-color-fg    (forground color for text)\r\n *      --theme-spacing-2   (all round padding)\r\n *      --theme-color-1     (scrollbar background)\r\n *      --theme-color-6     (scrollbar thumb)\r\n *\r\n * @example\r\n *\r\n * const popup = document.createElement(\"pop-up\");\r\n * popup.innerHTML = `<h1>Hello</h1>`;\r\n * popup.for = document.querySelector(\"a#show\");\r\n * document.body.appendChild(popup);\r\n * popup.show = true;\r\n */\r\nexport class Popup extends ComponentElement {\r\n    //-------------------------------------------------------------\r\n    //\r\n    //                                              STATIC MEMBERS\r\n    //\r\n    //-------------------------------------------------------------\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ STATIC PROPERTIES ~~~~~\r\n    static get tagName() {\r\n        return \"pop-up\";\r\n    }\r\n\r\n\r\n    static get template() {\r\n        return `\r\n<style>\r\n:host {\r\n    box-sizing: border-box;\r\n    position: absolute;\r\n    min-height: 2em;\r\n    width: 15em;\r\n    max-height: 15em;\r\n    z-index: 5000;\r\n    overflow: auto;\r\n    display: none;\r\n\r\n    box-shadow: 0 8px 10px 1px rgba(0,0,0,0.14),\r\n        0 3px 14px 2px rgba(0,0,0,0.12),\r\n        0 5px 5px -3px rgba(0,0,0,0.2);\r\n    box-shadow: var(--theme-box-shadow);\r\n\r\n    background-color: white;\r\n    background-color: var(--theme-color-bg, white);\r\n\r\n    color: black;\r\n    color: var(--theme-color-fg, black);\r\n\r\n    padding: 0.5em;\r\n    padding: var(--theme-spacing-2, 0.5em);\r\n}\r\n:host::-webkit-scrollbar {\r\n    width:              0.5em;\r\n    background-color:   var(--theme-color-1, #F5F5F5);\r\n}\r\n:host::-webkit-scrollbar-thumb {\r\n    -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,.3);\r\n    background-color  : var(--theme-color-6, #555);\r\n}\r\n:host([show]) {\r\n    display: block;\r\n}\r\n</style>\r\n<div><slot></slot></div>`;\r\n    }\r\n\r\n    // static get delayDestroy() {}\r\n    // static get useShadow() {}\r\n    // static get shadowMode() {}\r\n    // static getEventInitOptions(){}\r\n    // static get observedAttributes() {}\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ STATIC METHODS ~~~~~\r\n\r\n    // static renderTemplate(ele) {}\r\n    // static define(name) {}\r\n\r\n\r\n    //-------------------------------------------------------------\r\n    //\r\n    //                                            INSTANCE MEMBERS\r\n    //\r\n    //-------------------------------------------------------------\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  PROPS AND ATTRIBUTES  ~~~~\r\n\r\n    /**\r\n     * The element that the popup is for. Could be a css selector (String)\r\n     * or a HTML Element.\r\n     * @property\r\n     * @type {String|HTMLElement}\r\n     */\r\n    @prop({required: true, attr: true})\r\n    set for(value) {\r\n        if (value && \"string\" === typeof value) {\r\n            return document.querySelector(value);\r\n        }\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * When set to `true`, popup will be made visible.\r\n     *\r\n     * @property {Boolean} show\r\n     */\r\n    @prop({boolean: true})\r\n    get show() { return false; }\r\n\r\n\r\n    /**\r\n     * If Popup should be auto closed when user clicks outside of its content.\r\n     *\r\n     * @property {Boolean} autoClose\r\n     */\r\n    @prop({boolean: true})\r\n    get autoClose() { return false; }\r\n\r\n\r\n    /**\r\n     * The edge of the popup that should be used when position it next to the\r\n     * `for` element. Default is `top left`.\r\n     * See `common-micro-libs/src/domUtils/domPosition` for other possible values\r\n     *\r\n     * @property {string} my\r\n     */\r\n    @prop({attr: true})\r\n    get my() { return \"top left\"; }\r\n\r\n\r\n    /**\r\n     * The edge of the `for` element that will be used to position the popup against.\r\n     * Default is `bottom left`.\r\n     * See `common-micro-libs/src/domUtils/domPosition` for other possible values\r\n     *\r\n     * @property {string} at\r\n     */\r\n    @prop({attr: true})\r\n    get at() { return \"bottom left\"; }\r\n\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  LIFE CYCLE HOOKS  ~~~~~\r\n    // Called from constructor\r\n    init() {\r\n        // this._forPropWas = this.props.for;\r\n        this._bodyEv = null;\r\n        this.onPropsChange(this.position, \"at\");\r\n        this.onPropsChange(this.position, \"my\");\r\n    }\r\n\r\n    // Called when all required `props` have been provided\r\n    ready() {\r\n        this.onPropsChange(this._handleShowProp);\r\n        this._handleShowProp();\r\n        this.onDestroy(() => removeBodyEvent(this));\r\n    }\r\n\r\n    // Called if required fields are removed\r\n    // unready() {}\r\n\r\n    // called when element is attached to dom\r\n    // mounted() {}\r\n\r\n    // called when element is removed from dom\r\n    // unmounted() {}\r\n\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    @bind\r\n    _handleShowProp(){\r\n        if (this.for && this.show) {\r\n            this.position();\r\n\r\n            // Auto close? then setup body event\r\n            if (this.autoClose && !this._bodyEv) {\r\n                setTimeout(() => {\r\n                    this._bodyEv = domAddEventListener(document.body, \"click\", ev => {\r\n                        if (!this.contains(ev.target)) {\r\n                            // FIXME: support onHide callback? maybe event?\r\n\r\n                            removeBodyEvent(this);\r\n                            this.show = false;\r\n                        }\r\n                    });\r\n                }, 200);\r\n            }\r\n        }\r\n        else {\r\n            removeBodyEvent(this);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Positions the popup against the current `for` element.\r\n     */\r\n    @bind\r\n    position() {\r\n        if (this.for && this.show) {\r\n            const options = {}; // FIXME: move this to a computed prop\r\n            if (this.my) {\r\n                options.my = this.my\r\n            }\r\n            if (this.at) {\r\n                options.at = this.at;\r\n            }\r\n            domPosition(this, this.for, options);\r\n        }\r\n    }\r\n}\r\n\r\nexport default Popup;\r\n","/**\r\n * Shortcut/Functional alias to `Node.insertBefore` method.\r\n *\r\n * @param {Node|DocumentFragment} newNode\r\n * @param {Node} referenceNode\r\n *\r\n * @returns {Node|DocumentFragment}\r\n */\r\nexport function domInsertBefore(newNode, referenceNode) {\r\n    if (referenceNode && referenceNode.parentNode && referenceNode.parentNode.insertBefore) {\r\n        referenceNode.parentNode.insertBefore(newNode, referenceNode);\r\n    }\r\n    return newNode;\r\n}\r\nexport default domInsertBefore;\r\n\r\n","import {ComponentElement, STATE_SYMBOL, prop, bind} from \"component-element\"\r\nimport {domAddEventListener} from \"common-micro-libs/src/domutils/domAddEventListener\"\r\nimport {domInsertBefore} from \"common-micro-libs/src/domutils/domInsertBefore\"\r\n\r\n\r\n//=========================================================================\r\nconst INTERCEPTOR_TOP_1 = \"topTabInterceptor1\";\r\nconst INTERCEPTOR_TOP_2 = \"topTabInterceptor2\";\r\n\r\nconst INTERCEPTOR_BOTTOM_1 = \"bottomTabInterceptor1\";\r\nconst INTERCEPTOR_BOTTOM_2 = \"bottomTabInterceptor2\";\r\n\r\nconst INTERCEPTOR_LIST = [\r\n    INTERCEPTOR_TOP_1,\r\n    INTERCEPTOR_TOP_2,\r\n    INTERCEPTOR_BOTTOM_2,\r\n    INTERCEPTOR_BOTTOM_1\r\n];\r\n\r\nconst INTERCEPTOR_STYLES = \"outline: none !important;display:block !important;height:1px !important;width:1px !important;color:transparent !important;position:absolute !important;left:-9999999px !important;top:-99999999px !important;z-index:-1 !important;\";\r\n\r\n/**\r\n * Custom Element that, when visible, makes its self as large as its parent content\r\n * (driven by the first positioned element) and prevents access to any element that\r\n * is a child of the same parent to this element.\r\n *\r\n * @extends ComponentElement\r\n *\r\n * @example\r\n *\r\n *      <content-access block on-parent></content-access>\r\n */\r\nexport class ContentAccess extends ComponentElement {\r\n    //-------------------------------------------------------------\r\n    //\r\n    //                                              STATIC MEMBERS\r\n    //\r\n    //-------------------------------------------------------------\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ STATIC PROPERTIES ~~~~~\r\n    static get tagName() {\r\n        return \"content-access\";\r\n    }\r\n\r\n    static get template() {\r\n        return `\r\n<style>\r\n    :host {\r\n        display: inline-block;\r\n        box-sizing: border-box;\r\n    }\r\n    :host([on-parent]) {\r\n        display: none;\r\n    }\r\n    :host([on-parent]) .content {\r\n        position:relative;\r\n        z-index: 1;\r\n        max-height: 100%;\r\n        max-width: 100%;\r\n        overflow: auto;\r\n    }\r\n    :host([on-parent]),\r\n    .modal {\r\n        position: absolute;\r\n        box-sizing: border-box;\r\n        top: 0;\r\n        left: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n        bottom: 0;\r\n        right: 0;\r\n    }\r\n    .modal {\r\n        background: lightgrey;\r\n        background: var(--theme-color-1, lightgrey);\r\n        opacity: 0.6;\r\n    }\r\n    :host([block][on-parent]) {\r\n        display: block;\r\n    }\r\n    /*:host([on-parent]) .modal,*/\r\n    :host(:not([on-parent]):not([block])) .modal {\r\n        display: none;\r\n    }\r\n    :host([block]:not([on-parent])) {\r\n        position: relative;\r\n    }\r\n</style>\r\n<div class=\"content\">\r\n    <slot></slot>\r\n</div>\r\n<div class=\"modal\"></div>\r\n`;\r\n    }\r\n\r\n    // static get delayDestroy() {}\r\n    // static get useShadow() {}\r\n    // static get shadowMode() {}\r\n    // static getEventInitOptions(){}\r\n    // static get observedAttributes() {}\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ STATIC METHODS ~~~~~\r\n\r\n    // static renderTemplate(ele) {}\r\n    // static define(name) {}\r\n\r\n\r\n    //-------------------------------------------------------------\r\n    //\r\n    //                                            INSTANCE MEMBERS\r\n    //\r\n    //-------------------------------------------------------------\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  PROPS AND ATTRIBUTES  ~~~~\r\n\r\n    /**\r\n     * Attribute that when present on the element, will make this\r\n     * element visible and content around it (same parent) non-accessible\r\n     *\r\n     * @property\r\n     * @type Boolean\r\n     */\r\n    @prop({attr: true, boolean: true})\r\n    get block() { return false; }\r\n\r\n\r\n    /**\r\n     * When attribute present on element, then the behaviour of this component\r\n     * changes to making it `position:absolute` and to fill the parent's space.\r\n     * The tab control is applied to all content of the parent element.\r\n     * Also: Any content (elements) placed inside of the `content-access` will\r\n     * be visible and accessible to the user - similar to how modal dialogs work.\r\n     *\r\n     * @property\r\n     * @type Boolean\r\n     */\r\n    @prop({attr: true, boolean: true})\r\n    get onParent() { return false; }\r\n\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  LIFE CYCLE HOOKS  ~~~~~\r\n    // Called from constructor\r\n    init() {\r\n        this[STATE_SYMBOL] = {\r\n            [INTERCEPTOR_TOP_1]: null,\r\n            [INTERCEPTOR_TOP_2]: null,\r\n            [INTERCEPTOR_BOTTOM_1]: null,\r\n            [INTERCEPTOR_BOTTOM_2]: null,\r\n            isRefocusing: false\r\n        };\r\n        this.onPropsChange(this._handleBlock, \"block\");\r\n        this.onPropsChange(this._handleBlock, \"onParent\");\r\n        domAddEventListener(this, \"click\", this);\r\n    }\r\n\r\n\r\n    // Called when all required `props` have been provided\r\n    // ready() {}\r\n\r\n    // Called if required fields are removed\r\n    // unready() {}\r\n\r\n    // called when element is attached to dom\r\n    mounted() {\r\n        this._handleBlock();\r\n    }\r\n\r\n    // called when element is removed from dom\r\n    // unmounted() {}\r\n\r\n    destroy() {\r\n        super.destroy();\r\n        removeTabInterceptors(this);\r\n    }\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    @bind\r\n    _handleBlock() {\r\n        if (this.block) {\r\n            insertTabInterceptors(this);\r\n        } else {\r\n            removeTabInterceptors(this);\r\n        }\r\n    }\r\n\r\n    handleEvent(ev) {\r\n        if (this.block && ev.type === \"focus\" && ev.target._role && !this[STATE_SYMBOL].isRefocusing) {\r\n            this[STATE_SYMBOL].isRefocusing = true;\r\n            switch (ev.target._role) {\r\n                // Focusing from the top: send focus to bottom\r\n                case INTERCEPTOR_TOP_1:\r\n                case INTERCEPTOR_TOP_2:\r\n                    this[STATE_SYMBOL][INTERCEPTOR_BOTTOM_1].focus();\r\n                    break;\r\n\r\n                // Focusing from the bottom: send focus to top\r\n                case INTERCEPTOR_BOTTOM_1:\r\n                case INTERCEPTOR_BOTTOM_2:\r\n                    this[STATE_SYMBOL][INTERCEPTOR_TOP_1].focus();\r\n                    break;\r\n            }\r\n            this[STATE_SYMBOL].isRefocusing = false;\r\n\r\n        } else if (ev.type === \"click\" && this.block && !this.onParent) {\r\n            this[STATE_SYMBOL][INTERCEPTOR_BOTTOM_1].focus();\r\n        }\r\n    }\r\n}\r\n\r\nfunction insertTabInterceptors (inst) {\r\n    if (inst.parentNode) {\r\n        if (!inst[STATE_SYMBOL][INTERCEPTOR_TOP_1]) {\r\n            createTabInterceptorElements(inst);\r\n        }\r\n\r\n        if (inst.onParent) {\r\n            domInsertBefore(inst[STATE_SYMBOL][INTERCEPTOR_TOP_2], inst.parentNode.firstChild);\r\n            domInsertBefore(inst[STATE_SYMBOL][INTERCEPTOR_TOP_1], inst.parentNode.firstChild);\r\n\r\n            inst.parentNode.appendChild(inst[STATE_SYMBOL][INTERCEPTOR_BOTTOM_2]);\r\n            inst.parentNode.appendChild(inst[STATE_SYMBOL][INTERCEPTOR_BOTTOM_1]);\r\n        }\r\n        else {\r\n            domInsertBefore(inst[STATE_SYMBOL][INTERCEPTOR_TOP_1], inst);\r\n            domInsertBefore(inst[STATE_SYMBOL][INTERCEPTOR_TOP_2], inst);\r\n\r\n            if (inst.nextSibling) {\r\n                domInsertBefore(inst[STATE_SYMBOL][INTERCEPTOR_BOTTOM_1], inst.nextSibling);\r\n                domInsertBefore(inst[STATE_SYMBOL][INTERCEPTOR_BOTTOM_2], inst.nextSibling);\r\n\r\n            } else {\r\n                inst.parentNode.appendChild(inst[STATE_SYMBOL][INTERCEPTOR_BOTTOM_2]);\r\n                inst.parentNode.appendChild(inst[STATE_SYMBOL][INTERCEPTOR_BOTTOM_1]);\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n\r\nfunction removeTabInterceptors(inst) {\r\n    if (inst[STATE_SYMBOL][INTERCEPTOR_TOP_1]) {\r\n        INTERCEPTOR_LIST.forEach(interceptorEle => inst[STATE_SYMBOL][interceptorEle].parentNode && inst[STATE_SYMBOL][interceptorEle].parentNode.removeChild(inst[STATE_SYMBOL][interceptorEle]));\r\n    }\r\n}\r\n\r\nfunction createTabInterceptorElements(inst) {\r\n    if (!inst[STATE_SYMBOL][INTERCEPTOR_TOP_1]) {\r\n        INTERCEPTOR_LIST.forEach(name => {\r\n            inst[STATE_SYMBOL][name] = document.createElement(\"a\");\r\n            inst[STATE_SYMBOL][name].innerText = \"-\";\r\n            inst[STATE_SYMBOL][name]._role = name;\r\n            inst[STATE_SYMBOL][name].setAttribute(\"_role\", name);\r\n            inst[STATE_SYMBOL][name].setAttribute(\"tabindex\", \"0\");\r\n            inst[STATE_SYMBOL][name].setAttribute(\"style\", INTERCEPTOR_STYLES);\r\n            domAddEventListener(inst[STATE_SYMBOL][name], \"focus\", inst);\r\n        });\r\n    }\r\n}\r\n\r\nexport default ContentAccess;\r\n","/* global BUILD */\r\nexport {Popup} from \"./Popup/Popup\"\r\nexport {ContentAccess} from \"./ContentAccess/ContentAccess\"\r\n\r\nexport const VERSION = BUILD.DATA.VERSION;\r\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n"],"sourceRoot":""}