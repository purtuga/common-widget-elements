{"version":3,"sources":["webpack://__LIB/webpack/bootstrap","webpack://__LIB/external \"Set\"","webpack://__LIB/./node_modules/common-micro-libs/src/jsutils/getGlobal.js","webpack://__LIB/external \"Symbol\"","webpack://__LIB/./node_modules/common-micro-libs/src/jsutils/objectExtend.js","webpack://__LIB/./node_modules/common-micro-libs/src/jsutils/runtime-aliases.js","webpack://__LIB/./node_modules/common-micro-libs/src/jsutils/nextTick.js","webpack://__LIB/./node_modules/component-element/node_modules/observables/src/objectWatchProp.js","webpack://__LIB/./node_modules/common-micro-libs/src/domutils/domAddEventListener.js","webpack://__LIB/./node_modules/common-micro-libs/src/jsutils/dataStore.js","webpack://__LIB/./node_modules/component-element/src/utils.js","webpack://__LIB/./node_modules/component-element/src/polyfill-support.js","webpack://__LIB/./node_modules/component-element/src/ComponentElement.js","webpack://__LIB/./node_modules/component-element/src/decorators/prop.js","webpack://__LIB/./node_modules/component-element/src/decorators/bind.js","webpack://__LIB/./node_modules/common-micro-libs/src/domutils/domPosition.js","webpack://__LIB/./src/Popup/Popup.js","webpack://__LIB/./node_modules/common-micro-libs/src/domutils/domInsertBefore.js","webpack://__LIB/./src/ContentAccess/ContentAccess.js","webpack://__LIB/./src/index.js","webpack://__LIB/(webpack)/buildin/global.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Set","GLOBAL","window","global","self","Function","OBJECT_TYPE","_toString","toString","jsutils_objectExtend","objectExtend","mergeIntoObj","mergeObjects","response","total","length","deepMerge","shift","functionBind","functionBindCall","objectDefineProperty","defineProperties","objectKeys","keys","runtime_aliases_arr","isArray","Array","forEach","indexOf","splice","consoleLog","console","log","error","iterator","reIsNativeCode","nextTick","setImediate","test","Promise","resolved","resolve","fn","then","catch","e","immediates","processing","push","processPending","setTimeout","jsutils_nextTick","OBSERVABLE_IDENTIFIER","DEFAULT_PROP_DEFINITION","configurable","TRACKERS","external_Set_default","a","WATCHER_IDENTIFIER","ARRAY_WATCHABLE_PROTO","HAS_ARRAY_WATCHABLE_PROTO","ARRAY_MUTATING_METHODS","isPureObject","obj","NOTIFY_QUEUE","isNotifyQueued","objectWatchProp","prop","callback","setupObjState","props","setupPropState","setupPropInterceptors","setupInterceptors","storeCallback","makeObservable","unWatch","propSetup","dependents","delete","unsetCallbackAsWatcherOf","watchers","destroy","writable","deep","setupCallbackStore","store","async","isQueued","notify","val","undefined","parent","propOldDescriptor","getOwnPropertyDescriptor","size","set","newVal","priorVal","walk","force","arr","arrCurrentProto","__proto__","arrProtoInterceptor","method","args","this","makeArrayWatchable","walkArray","walkObject","pushCallbacksToQueue","execCallback","cb","flushQueue","queueCallbackAndScheduleRun","add","queuedCallbacks","clear","x","asDependent","setCallbackAsWatcherOf","watchersSet","watching","watcherList","src_objectWatchProp","domAddEventListener","ele","event","capture","events","split","evListeners","evName","addEventListener","remove","removeEventListener","listeners","domutils_domAddEventListener","WeakMap","counter","Date","now","Math","random","entry","has","dataStore","stash","jsutils_dataStore","PRIVATE","STATE_SYMBOL","external_Symbol_","elementHasAttributeForProp","propDef","aliases","some","propAlias","hasAttribute","getState","instance","state","ready","readyWatcher","destroyCallbacks","destroyQueued","isMounted","hasTemplate","propDefintions","getPropsDefinition","constructor","required","filter","propName","_isAlias","setReadyState","every","ComponentClass","getComponentClassState","propsDef","propAliasDef","propNameAlias","template","observedAttrs","getComponentTemplate","Component","classState","document","createElement","innerHTML","supportsShadyCSS","getGlobal","ShadyCSS","SHADOW_DOM_SUPPORTED","head","createShadowRoot","attachShadow","EV_DEFAULT_INIT","bubbles","cancelable","composed","ComponentElement_ComponentElement","_fixBabelExtend","HTMLElement","super","setupComponent","tagName","Error","[object Object]","prepareTemplate","customElements","define","delayDestroy","useShadow","shadowMode","eleInstance","componentInstance","ownerDocument","importNode","content","eventInitOptions","observedAttributes","propList","attr","attributeChangedCallback","oldValue","newValue","clearTimeout","parentNode","removeChild","onDestroy","_$props","propDefinitions","propValue","default","boolean","attrVal","getAttribute","geAttributeValueForProp","$ui","_$ui","$","selector","querySelector","$$","result","querySelectorAll","slice","init","unready","mounted","unmounted","emit","eventName","data","eventInit","dispatchEvent","CustomEvent","detail","on","eventNames","onPropsChange","connectedCallback","styleElement","disconnectedCallback","component","lastReadyState","handleReadyChanges","appendChild","renderTemplate","shadowRoot","RE_UPPER_CASE_LETTERS","NOOP","prop_prop","setupProp","options","Proto","descriptor","setter","setAttribute","removeAttribute","classProps","getClassProps","toLowerCase","str","replace","match","p1","getPropDef","lazyProp","propAliasName","aliasPropGetterSetterSetup","$propName","isUpdateMode","arguments","getOwnPropertyNames","writeToPropName","propFn","WINDOW","DOCUMENT","SCROLL_TOP","SCROLL_LEFT","PAGE_Y_OFFSET","PAGE_X_OFFSET","UNDEFINED","PX","isLeft","domutils_domPosition","positionEle","anchorEle","positionEleStyles","style","anchorEleRect","getBoundingClientRect","positionEleRect","opt","my","at","viewport","scrollTop","scrollLeft","documentElement","body","getViewportScrollInfo","viewportBottom","innerHeight","viewportRight","innerWidth","isMyLeft","isMyRight","isAtLeft","isAtRight","posLeft","left","posTop","bottom","right","width","height","top","removeBodyEvent","eleInst","_bodyEv","Popup_Popup","_dec","_dec2","_dec3","_dec4","_dec5","_class","for","show","autoClose","position","_handleShowProp","ev","contains","target","_applyDecoratedDescriptor","domInsertBefore","newNode","referenceNode","insertBefore","INTERCEPTOR_TOP_1","INTERCEPTOR_TOP_2","INTERCEPTOR_BOTTOM_1","INTERCEPTOR_BOTTOM_2","INTERCEPTOR_LIST","INTERCEPTOR_STYLES","ContentAccess_ContentAccess","ContentAccess_dec","ContentAccess_dec2","ContentAccess_class","block","onParent","isRefocusing","_handleBlock","removeTabInterceptors","inst","innerText","_role","createTabInterceptorElements","firstChild","nextSibling","insertTabInterceptors","handleEvent","type","focus","ContentAccess_applyDecoratedDescriptor","interceptorEle","__webpack_exports__","VERSION","g","eval"],"mappings":"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","file":"common-widget-elements.esm.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","module.exports = Set;","\r\nexport const GLOBAL = (() => {\r\n    const undef = 'undefined';\r\n    /* global self, window, global */\r\n    if (typeof window !== undef) { return window; }\r\n    if (typeof global !== undef) { return global; }\r\n    if (typeof self !== undef) { return self; }\r\n    return Function('return this;')();\r\n})();\r\n\r\nexport function getGlobal() {\r\n    return GLOBAL;\r\n}\r\nexport default getGlobal;","module.exports = Symbol;","const OBJECT_TYPE   = \"[object Object]\";\r\nconst _toString     = Function.call.bind(Object.prototype.toString);\r\n\r\n//============================================================\r\n\r\n/**\r\n * Extends an object with the properties of another.\r\n *\r\n * @param {Object|Boolean} mergeIntoObj\r\n *  The object that will have the properties of every other object provided\r\n *  on input merged into. This can also be a `Boolean`, in which case,\r\n *  a deep merge of objects will be done - argument number 2 will\r\n *  become the `mergeIntoObj`.\r\n * @param {...Object} mergeObjects\r\n *\r\n * @return {Object}\r\n */\r\nexport function objectExtend(mergeIntoObj, ...mergeObjects) {\r\n    let response    = mergeIntoObj || {};\r\n    let total       = mergeObjects.length;\r\n    let deepMerge   = false;\r\n    let i;\r\n    let key;\r\n\r\n    if (typeof mergeIntoObj === \"boolean\") {\r\n        deepMerge   = mergeIntoObj;\r\n        response    = mergeObjects.shift() || {};\r\n        total       = mergeObjects.length;\r\n    }\r\n\r\n    for (i = 0; i < total; i++) {\r\n        if (!mergeObjects[i]) {\r\n            continue;\r\n        }\r\n\r\n        for (key in mergeObjects[i]) {\r\n            if (mergeObjects[i].hasOwnProperty(key)){\r\n                if (\r\n                    deepMerge &&\r\n                    _toString(response[key]) === OBJECT_TYPE &&\r\n                    _toString(mergeObjects[i][key]) === OBJECT_TYPE\r\n                ) {\r\n                    response[key] = objectExtend( true, response[key], mergeObjects[i][key]);\r\n                    \r\n                } else {\r\n                    response[key] = mergeObjects[i][key];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return response;\r\n}\r\nexport default objectExtend;","\r\n// Function\r\n    // functionBind(fn, fnParent)\r\nexport const functionBind       = Function.bind.call.bind(Function.bind);\r\n    // usage: functionBindCall(Array.prototype.forEach) // generates a bound function to Array.prototype.forEach.call\r\nexport const functionBindCall   = functionBind(Function.call.bind, Function.call);\r\n\r\n// Object\r\nexport const objectDefineProperty     = Object.defineProperty;\r\nexport const objectDefineProperties   = Object.defineProperties;\r\nexport const objectKeys               = Object.keys;\r\n\r\n\r\n// Array\r\nconst arr = [];\r\nexport const isArray        = Array.isArray;\r\nexport const arrayForEach   = functionBindCall(arr.forEach);\r\nexport const arrayIndexOf   = functionBindCall(arr.indexOf);\r\nexport const arraySplice    = functionBindCall(arr.splice);\r\n\r\n// Logging\r\nexport const consoleLog = console.log;\r\nexport const consoleError = console.error || consoleLog;\r\n\r\n// Iterators\r\nexport const SymbolIterator = \"undefined\" !== typeof Symbol && Symbol.iterator ? Symbol.iterator : \"@@iterator\";","let reIsNativeCode = /native code/i;\r\n\r\n/**\r\n * Executes a function at the end of the current event Loop - during micro-task processing\r\n *\r\n * @param {Function} callback\r\n */\r\nlet nextTick = (function(){\r\n    if (typeof setImediate !== \"undefined\" && reIsNativeCode.test(setImediate.toString())) {\r\n        return setImediate;\r\n    }\r\n\r\n    // Native Promsie? Use it.\r\n    if (typeof Promise === 'function' && reIsNativeCode.test(Promise.toString())) {\r\n        let resolved = Promise.resolve();\r\n        return function _nextTick(fn) {\r\n            resolved.then(fn).catch(e => console.log(e));\r\n        };\r\n    }\r\n\r\n    // fallback to setTimeout\r\n    // From: https://bugzilla.mozilla.org/show_bug.cgi?id=686201#c68\r\n    let immediates = [];\r\n    let processing = false;\r\n\r\n    function processPending() {\r\n        setTimeout(function() {\r\n            immediates.shift()();\r\n            if (immediates.length) {\r\n                processPending();\r\n\r\n            } else {\r\n                processing = false;\r\n            }\r\n        }, 0);\r\n    }\r\n\r\n    return function _nextTick(fn) {\r\n        immediates.push(fn);\r\n        if (!processing) {\r\n            processing = true;\r\n            processPending();\r\n        }\r\n    };\r\n})();\r\n\r\nexport default nextTick;\r\nexport { nextTick };\r\n","import {objectDefineProperty, objectKeys, isArray} from \"common-micro-libs/src/jsutils/runtime-aliases\";\r\nimport Set from \"common-micro-libs/src/jsutils/Set\"\r\nimport nextTick from \"common-micro-libs/src/jsutils/nextTick\"\r\n\r\n//---------------------------------------------------------------------------\r\nexport const OBSERVABLE_IDENTIFIER = \"___$observable$___\"; // FIXME: this should be a Symbol()\r\n\r\nconst DEFAULT_PROP_DEFINITION = { configurable: true, enumerable: true };\r\nconst TRACKERS = new Set();\r\nconst WATCHER_IDENTIFIER = \"___$watching$___\";\r\nconst ARRAY_WATCHABLE_PROTO = \"__$watchable$__\";\r\nconst HAS_ARRAY_WATCHABLE_PROTO = `__$is${ARRAY_WATCHABLE_PROTO}`;\r\nconst ARRAY_MUTATING_METHODS = [\r\n    \"pop\",\r\n    \"push\",\r\n    \"shift\",\r\n    \"splice\",\r\n    \"unshift\",\r\n    \"sort\",\r\n    \"reverse\"\r\n];\r\nconst isPureObject = obj => obj && Object.prototype.toString.call(obj) === \"[object Object]\";\r\nconst NOTIFY_QUEUE = new Set();\r\nlet isNotifyQueued = false;\r\n\r\n/**\r\n * A lightweight utility to Watch an object's properties and get notified when it changes.\r\n *\r\n * @param {Object} obj\r\n *\r\n * @param {String} [prop]\r\n *  the property to be watched. If left undefined, then all existing properties are watched.\r\n *\r\n * @param {Function} [callback]\r\n *  The callback to be executed when property or object changes. If left undefined, then\r\n *  `obj` is only made observable (internal structure created and all current enumerable'\r\n *  properties are made \"watchable\")\r\n *\r\n *  __NOTE:__\r\n *  The callback will include a new non-enumerable property named `stopWatchingAll` of\r\n *  type `Function` that can be used to remove the given callback from all places where\r\n *  it is being used to watch a property. example:\r\n *\r\n *      const obj1 = { first: \"john\" };\r\n *      const obj2 = { last: \"smith\" };\r\n *      const watcher = () => console.log(\"changed\");\r\n *\r\n *      objectWatchProp(obj, \"first\", watcher);\r\n *      objectWatchProp(obj1, \"last\", watcher);\r\n *\r\n *      watcher.stopWatchingAll(); // removes callback from all objects that it is watching\r\n *\r\n *\r\n * @return {ObjectUnwatchProp}\r\n * Return a function to unwatch the property. Function also has a static property named\r\n * `destroy` that will do the same thing (ex. `unwatch.destroy()` is same as `unwatch()`)\r\n *\r\n * @example\r\n *\r\n * const oo = {};\r\n * const notifyNameChanged =() => console.log(`name changed: ${oo.name}`);\r\n * const unWatchName = objectWatchProp(oo, \"name\", notifyNameChanged);\r\n *\r\n * oo.name = \"paul\"; // console outputs: name changed: paul\r\n * unWatchName(); // stop watching\r\n * notifyNameChanged.stopWatchingAll(); // callback's `stopWatchingAll()` can also be called.\r\n *\r\n * @example\r\n *\r\n * const oo = {\r\n *      name: \"paul\",\r\n *      country: \"usa\"\r\n * };\r\n *\r\n * // watch all changes to object\r\n * objectWatchProp(oo, null, () => console.log(\"Something changed in object\"));\r\n *\r\n * // OR: make all properties of object observable\r\n * objectWatchProp(oo);\r\n *\r\n */\r\nexport function objectWatchProp(obj, prop, callback) {\r\n    if (!obj[OBSERVABLE_IDENTIFIER]) {\r\n        setupObjState(obj);\r\n    }\r\n\r\n    // Convert prop to observable?\r\n    if (prop && !obj[OBSERVABLE_IDENTIFIER].props[prop]) {\r\n        setupPropState(obj, prop);\r\n        setupPropInterceptors(obj, prop);\r\n    }\r\n    // Else: do we need to setup the interceptors (again)?\r\n    // (Used by Computed props when they are created against a prop has\r\n    // been setup as an observable)\r\n    else if (prop && obj[OBSERVABLE_IDENTIFIER].props[prop].setupInterceptors) {\r\n        setupPropInterceptors(obj, prop);\r\n    }\r\n\r\n    if (prop && callback) {\r\n        obj[OBSERVABLE_IDENTIFIER].props[prop].storeCallback(callback);\r\n    }\r\n    else if (!prop) {\r\n        makeObservable(obj, false);\r\n\r\n        if (callback) {\r\n            obj[OBSERVABLE_IDENTIFIER].storeCallback(callback);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Unwatch an object property or object.\r\n     *\r\n     * @typedef {Function} ObjectUnwatchProp\r\n     * @property {Function} destroy Same as function returned.\r\n     */\r\n    const unWatch = destroyWatcher.bind(\r\n        obj,\r\n        callback,\r\n        (prop ? obj[OBSERVABLE_IDENTIFIER].props[prop] : obj[OBSERVABLE_IDENTIFIER])\r\n    );\r\n\r\n    unWatch.destroy = unWatch;\r\n    return unWatch;\r\n}\r\n\r\nexport function setupObjState(obj) {\r\n    if (!obj[OBSERVABLE_IDENTIFIER]) {\r\n        objectDefineProperty(obj, OBSERVABLE_IDENTIFIER, {\r\n            configurable: true,\r\n            writable: true,\r\n            deep: false,\r\n            value: {\r\n                props: {},\r\n                dependents: new Set(),\r\n                watchers: new Set(),\r\n                storeCallback: storeCallback\r\n            }\r\n        });\r\n        setupCallbackStore(obj[OBSERVABLE_IDENTIFIER].dependents, false);\r\n        setupCallbackStore(obj[OBSERVABLE_IDENTIFIER].watchers, true);\r\n    }\r\n}\r\n\r\nfunction setupCallbackStore (store, async = false) {\r\n    store.async = async;\r\n    store.isQueued = false;\r\n    store.notify = notify;\r\n}\r\n\r\nfunction setupPropState(obj, prop) {\r\n    if (!obj[OBSERVABLE_IDENTIFIER].props[prop]) {\r\n        obj[OBSERVABLE_IDENTIFIER].props[prop] = {\r\n            val: undefined,\r\n            dependents: new Set(),\r\n            watchers: new Set(),\r\n            parent: obj[OBSERVABLE_IDENTIFIER],\r\n            storeCallback: storeCallback,\r\n            setupInterceptors: true,\r\n            deep: obj[OBSERVABLE_IDENTIFIER].deep\r\n        };\r\n        setupCallbackStore(obj[OBSERVABLE_IDENTIFIER].props[prop].dependents, false);\r\n        setupCallbackStore(obj[OBSERVABLE_IDENTIFIER].props[prop].watchers, true);\r\n    }\r\n    return obj[OBSERVABLE_IDENTIFIER].props[prop];\r\n}\r\n\r\nfunction setupPropInterceptors(obj, prop) {\r\n    const propOldDescriptor =\r\n        Object.getOwnPropertyDescriptor(obj, prop) || DEFAULT_PROP_DEFINITION;\r\n\r\n    if (!propOldDescriptor.get) {\r\n        obj[OBSERVABLE_IDENTIFIER].props[prop].val = obj[prop];\r\n\r\n        // If prop is marked as `deep` then walk the value and convert it to observables\r\n        if (obj[OBSERVABLE_IDENTIFIER].props[prop].deep) {\r\n            makeObservable(obj[OBSERVABLE_IDENTIFIER].props[prop].val);\r\n        }\r\n    }\r\n\r\n    objectDefineProperty(obj, prop, {\r\n        configurable: propOldDescriptor.configurable || false,\r\n        enumerable: propOldDescriptor.enumerable || false,\r\n        get() {\r\n            if (TRACKERS.size) {\r\n                TRACKERS.forEach(\r\n                    obj[OBSERVABLE_IDENTIFIER].props[prop].storeCallback,\r\n                    obj[OBSERVABLE_IDENTIFIER].props[prop]\r\n                );\r\n            }\r\n\r\n            if (propOldDescriptor.get) {\r\n                return propOldDescriptor.get.call(obj);\r\n            }\r\n\r\n            return obj[OBSERVABLE_IDENTIFIER].props[prop].val;\r\n        },\r\n        set(newVal) {\r\n            const priorVal = obj[prop];\r\n            if (propOldDescriptor.set) {\r\n                newVal = propOldDescriptor.set.call(obj, newVal);\r\n            } else {\r\n                obj[OBSERVABLE_IDENTIFIER].props[prop].val = newVal;\r\n            }\r\n\r\n            // If this `deep` is true and the new value is an object,\r\n            // then ensure its observable\r\n            if (obj[OBSERVABLE_IDENTIFIER].props[prop].deep) {\r\n                makeObservable(newVal);\r\n            }\r\n\r\n            if (newVal !== priorVal) {\r\n                obj[OBSERVABLE_IDENTIFIER].props[prop].watchers.notify();\r\n                obj[OBSERVABLE_IDENTIFIER].props[prop].dependents.notify();\r\n                obj[OBSERVABLE_IDENTIFIER].watchers.notify();\r\n            }\r\n\r\n            return newVal;\r\n        }\r\n    });\r\n\r\n    obj[OBSERVABLE_IDENTIFIER].props[prop].setupInterceptors = false;\r\n\r\n    // Notify object watchers that a new prop was added\r\n    if (propOldDescriptor === DEFAULT_PROP_DEFINITION) {\r\n        obj[OBSERVABLE_IDENTIFIER].watchers.notify();\r\n    }\r\n}\r\n\r\n/**\r\n * Makes an object (deep) observable.\r\n *\r\n * @param {Object|Array} obj\r\n * @param {Boolean} [walk=true]\r\n *  If `true` (default), the object's property values are walked and\r\n *  also make observable.\r\n * @param {Boolean} [force=false]\r\n *  if true, then even if object looks like it might have already been\r\n *  converted to an observable, it will still be walked\r\n *  (if `walk` is `true`)\r\n *\r\n * @return {Object|Array} Original `obj` is returned\r\n */\r\nexport function makeObservable(obj, walk = true, force = false) {\r\n    if (!isPureObject(obj) && !isArray(obj)) {\r\n        return obj;\r\n    }\r\n\r\n    if (!obj[OBSERVABLE_IDENTIFIER]) {\r\n        // OBJECT\r\n        if (isPureObject(obj)) {\r\n            setupObjState(obj, force);\r\n        }\r\n        // ARRAY\r\n        else if (isArray(obj)) {\r\n            makeArrayWatchable(obj, force);\r\n        }\r\n    }\r\n\r\n    // If object is marked as \"deep\" and we are not forcing the walk,\r\n    // then no need to do anything. Otherwise, mark this object as\r\n    // being `deep` and keep going\r\n    if (!force && obj[OBSERVABLE_IDENTIFIER].deep) {\r\n        return;\r\n    }\r\n    else if (walk) {\r\n        obj[OBSERVABLE_IDENTIFIER].deep = true;\r\n    }\r\n\r\n    if (isArray(obj)) {\r\n        walkArray(obj);\r\n    }\r\n    else {\r\n        walkObject(obj);\r\n    }\r\n\r\n    return obj;\r\n}\r\n\r\n\r\nfunction walkArray(arr, force) {\r\n    for (let i=0, t=arr.length; i<t; i++) {\r\n        makeObservable(arr[i], true, force);\r\n    }\r\n}\r\n\r\nfunction walkObject(obj, force) {\r\n    // make ALL props observable\r\n    const keys = objectKeys(obj);\r\n\r\n    for (let i=0, t=keys.length; i<t; i++) {\r\n        if (!obj[OBSERVABLE_IDENTIFIER].props[keys[i]]) {\r\n            setupPropState(obj, keys[i]);\r\n            setupPropInterceptors(obj, keys[i]);\r\n        }\r\n\r\n        // Do we need to walk this property's value?\r\n        if (\r\n            !obj[OBSERVABLE_IDENTIFIER].props[keys[i]].deep ||\r\n            force\r\n        ) {\r\n            obj[OBSERVABLE_IDENTIFIER].props[keys[i]].deep = true;\r\n\r\n            if (isPureObject(obj[keys[i]])) {\r\n                makeObservable(obj[keys[i]], true, force);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction notify() {\r\n    // this: new Set(). Set instance could have two additional attributes: async ++ isQueued\r\n\r\n    if (!this.size) {\r\n        return;\r\n    }\r\n\r\n    // If the watcher Set() is synchronous, then execute the callbacks now\r\n    if (!this.async) {\r\n        this.forEach(execCallback);\r\n\r\n    } else {\r\n        this.forEach(pushCallbacksToQueue);\r\n    }\r\n\r\n    queueCallbackAndScheduleRun();\r\n}\r\n\r\nexport function queueCallbackAndScheduleRun(cb) {\r\n    if (cb) {\r\n        pushCallbacksToQueue(cb);\r\n    }\r\n\r\n    if (isNotifyQueued || !NOTIFY_QUEUE.size) {\r\n        return;\r\n    }\r\n\r\n    isNotifyQueued = true;\r\n    nextTick(flushQueue);\r\n}\r\n\r\nfunction pushCallbacksToQueue(callback) {\r\n    NOTIFY_QUEUE.add(callback);\r\n}\r\n\r\nfunction execCallback(cb) {\r\n    cb();\r\n}\r\n\r\nfunction flushQueue() {\r\n    const queuedCallbacks = [...NOTIFY_QUEUE];\r\n    NOTIFY_QUEUE.clear();\r\n    isNotifyQueued = false;\r\n    for (let x=0, total=queuedCallbacks.length; x<total; x++) {\r\n        queuedCallbacks[x]();\r\n    }\r\n    queuedCallbacks.length = 0;\r\n}\r\n\r\nfunction storeCallback(callback) {\r\n    // this === PropState\r\n    if (callback.asDependent && this.dependents) {\r\n        setCallbackAsWatcherOf(callback, this.dependents);\r\n        this.dependents.add(callback);\r\n    } else {\r\n        setCallbackAsWatcherOf(callback, this.watchers);\r\n        this.watchers.add(callback);\r\n    }\r\n}\r\n\r\nexport function destroyWatcher(callback, propSetup) {\r\n    // this == obj\r\n    if (callback) {\r\n        // Object state does not have dependents\r\n        if (propSetup.dependents) {\r\n            propSetup.dependents.delete(callback);\r\n            unsetCallbackAsWatcherOf(callback, propSetup.dependents);\r\n        }\r\n        propSetup.watchers.delete(callback);\r\n        unsetCallbackAsWatcherOf(callback, propSetup.watchers);\r\n    }\r\n}\r\n\r\n/**\r\n * Sets a callback to be added to the list of watchers for any property\r\n * that is accessed after this function is called.\r\n *\r\n * @param {Function} callback\r\n *  The callback to be added to dependency list of watchers.\r\n *  NOTE: the callback will modified to include a new property\r\n *  `stopWatchingAll()` which can be used to remove the given callback\r\n *  from ALL dependencies that include it.\r\n *\r\n */\r\nexport function setDependencyTracker(callback) {\r\n    TRACKERS.add(callback);\r\n}\r\n\r\n/**\r\n * Removes a callback from being added to a property's watchers as they\r\n * are accessed.\r\n *\r\n * @param {Function} callback\r\n */\r\nexport function unsetDependencyTracker(callback) {\r\n    TRACKERS.delete(callback);\r\n}\r\n\r\n/**\r\n * Removes the given callback from all property watchers lists that it may\r\n * be included in.\r\n *\r\n * @param {Function} callback\r\n */\r\nexport function stopTrackerNotification(callback) {\r\n    if (callback[WATCHER_IDENTIFIER]) {\r\n        callback[WATCHER_IDENTIFIER].stopWatchingAll();\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Store a reference to the Set instance provided on input, on the callback.\r\n * @private\r\n * @param {Function} callback\r\n * @param {Set} watchersSet\r\n */\r\nfunction setCallbackAsWatcherOf(callback, watchersSet) {\r\n    if (!callback[WATCHER_IDENTIFIER]) {\r\n        objectDefineProperty(callback, WATCHER_IDENTIFIER, {\r\n            configurable: true,\r\n            writable: true,\r\n            value: {\r\n                watching: new Set()\r\n            }\r\n        });\r\n        objectDefineProperty(callback, \"stopWatchingAll\", {\r\n            configurable: true,\r\n            writable: true,\r\n            value() {\r\n                callback[WATCHER_IDENTIFIER].watching.forEach(watcherList =>\r\n                    watcherList.delete(callback)\r\n                );\r\n                callback[WATCHER_IDENTIFIER].watching.clear();\r\n            }\r\n        });\r\n    }\r\n\r\n    callback[WATCHER_IDENTIFIER].watching.add(watchersSet);\r\n}\r\n\r\n/**\r\n * Removes the reference to the given Set instance from the callback function provided\r\n * @private\r\n * @param {Function} callback\r\n * @param {Set} watchersSet\r\n */\r\nfunction unsetCallbackAsWatcherOf(callback, watchersSet) {\r\n    if (callback[WATCHER_IDENTIFIER]) {\r\n        callback[WATCHER_IDENTIFIER].watching.delete(watchersSet);\r\n    }\r\n}\r\n\r\n\r\nexport function makeArrayWatchable(arr) {\r\n    if (!arr[OBSERVABLE_IDENTIFIER]) {\r\n        setupObjState(arr);\r\n    }\r\n\r\n    // If array already has a watchable prototype, then exit\r\n    if (arr[HAS_ARRAY_WATCHABLE_PROTO]) {\r\n        return;\r\n    }\r\n\r\n    const arrCurrentProto = arr.__proto__; // eslint-disable-line\r\n\r\n    // Create prototype interceptors?\r\n    if (!arrCurrentProto[ARRAY_WATCHABLE_PROTO]) {\r\n        const arrProtoInterceptor = Object.create(arrCurrentProto);\r\n        ARRAY_MUTATING_METHODS.forEach(method => {\r\n            objectDefineProperty(arrProtoInterceptor, method, {\r\n                configurable: true,\r\n                writable: true,\r\n                value: function arrayMethodInterceptor(...args) {\r\n                    const response = arrCurrentProto[method].call(this, ...args);\r\n                    this[OBSERVABLE_IDENTIFIER].dependents.notify();\r\n                    this[OBSERVABLE_IDENTIFIER].watchers.notify();\r\n                    return response;\r\n                }\r\n            });\r\n        });\r\n\r\n        // VALUE ADD: include a `size` read only attribute\r\n        objectDefineProperty(arrProtoInterceptor, \"size\", {\r\n            configurable: true,\r\n            get() {\r\n                if (TRACKERS.size) {\r\n                    TRACKERS.forEach(\r\n                        this[OBSERVABLE_IDENTIFIER].storeCallback,\r\n                        this[OBSERVABLE_IDENTIFIER]\r\n                    );\r\n                }\r\n                return this.length;\r\n            }\r\n        });\r\n\r\n        // Add flag to new array interceptor prototype indicating its watchable\r\n        objectDefineProperty(arrProtoInterceptor, HAS_ARRAY_WATCHABLE_PROTO, {\r\n            value: true\r\n        });\r\n\r\n        // Store the new interceptor prototype on the real prototype\r\n        objectDefineProperty(arrCurrentProto, ARRAY_WATCHABLE_PROTO, {\r\n            configurable: true,\r\n            writable: true,\r\n            value: arrProtoInterceptor\r\n        });\r\n    }\r\n\r\n    arr.__proto__ = arrCurrentProto[ARRAY_WATCHABLE_PROTO]; // eslint-disable-line\r\n}\r\n\r\n\r\nexport default objectWatchProp;\r\n","/**\r\n * Adds an event handler to a DOM element and returns back an\r\n * object that allows for removal of the event.\r\n *\r\n * @function domAddEventListener\r\n *\r\n * @param {HTMLElement} ele\r\n * @param {String} event\r\n *  The event to listen to (ex. `click`). Multiple events can be defined\r\n *  by separating them with whitespace\r\n * @param {Function} callback\r\n * @param {Boolean} [capture]\r\n *\r\n * @return DOMEventListener\r\n *\r\n * @example\r\n *\r\n * var listener = domAddEventHandler(myEle, \"click\", function(){});\r\n * ...\r\n * listener.remove();\r\n */\r\nexport function domAddEventListener(ele, event, callback, capture) {\r\n    let events      = event.split(/\\s+/);\r\n    let evListeners = {};\r\n\r\n    events.forEach(evName => {\r\n        ele.addEventListener(evName, callback, capture);\r\n        evListeners[evName] = {\r\n            remove: () => ele.removeEventListener(evName, callback, capture)\r\n        }\r\n    });\r\n\r\n    /**\r\n     * A DOM Event listener.\r\n     *\r\n     * @typedef {Object} DOMEventListener\r\n     *\r\n     * @property {Function} remove\r\n     * @property {Object} listeners\r\n     *  List of listeners that were bound to the DOM element. Each listeners has a\r\n     *  corresponding `.remove()` method.\r\n     */\r\n    return Object.create({\r\n        listeners: evListeners,\r\n        remove: function () {\r\n            events.forEach(evName => evListeners[evName].remove());\r\n        }\r\n    });\r\n}\r\nexport default domAddEventListener;\r\n","// POLYFILL FOR WEAKMAP\r\n//  [pt] changed how \"delete\" is defined so that it can work in IE8\r\n\r\n/* jshint ignore:start */\r\n/**\r\n * @license\r\n * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\r\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\r\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\r\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\r\n * Code distributed by Google as part of the polymer project is also\r\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\r\n */\r\nif (typeof WeakMap === 'undefined') {\r\n  (function() {\r\n    var defineProperty = Object.defineProperty;\r\n    var counter = Date.now() % 1e9;\r\n\r\n    var WeakMap = function() {\r\n      this.name = '__st' + (Math.random() * 1e9 >>> 0) + (counter++ + '__');\r\n    };\r\n\r\n    WeakMap.prototype = {\r\n      set: function(key, value) {\r\n        var entry = key[this.name];\r\n        if (entry && entry[0] === key)\r\n          entry[1] = value;\r\n        else\r\n          defineProperty(key, this.name, {value: [key, value], writable: true});\r\n        return this;\r\n      },\r\n      get: function(key) {\r\n        var entry;\r\n        return (entry = key[this.name]) && entry[0] === key ?\r\n            entry[1] : undefined;\r\n      },\r\n      // [pt] Quotes around the delete property needed for IE8\r\n      \"delete\": function(key) {\r\n        var entry = key[this.name];\r\n        if (!entry || entry[0] !== key) return false;\r\n        entry[0] = entry[1] = undefined;\r\n        return true;\r\n      },\r\n      has: function(key) {\r\n        var entry = key[this.name];\r\n        if (!entry) return false;\r\n        return entry[0] === key;\r\n      }\r\n    };\r\n\r\n    window.WeakMap = WeakMap;\r\n  })();\r\n}\r\n/* jshint ignore:end */\r\n\r\n/**\r\n * Returns an object that contains an initialized WeakMap (`stash` property)\r\n * where data can be stored.\r\n *\r\n * @namespace dataStore\r\n *\r\n */\r\nvar dataStore = /** @lends dataStore */{\r\n    /**\r\n     * Stash data here.\r\n     * @type WeakMap\r\n     */\r\n    stash:  new WeakMap(),\r\n    /**\r\n     * Create a private data store and return it.\r\n     * @return {WeakMap}\r\n     */\r\n    create: function(){\r\n        return new WeakMap();\r\n    }\r\n};\r\n\r\nexport default dataStore;\r\nexport { dataStore };\r\n","import objectExtend from \"common-micro-libs/src/jsutils/objectExtend\"\r\nimport dataStore from \"common-micro-libs/src/jsutils/dataStore\"\r\nimport objectWatchProp from \"observables/src/objectWatchProp\"\r\nimport { isArray, objectKeys } from \"common-micro-libs/src/jsutils/runtime-aliases\"\r\nimport {Symbol} from \"common-micro-libs/src/jsutils/Symbol\"\r\n\r\n//============================================================================\r\nexport const PRIVATE = dataStore.create();\r\n\r\nexport const STATE_SYMBOL = Symbol(\"state\");\r\n\r\n/**\r\n * Checks if the element has an attribute set that matches any of the aliases for a prop\r\n *\r\n * @param {ComponentElement} ele\r\n * @param {ComponentElement~PropDefinition} propDef\r\n *\r\n * @return {Boolean}\r\n */\r\nexport function elementHasAttributeForProp(ele, propDef) {\r\n    return propDef.aliases.some(propAlias => ele.hasAttribute(propAlias));\r\n}\r\n\r\nexport function geAttributeValueForProp(ele, propDef) {\r\n    let attrVal = \"\";\r\n    propDef.aliases.some(propAlias => {\r\n        if (ele.hasAttribute(propAlias)) {\r\n            attrVal = ele.getAttribute(propAlias);\r\n            return true;\r\n        }\r\n    });\r\n    return attrVal;\r\n}\r\n\r\nexport function getState(instance) {\r\n    if (!PRIVATE.has(instance)) {\r\n        let state = {\r\n            ready: false,           // We have all required params\r\n            readyWatcher: null,\r\n            props: instance.props,\r\n            destroyCallbacks: [],\r\n            destroyQueued: null,\r\n            isMounted: false,\r\n            hasTemplate: false // template has been inserted into component.$ui\r\n        };\r\n\r\n        // Create all props\r\n        const propDefintions    = getPropsDefinition(instance.constructor);\r\n        const required          = objectKeys(propDefintions).filter(propName => !propDefintions[propName]._isAlias && propDefintions[propName].required);\r\n        const setReadyState     = () => {\r\n            if (!required.length || required.every(propName => !!state.props[propName])) {\r\n                state.ready = true;\r\n            }\r\n            else {\r\n                state.ready = false;\r\n            }\r\n        };\r\n\r\n        required.forEach(propName => objectWatchProp(state.props, propName, setReadyState));\r\n        setReadyState();\r\n        PRIVATE.set(instance, state);\r\n    }\r\n    return PRIVATE.get(instance);\r\n}\r\n\r\n\r\n/**\r\n * Returns a kebab-case representation of the given string on input. Essentially, replaces\r\n * each Capital letter with a `-` followed by that letter in lower case.\r\n *\r\n * @param {String} str\r\n *\r\n * @return {String}\r\n *\r\n * @example\r\n *\r\n * getKebabCase(\"Paul\"); // => -paul\r\n * getKebabCase(\"paulTavares\"); // => paul-tavares\r\n */\r\nexport function getKebabCase(str) {\r\n    return str.replace(/([A-Z])/g, (match, p1) => \"-\" + p1.toLowerCase())\r\n}\r\n\r\n\r\n/**\r\n * Given a string in kebab case (ex. paul-tavares), this will return a CamelCase\r\n * representation of that string.\r\n *\r\n * @param {String} str\r\n *\r\n * @return {String}\r\n */\r\nexport function getCamelCase(str) {\r\n    return str.replace(/(-[a-z])/g, (match, p1) => p1.toUpperCase().substr(1))\r\n}\r\n\r\n/**\r\n *\r\n * @param ComponentClass\r\n * @returns {Object<String,ComponentElement~PropDefinition>}\r\n */\r\nexport function getPropsDefinition(ComponentClass) {\r\n    let state = getComponentClassState(ComponentClass);\r\n\r\n    if (!state.propsDef) {\r\n        state.propsDef = {};\r\n\r\n        // The props are stored internally (weakmap) once for the Component Class.\r\n        // The internal definition has the \"aliases\" expanded as well.\r\n        if (ComponentClass.propsDef) {\r\n            objectKeys(ComponentClass.propsDef).forEach(propName => {\r\n                state.propsDef[propName] = ComponentClass.propsDef[propName];\r\n                // expand aliases as well\r\n                if (isArray(state.propsDef[propName].aliases)) {\r\n                    const propAliasDef = objectExtend({}, ComponentClass.propsDef[propName], { _isAlias: true });\r\n                    state.propsDef[propName].aliases.forEach(\r\n                        propNameAlias => !state.propsDef[propNameAlias] &&\r\n                                        (state.propsDef[propNameAlias] = propAliasDef));\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    return state.propsDef;\r\n}\r\n\r\n/**\r\n * Returns the internal state for the Component Class\r\n *\r\n * @param {ComponentElement} ComponentClass\r\n *\r\n * @return {Object}\r\n */\r\nexport function getComponentClassState(ComponentClass) {\r\n    if (!PRIVATE.has(ComponentClass)) {\r\n        PRIVATE.set(ComponentClass, {\r\n            propsDef: null,\r\n            template: null,\r\n            observedAttrs: null\r\n        });\r\n    }\r\n    return PRIVATE.get(ComponentClass);\r\n}\r\n\r\n/**\r\n * Returns a clone of the Class's template - ready to be used/inserted\r\n * into a instance of the class\r\n *\r\n * @param {ComponentElement} componentInstance\r\n *\r\n * @return {HTMLElement}\r\n */\r\nexport function getComponentInstanceTemplate(componentInstance) {\r\n    return componentInstance.ownerDocument.importNode(\r\n        getComponentTemplate(componentInstance.constructor).content,\r\n        true\r\n    );\r\n}\r\n\r\n/**\r\n * Returns a `HTMLTemplateElement` that holds the ComponentElement's template\r\n *\r\n * @param {ComponentElement} Component\r\n *  The ComponentElement class\r\n *\r\n * @return {HTMLTemplateElement}\r\n */\r\nexport function getComponentTemplate(Component) {\r\n    if (\"string\" === typeof Component.template) {\r\n        const classState = getComponentClassState(Component);\r\n\r\n        if (!classState.template) {\r\n            classState.template = document.createElement(\"template\");\r\n            classState.template.innerHTML = Component.template;\r\n        }\r\n\r\n        return classState.template;\r\n    }\r\n\r\n    return Component.template;\r\n}\r\n\r\n","//--------------------------------------------------------------\r\n// Utilities to work with polyfills like ShadyCSS\r\n//--------------------------------------------------------------\r\nimport {GLOBAL} from \"common-micro-libs/src/jsutils/getGlobal\"\r\nimport {getComponentTemplate} from \"./utils\"\r\n\r\n//===========================================================================================\r\nconst supportsShadyCSS = () => !!GLOBAL.ShadyCSS;\r\n\r\n// FIXME: code below should check also for native support for CEs (protect against polyfills loaded in a native env?)\r\n\r\n/**\r\n * Prepares the component's styles for the given `define` tag name.\r\n * Method should be called at the time the Element is registered into CustomElementsRegistry\r\n *\r\n * @param {ComponentElement} Component\r\n * @param {String} tagName\r\n */\r\nexport function prepareComponentTemplate(Component, tagName){\r\n    // FIXME: need additional checks here. ONly use shady if ShadowDom is not supported natively.\r\n    //              need to use: ShadyCSS.nativeShadow to check if shadowroot is supported\r\n    //              Also: should we check the Component's \"useShadow\" property?\r\n    if (supportsShadyCSS()) {\r\n        GLOBAL.ShadyCSS.prepareTemplate(getComponentTemplate(Component), tagName);\r\n    }\r\n}\r\n\r\n/**\r\n * Styles the instance of a custom element using ShadyCSS\r\n *\r\n * @param {HTMLElement} componentInstance\r\n */\r\nexport function styleComponentInstanceElement(componentInstance) {\r\n    if (supportsShadyCSS()) {\r\n        GLOBAL.ShadyCSS.styleElement(componentInstance);\r\n    }\r\n}\r\n\r\n/**\r\n * Restyles a component's sub-tree. Use it when DOM might have been altered dynamically\r\n * and polyfilled styles needs to be applied.\r\n *\r\n * @param {HTMLElement} componentInstance\r\n */\r\nexport function reStyleComponentInstanceSubtree(componentInstance) {\r\n    if (supportsShadyCSS()) {\r\n        GLOBAL.ShadyCSS.styleSubtree(componentInstance)\r\n    }\r\n}","import objectExtend from \"common-micro-libs/src/jsutils/objectExtend\"\r\nimport { objectKeys, objectDefineProperty } from \"common-micro-libs/src/jsutils/runtime-aliases\"\r\nimport {objectWatchProp} from \"observables/src/objectWatchProp\"\r\nimport domAddEventListener from \"common-micro-libs/src/domutils/domAddEventListener\"\r\nimport {\r\n    getState,\r\n    PRIVATE,\r\n    getPropsDefinition,\r\n    getComponentInstanceTemplate,\r\n    getComponentClassState,\r\n    elementHasAttributeForProp,\r\n    geAttributeValueForProp\r\n} from \"./utils\"\r\nimport {\r\n    prepareComponentTemplate,\r\n    styleComponentInstanceElement\r\n} from \"./polyfill-support\"\r\n\r\n//============================================================================\r\nconst SHADOW_DOM_SUPPORTED = document.head.createShadowRoot || document.head.attachShadow;\r\nconst EV_DEFAULT_INIT = { bubbles: false, cancelable: false, composed: false };\r\n\r\n\r\n/**\r\n * A generic class for building widgets based on HTML Custom Elements.\r\n *\r\n * @extends HTMLElement\r\n *\r\n */\r\nexport class ComponentElement extends HTMLElement {\r\n    constructor(...args) {\r\n        const self = super(...args) || this;\r\n        setupComponent(self);\r\n        return self;\r\n    }\r\n\r\n    //==============================================================\r\n    //  Static Members\r\n    //==============================================================\r\n\r\n    /**\r\n     * The Component's props definition\r\n     * @name propsDef\r\n     * @type {Object<String,ComponentElement~PropDefinition>}\r\n     */\r\n\r\n    /**\r\n     * Return default registration tag name\r\n     *\r\n     * @type {String}\r\n     */\r\n    static get tagName() { throw new Error(\"tagName not defined\") }\r\n\r\n    /**\r\n     * Registers the web component. Uses tagName as default input param\r\n     */\r\n    static define(name) {\r\n        prepareComponentTemplate(this, name || this.tagName);\r\n        window.customElements.define(name || this.tagName, this);\r\n    }\r\n\r\n    /**\r\n     * The number of milliseconds to wait after an element has been detached from DOM before\r\n     * the `.destroy()` method is auto executed.\r\n     *\r\n     * @type {Number}\r\n     */\r\n    static get delayDestroy() { return 250; }\r\n\r\n    /**\r\n     * If Shadow DOM should be used. Default `true`\r\n     *\r\n     * @type {Boolean}\r\n     */\r\n    static get useShadow() { return true; }\r\n\r\n    /**\r\n     * The value for the `mode` option that will be used on the `attachShadow` method.\r\n     *\r\n     * @type {string}\r\n     */\r\n    static get shadowMode() { return \"open\"; }\r\n\r\n    /**\r\n     * Returns the HTML template for the component. Could also be a Template html element\r\n     *\r\n     * @type {String|HTMLTemplateElement}\r\n     */\r\n    static get template() { return \"<div></div>\"; }\r\n\r\n    /**\r\n     * Renderer for the template and return what should be inserted into shadowDom.\r\n     * By default, this base class will simply clone the `template` defined in the\r\n     * static property above. This method will called prior to doing that, and if\r\n     * it returns a `truthy` value, then its assume to be either an HTMLElement or\r\n     * DocumentFragment with the element's instance UI (which will be inserted into\r\n     * shadowDom).\r\n     *\r\n     * **NOTE**: Should always use `getComponentInstanceTemplate` or `getComponentTemplate`\r\n     * to retrieve the template or its content, since it is manipulated in browsers that\r\n     * use the polyfills to make the template compatible in those platforms.\r\n     *\r\n     * @param {ComponentElement} eleInstance\r\n     *  The `ComponentElement` instance being initialized\r\n     *\r\n     * @return {HTMLElement|DocumentFragment}\r\n     */\r\n    static renderTemplate(eleInstance) {\r\n        // FIXME: should two additional params be provided - one to get templateInstance and another to get templateElement?\r\n        return getComponentInstanceTemplate(eleInstance);\r\n    }\r\n\r\n    /**\r\n     * The default initialization options for the `emit()` method.\r\n     * See [Event.contructor]{@link http://devdocs.io/dom/event/event} for more.\r\n     *\r\n     * @type EventInit\r\n     */\r\n    static get eventInitOptions() { return EV_DEFAULT_INIT; }\r\n\r\n    // Returns the list (Array) of props that were marked as `@attr`\r\n    static get observedAttributes() {\r\n        let state = getComponentClassState(this);\r\n\r\n        if (!state.observedAttrs) {\r\n            const propList = getPropsDefinition(this);\r\n            state.observedAttrs = objectKeys(propList).filter(p => propList[p].attr);\r\n        }\r\n\r\n        return state.observedAttrs;\r\n    }\r\n\r\n    //==============================================================\r\n    //  Instance Members\r\n    //==============================================================\r\n\r\n    // Reflects changed html attributes to state.props\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        const propsDef =  getPropsDefinition(this.constructor);\r\n        if (propsDef[name]) {\r\n            name = propsDef[name].name;\r\n        }\r\n        this.props[name] = newValue;\r\n    }\r\n\r\n    /**\r\n     * Destroy the instance of the widget\r\n     */\r\n    destroy() {\r\n        if (PRIVATE.has(this)) {\r\n            const state = getState(this);\r\n            PRIVATE.delete(this);\r\n            if (state.destroyQueued) {\r\n                clearTimeout(state.destroyQueued);\r\n                state.destroyQueued = null;\r\n            }\r\n            state.destroyCallbacks.splice(0).forEach(cb => cb());\r\n        }\r\n        if (this.parentNode) {\r\n            this.parentNode.removeChild(this);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Adds a callback to be executed when Component is destroyed.\r\n     * @param {Function} callback\r\n     */\r\n    onDestroy(callback) {\r\n        getState(this).destroyCallbacks.push(callback);\r\n    }\r\n\r\n    /**\r\n     * The Component's props.\r\n     * @type {Object}\r\n     */\r\n    get props() {\r\n        if (this.constructor.prototype === this) {\r\n            throw new Error(\"can't be used on own prototype\");\r\n        }\r\n\r\n        if (this._$props) {\r\n            return this._$props;\r\n        }\r\n\r\n        // On first call - setup the property on the instance\r\n        const propDefinitions = getPropsDefinition(this.constructor);\r\n        let props = {};\r\n\r\n        objectKeys(propDefinitions).forEach(propName => {\r\n            if (!propDefinitions[propName] || !propDefinitions[propName]._isAlias) {\r\n                let propValue = propDefinitions[propName].default.call(this);\r\n\r\n                if (\r\n                    propDefinitions[propName].attr &&\r\n                    !propDefinitions[propName].boolean &&\r\n                    elementHasAttributeForProp(this, propDefinitions[propName])\r\n                ) {\r\n                    propValue = geAttributeValueForProp(this, propDefinitions[propName]);\r\n                }\r\n\r\n                objectDefineProperty(props, propName, {\r\n                    configurable: true,\r\n                    enumerable: true,\r\n                    get() {\r\n                        return propValue;\r\n                    },\r\n                    set: newValue => {\r\n                        newValue = propDefinitions[propName].filter.call(this, newValue);\r\n                        return propValue = newValue;\r\n                    }\r\n                });\r\n            }\r\n        });\r\n\r\n        objectDefineProperty(this, \"_$props\", { value: props });\r\n        return props;\r\n    }\r\n\r\n    /**\r\n     * Pointer to the UI of the Component. Value is will either be the `showdowRoot` or the element\r\n     * itself.\r\n     *\r\n     * @returns {HTMLElement}\r\n     */\r\n    get $ui() {\r\n        return this._$ui;\r\n    }\r\n\r\n    /**\r\n     * Find an element in the `$ui` (alias for `querySelector()`)\r\n     *\r\n     * @param {String} selector\r\n     *\r\n     * @return {HTMLElement}\r\n     */\r\n    $(selector) {\r\n        return this.$ui.querySelector(selector);\r\n    }\r\n\r\n    /**\r\n     * Returns an array with matched set of DOM elements based on the given selector.\r\n     * (alias for `querySelectorAll()`)\r\n     *\r\n     * @param {String} selector\r\n     *\r\n     * @returns {Array<HTMLElement>}\r\n     */\r\n    $$(selector) {\r\n        const result = this.$ui.querySelectorAll(selector);\r\n        if (Array.isArray(result)) {\r\n            return;\r\n        }\r\n        return Array.prototype.slice.call(result, 0);\r\n    }\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~ LIFE CYCLE HOOKS ~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n    /**\r\n     * Called to initialize the component, but only after only after all required\r\n     * props have been provided.  This method could be called multiple times, if component\r\n     * has been destroyed, but then re-attached to the DOM Tree.\r\n     *\r\n     */\r\n    init() {}\r\n\r\n    /**\r\n     * Component is ready to be started. This means that all required props/param have been provided.\r\n     */\r\n    ready() {}\r\n\r\n    /**\r\n     * Component is not ready, and if already stated, it might need adjusted. This means that not all\r\n     * required props are currently defined.\r\n     */\r\n    unready() {}\r\n\r\n    /**\r\n     * Called only after the component has been initialized (`init()` has been called).\r\n     * This method could be called multiple times depending on whether the element is\r\n     * added/removed from DOM.\r\n     * This is a good place to setup global events and/or initiate retrieval of data.\r\n     */\r\n    mounted() {}\r\n\r\n\r\n    /**\r\n     * Called if component has been initialized (`init()` has run).\r\n     */\r\n    unmounted() {}\r\n\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~ EVENTEMITTER INTERFACE ~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n    /**\r\n     * Dispatches a native `CustomEvent`. The `data` provided will be available\r\n     * in the customEvent.detail property\r\n     *\r\n     * @param {String} eventName\r\n     * @param {*} data\r\n     * @param {EventInit} [eventInit=ComponentElement.eventInitOptions]\r\n     *  Any other options for the CustomEvent initialization.\r\n     *  See [Event.constructor]{@link http://devdocs.io/dom/event/event} for more.\r\n     *\r\n     * @example\r\n     *\r\n     * document.body.addEventListener(\"my-event\", function (ev) { console.log(ev.detail); });\r\n     *\r\n     * // My component\r\n     * myComponent.emit(\"my-event\", { msg: \"hello\" });\r\n     *\r\n     */\r\n    emit(eventName, data, eventInit) {\r\n        this.dispatchEvent(new CustomEvent(\r\n            eventName,\r\n            objectExtend({}, this.constructor.eventInitOptions, eventInit, { detail: data })\r\n        ));\r\n    }\r\n\r\n    /**\r\n     * Set an event listener on the current component\r\n     *\r\n     * @param {String} eventNames\r\n     *  One or more event names to listen for (space delimiter)\r\n     *\r\n     * @param {Function} callback\r\n     *\r\n     * @param {Boolean} [capture=false]\r\n     *\r\n     * @returns {DOMEventListener}\r\n     */\r\n    on(eventNames, callback, capture) {\r\n        return domAddEventListener(this, eventNames, callback, capture);\r\n    }\r\n\r\n    /**\r\n     * Add callback to be called when props change\r\n     *\r\n     * @param {Function} callback\r\n     * @param {String} [propName]\r\n     *  Optional. The specific prop to watch.\r\n     *\r\n     * @return {ObjectUnwatchProp}\r\n     */\r\n    onPropsChange(callback, propName) {\r\n        return objectWatchProp(this.props, propName, callback);\r\n    }\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~ BUITINS ~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n    connectedCallback() {\r\n        styleComponentInstanceElement(this);\r\n\r\n        // Cancel destroy if it is queued\r\n        if (PRIVATE.has(this)) {\r\n            const state = getState(this);\r\n            if (state.destroyQueued) {\r\n                clearTimeout(state.destroyQueued);\r\n                state.destroyQueued = null;\r\n            }\r\n            state.isMounted = true;\r\n            if (state.ready) {\r\n                this.mounted();\r\n            }\r\n        }\r\n        else {\r\n            getState(this).isMounted = true;\r\n            setupComponent(this);\r\n        }\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        // Delay calling .destroy() by 60s, just in case user re-attaches component back to dom.\r\n        // This seems to be currently the only way to ensure attached `onDestroy` logic run when\r\n        // the element is no longer needed.\r\n        if (PRIVATE.has(this)) {\r\n            const state = getState(this);\r\n            if (!state.destroyQueued) {\r\n                state.destroyQueued = setTimeout(this.destroy.bind(this), this.constructor.delayDestroy);\r\n            }\r\n            state.isMounted = false;\r\n            if (state.ready) {\r\n                this.unmounted();\r\n            }\r\n        }\r\n    }\r\n}\r\nexport default ComponentElement;\r\n\r\nfunction setupComponent(component) {\r\n    const state = getState(component);\r\n    let lastReadyState = null;\r\n    const handleReadyChanges = () => {\r\n        if (lastReadyState === state.ready) {\r\n            return;\r\n        }\r\n\r\n        lastReadyState = state.ready;\r\n\r\n        if (state.ready) {\r\n            if (!state.hasTemplate) {\r\n                // component._$ui.innerHTML = component.constructor.template;\r\n                component._$ui.appendChild(\r\n                    component.constructor.renderTemplate(component)\r\n                );\r\n                state.hasTemplate = true;\r\n            }\r\n\r\n            component.ready();\r\n\r\n            if (state.isMounted) {\r\n                component.mounted();\r\n            }\r\n        }\r\n        else if (state.hasTemplate) {\r\n            component.unready();\r\n        }\r\n\r\n    };\r\n\r\n    if (component.constructor.useShadow && SHADOW_DOM_SUPPORTED) {\r\n        if (component.shadowRoot) {\r\n            component._$ui = component.shadowRoot;\r\n        }\r\n        else {\r\n            component._$ui = component.attachShadow({ mode: component.constructor.shadowMode });\r\n        }\r\n    }\r\n    else {\r\n        component._$ui = component;\r\n    }\r\n\r\n    component.init();\r\n\r\n    state.readyWatcher = objectWatchProp(state, \"ready\", handleReadyChanges);\r\n    component.onDestroy(state.readyWatcher);\r\n    handleReadyChanges();\r\n}\r\n","import objectExtend from \"common-micro-libs/src/jsutils/objectExtend\"\r\nimport { objectDefineProperty } from \"common-micro-libs/src/jsutils/runtime-aliases\"\r\nimport { getKebabCase, getPropsDefinition, elementHasAttributeForProp } from \"../utils\"\r\n\r\n//===============================================================================\r\nconst RE_UPPER_CASE_LETTERS = /[A-Z]/;\r\nconst NOOP = val => val;\r\n\r\n/**\r\n * Create a ComponentElement property.\r\n *\r\n * @param {Object} [options]\r\n * @param {Object} [Proto]\r\n * @param {String} [prop]\r\n * @param {Object} [descriptor]\r\n *\r\n * @returns {Function}\r\n */\r\nexport function prop(...args) {\r\n    // Called with options? Return Design function\r\n    if (args.length < 2) {\r\n        return setupProp.bind(null, args[0]);\r\n    }\r\n    return setupProp(null, ...args);\r\n}\r\n\r\n\r\nfunction setupProp(options, Proto, prop, descriptor) {\r\n    let getter = descriptor.get;\r\n    let setter = descriptor.set;\r\n    let propDef;\r\n\r\n    // If prop is defined as `boolean` then ensure that the value stored is\r\n    // always a boolean based upon whether the prop is on the element or not\r\n    // In this case, defined getter/setter is ignored/discarded\r\n    // TODO: is there a use case where calling the real getter/setter is valid?\r\n    if (options && options.boolean) {\r\n        options.attr = true;\r\n\r\n        getter = descriptor.get = function () {\r\n            return elementHasAttributeForProp(this, propDef);\r\n        };\r\n\r\n        setter = descriptor.set = function (value) {\r\n            // When setting the value of this attribute directly on the instance (or instance.props),\r\n            // ensure that element attribute is also adjusted to reflect value.\r\n            // Do this only if the `value` is boolean - because when an attribute is added to the\r\n            // element, its value should be empty string.\r\n            if (\"boolean\" === typeof value) {\r\n                if (value && !elementHasAttributeForProp(this, propDef)) {\r\n                    this.setAttribute(prop, \"\");\r\n                }\r\n                else if (!value && elementHasAttributeForProp(this, propDef)) {\r\n                    this.removeAttribute(prop);\r\n                }\r\n            }\r\n            return elementHasAttributeForProp(this, propDef);\r\n        };\r\n    }\r\n\r\n    propDef = objectExtend(getPropDef(Proto, prop, getter, setter), options);\r\n    descriptor.get = descriptor.set = lazyProp(prop, getter, setter);\r\n\r\n    // Create a instance property for each alias as well\r\n    if (propDef.aliases.length) {\r\n        propDef.aliases.forEach(propAliasName => {\r\n            if (!(propAliasName in Proto)) {\r\n                const aliasPropGetterSetterSetup = lazyProp(propAliasName, getter, setter);\r\n                objectDefineProperty(Proto, propAliasName, {\r\n                    configurable: true,\r\n                    get: aliasPropGetterSetterSetup,\r\n                    set: aliasPropGetterSetterSetup\r\n                });\r\n            }\r\n        })\r\n    }\r\n    return descriptor;\r\n}\r\n\r\n\r\nfunction getClassProps(Proto) {\r\n    if (!Proto.constructor.propsDef) {\r\n        objectDefineProperty(Proto.constructor, \"propsDef\", { configurable: true, writable: true, value: {} })\r\n    }\r\n    return Proto.constructor.propsDef;\r\n}\r\n\r\n/**\r\n * Returns the PropDefinition\r\n *\r\n * @private\r\n *\r\n * @param Proto\r\n * @param name\r\n * @param getter\r\n * @param setter\r\n * @returns ComponentElement~PropDefinition\r\n */\r\nfunction getPropDef(Proto, name, getter, setter) {\r\n    const classProps = getClassProps(Proto);\r\n\r\n    if (!classProps[name]) {\r\n        /**\r\n         * A Class prop definition\r\n         *\r\n         * @typedef {Object} ComponentElement~PropDefinition\r\n         * @property {String} name              Then name of the prop\r\n         * @property {Boolean} attr             Can the prop be set via an HTML attribute\r\n         * @property {Boolean} required         Is the prop required\r\n         * @property {Boolean} boolean          Is the prop value mean to be a boolean (note: also forces `attr` to true)\r\n         * @property {Function} default         Function that returns default value (the `getter` when decorator is used)\r\n         * @property {Function} filter          Function that filters the value being set (the `setter` when decorator is used)\r\n         * @property {Array<String>} aliases    An array of aliases for the prop\r\n         */\r\n        classProps[name] = {\r\n            name,\r\n            attr: false,\r\n            required: false,\r\n            boolean: false,\r\n            default: getter || NOOP,\r\n            filter: setter || NOOP,\r\n            aliases: [\r\n                name.toLowerCase()\r\n            ]\r\n            // _isAlias: --- used in getPropsDefinition()\r\n        };\r\n\r\n        // If the prop name has upper case letters, then its possible that it is\r\n        // defined as camelCase - create ka-bab alias.\r\n        if (RE_UPPER_CASE_LETTERS.test(name)) {\r\n            classProps[name].aliases.push(getKebabCase(name));\r\n        }\r\n    }\r\n\r\n    return classProps[name];\r\n}\r\n\r\n/**\r\n * Return a getter/setter function to be used in a Property descriptor. When invoked first time as\r\n * part of an instance, it will setup the actually get/set function that will persist Props to the\r\n * instance `instance.props`\r\n *\r\n * @private\r\n *\r\n * @param propName\r\n * @param getter\r\n * @param setter\r\n *\r\n * @returns {Function}\r\n */\r\nfunction lazyProp(propName, getter, setter) { // FIXME: getter/setter not being used?\r\n    const $propName = `_$${ propName }`;\r\n\r\n    return function lazyGetterSetter() {\r\n        const isUpdateMode = arguments.length === 1;\r\n\r\n        if (Object.getOwnPropertyNames(this).indexOf($propName) !== -1) {\r\n            return isUpdateMode ? (this[$propName] = arguments[0]) : this[$propName];\r\n        }\r\n\r\n        // Ensure we write back to\r\n        const writeToPropName = getPropsDefinition(this.constructor)[propName].name;\r\n\r\n        objectDefineProperty(this, $propName, {\r\n            configurable: true,\r\n            get() {\r\n                return this.props[writeToPropName];\r\n            },\r\n            set(newValue) {\r\n                return this.props[writeToPropName] = newValue;\r\n            }\r\n        });\r\n\r\n        // update mode\r\n        if (isUpdateMode) {\r\n            return this[$propName] = arguments[0];\r\n        }\r\n\r\n        return this[$propName];\r\n    };\r\n}\r\n","import {objectDefineProperty} from \"common-micro-libs/src/jsutils/runtime-aliases\";\r\n\r\n/**\r\n * Binds the given attributes to the Class instance on first `get`.\r\n *\r\n * @return {Function|Object}\r\n */\r\nexport function bind(Proto, prop, descriptor) {\r\n    if (Proto && prop && descriptor && \"function\" === typeof descriptor.value) {\r\n        const propFn = descriptor.value;\r\n        const writable = descriptor.writable;\r\n        delete descriptor.value;\r\n        delete descriptor.writable;\r\n\r\n        descriptor.get = function () {\r\n            if (this[`__settingUp:${prop}`]) {\r\n                return;\r\n            }\r\n            this[`__settingUp:${prop}`] = true; // Fuck you IE!\r\n\r\n            const fn = propFn.bind(this);\r\n            objectDefineProperty(this, prop, {\r\n                configurable: descriptor.configurable,\r\n                enumerable: descriptor.enumerable,\r\n                writable: writable,\r\n                value: fn\r\n            });\r\n            delete this[`__settingUp:${prop}`];\r\n            return fn;\r\n        };\r\n        return descriptor;\r\n    }\r\n    return bind; // for when called explicitly with no params: `bind()`\r\n}\r\n","import objectExtend from \"../jsutils/objectExtend\"\r\n\r\nconst WINDOW        = window;\r\nconst DOCUMENT      = WINDOW.document;\r\nconst SCROLL_TOP    = \"scrollTop\";\r\nconst SCROLL_LEFT   = \"scrollLeft\";\r\nconst PAGE_Y_OFFSET = \"pageYOffset\";\r\nconst PAGE_X_OFFSET = \"pageXOffset\";\r\nconst UNDEFINED     = \"undefined\";\r\nconst PX            = \"px\";\r\n\r\n//const isTop     = /top/i;\r\n//const isBottom  = /bottom/i;\r\nconst isLeft    = /left/i;\r\n//const isRight   = /right/i;\r\n\r\n\r\n/**\r\n * Positions an element against another. Elements (both `positionEle` and\r\n * `anchorEle` should already be visible in dom (ex. call this method right\r\n * after adding them to DOM).\r\n *\r\n * @function domPosition\r\n *\r\n * @param {HTMLElement} positionEle\r\n *\r\n * @param {HTMLElement} anchorEle\r\n *\r\n * @param {Object} [options]\r\n * \r\n * @param {String} [options.my]\r\n *  Which area of the `positionEle` should be used to position it against the\r\n *  `anchorEle`. Default is `top left`. Possible values:\r\n *  -   `top left`\r\n *  -   `top right`\r\n *\r\n * @param {String} [options.at]\r\n *  The `anchorEle` position where the `positionEle` should be displayed. Default\r\n *  is `bottom left` (so right below the `anchorEle`, left aligned).\r\n *\r\n * @param {HTMLElement} [options.viewport=window]\r\n *  The viewport to be used in detecting collision. (NOTE: currently,\r\n *  only window is supported)\r\n *\r\n */\r\nexport function domPosition(positionEle, anchorEle, options){\r\n    var positionEleStyles   = positionEle.style;\r\n    var anchorEleRect       = anchorEle.getBoundingClientRect();\r\n    var positionEleRect     = positionEle.getBoundingClientRect();\r\n    var opt                 = objectExtend({\r\n        my:         \"top left\",\r\n        at:         \"bottom left\",\r\n        viewport:   WINDOW\r\n    }, options);\r\n    var { scrollTop, scrollLeft } = getViewportScrollInfo(opt.viewport); // FIXME: support for non-window viewport\r\n\r\n    // FIXME: support for non window viewport\r\n    // var viewportTop     = 0;\r\n    var viewportBottom  = opt.viewport.innerHeight;\r\n    var viewportRight   = opt.viewport.innerWidth;\r\n\r\n    var isMyLeft    = isLeft.test(opt.my);\r\n    var isMyRight   = !isMyLeft;\r\n    var isAtLeft    = isLeft.test(opt.at);\r\n    var isAtRight   = !isAtLeft;\r\n\r\n    // Set default coordinates based o above position defaults\r\n    var posLeft = anchorEleRect.left;\r\n    var posTop  = anchorEleRect.bottom + scrollTop;\r\n\r\n    //------------------------------------------\r\n    // CALCULATE: TOP\r\n    // Top side of position ele\r\n    //------------------------------------------\r\n\r\n    // FIXME: support for \"my\" === bottom as well as \"at\" top\r\n\r\n\r\n    //------------------------------------------\r\n    // CALCULATE: LEFT\r\n    // Left side of the position el\r\n    //------------------------------------------\r\n    // my === left  &&  at === right\r\n    if (isMyLeft && isAtRight) {\r\n        posLeft = anchorEleRect.right;\r\n\r\n    // my === left  &&  at === right\r\n    } else if (isMyRight && isAtRight) {\r\n        posLeft = anchorEleRect.right - positionEleRect.width;\r\n\r\n    // my === right  &&  at === left\r\n    } else if (isMyRight && isAtLeft) {\r\n        posLeft = anchorEleRect.left - positionEleRect.width;\r\n    }\r\n\r\n    //------------------------------------------------------\r\n    // Adjust positions based on viewport collisions\r\n    //------------------------------------------------------\r\n\r\n    //--- LEFT --\\\\\r\n    // If the Right side of the position element goes beyound\r\n    // the right side of the viewport, flip the horizontal position...\r\n    if ((posLeft + positionEleRect.width) > (viewportRight + scrollLeft)) {\r\n        posLeft -= positionEleRect.width;\r\n    }\r\n\r\n    //--- TOP --\\\\\r\n    // If it the position of the element goes beyond the bottom of\r\n    // the viewport, flip it up...\r\n    if ((posTop + positionEleRect.height) > (viewportBottom + scrollTop)) {\r\n        posTop -= (positionEleRect.height + anchorEleRect.height);\r\n    }\r\n\r\n    positionEleStyles.left = posLeft + PX;\r\n    positionEleStyles.top  = posTop + PX;\r\n}\r\n\r\nexport default domPosition;\r\n\r\n\r\n/**\r\n * returns the `scrollTop` and `scrollLeft` for a given element\r\n *\r\n * @param {HTMLElement|Window|Document} viewport\r\n * @returns {Object}\r\n *\r\n * @example\r\n *\r\n * // return object:\r\n *\r\n * {\r\n *      scrollTop:      222,\r\n *      scrollLeft:     11\r\n * }\r\n *\r\n */\r\nfunction getViewportScrollInfo(viewport) {\r\n    let response = {};\r\n\r\n    if (viewport === WINDOW || viewport === DOCUMENT){\r\n        if (typeof WINDOW[PAGE_Y_OFFSET] !== UNDEFINED){\r\n            response[SCROLL_TOP]    = WINDOW[PAGE_Y_OFFSET];\r\n            response[SCROLL_LEFT]   = WINDOW[PAGE_X_OFFSET];\r\n\r\n        } else if (DOCUMENT.documentElement) {\r\n            response[SCROLL_TOP]    = DOCUMENT.documentElement[SCROLL_TOP];\r\n            response[SCROLL_LEFT]   = DOCUMENT.documentElement[SCROLL_LEFT];\r\n\r\n        } else {\r\n            response[SCROLL_TOP]    = DOCUMENT.body[SCROLL_TOP];\r\n            response[SCROLL_LEFT]   = DOCUMENT.body[SCROLL_LEFT];\r\n        }\r\n    } else {\r\n        response[SCROLL_TOP]    = viewport[SCROLL_TOP];\r\n        response[SCROLL_LEFT]   = viewport[SCROLL_LEFT];\r\n    }\r\n\r\n    return response;\r\n}\r\n","import {ComponentElement, prop, bind} from \"component-element\"\r\nimport domPosition from \"common-micro-libs/src/domutils/domPosition\";\r\nimport domAddEventListener from \"common-micro-libs/src/domutils/domAddEventListener\";\r\n\r\n//=====================================================================================\r\nconst removeBodyEvent = eleInst => {\r\n    if (eleInst._bodyEv) {\r\n        eleInst._bodyEv.remove();\r\n        eleInst._bodyEv = null;\r\n    }\r\n};\r\n\r\n\r\n// FIXME: Support for `show` and `hide` events\r\n\r\n\r\n/**\r\n * A popup widget that will be displayed and position relative to a another element\r\n *\r\n * ### Styling\r\n * The following variables are used for styling:\r\n *\r\n *      --theme-box-shadow\r\n *      --theme-color-bg    (background)\r\n *      --theme-color-fg    (forground color for text)\r\n *      --theme-spacing-2   (all round padding)\r\n *      --theme-color-1     (scrollbar background)\r\n *      --theme-color-6     (scrollbar thumb)\r\n *\r\n * @example\r\n *\r\n * const popup = document.createElement(\"pop-up\");\r\n * popup.innerHTML = `<h1>Hello</h1>`;\r\n * popup.for = document.querySelector(\"a#show\");\r\n * document.body.appendChild(popup);\r\n * popup.show = true;\r\n */\r\nexport class Popup extends ComponentElement {\r\n    //-------------------------------------------------------------\r\n    //\r\n    //                                              STATIC MEMBERS\r\n    //\r\n    //-------------------------------------------------------------\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ STATIC PROPERTIES ~~~~~\r\n    static get tagName() {\r\n        return \"pop-up\";\r\n    }\r\n\r\n\r\n    static get template() {\r\n        return `\r\n<style>\r\n:host {\r\n    box-sizing: border-box;\r\n    position: absolute;\r\n    min-height: 2em;\r\n    width: 15em;\r\n    max-height: 15em;\r\n    z-index: 5000;\r\n    overflow: auto;\r\n    display: none;\r\n\r\n    box-shadow: 0 8px 10px 1px rgba(0,0,0,0.14),\r\n        0 3px 14px 2px rgba(0,0,0,0.12),\r\n        0 5px 5px -3px rgba(0,0,0,0.2);\r\n    box-shadow: var(--theme-box-shadow);\r\n\r\n    background-color: white;\r\n    background-color: var(--theme-color-bg, white);\r\n\r\n    color: black;\r\n    color: var(--theme-color-fg, black);\r\n\r\n    padding: 0.5em;\r\n    padding: var(--theme-spacing-2, 0.5em);\r\n}\r\n:host::-webkit-scrollbar {\r\n    width:              0.5em;\r\n    background-color:   var(--theme-color-1, #F5F5F5);\r\n}\r\n:host::-webkit-scrollbar-thumb {\r\n    -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,.3);\r\n    background-color  : var(--theme-color-6, #555);\r\n}\r\n:host([show]) {\r\n    display: block;\r\n}\r\n</style>\r\n<div><slot></slot></div>`;\r\n    }\r\n\r\n    // static get delayDestroy() {}\r\n    // static get useShadow() {}\r\n    // static get shadowMode() {}\r\n    // static getEventInitOptions(){}\r\n    // static get observedAttributes() {}\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ STATIC METHODS ~~~~~\r\n\r\n    // static renderTemplate(ele) {}\r\n    // static define(name) {}\r\n\r\n\r\n    //-------------------------------------------------------------\r\n    //\r\n    //                                            INSTANCE MEMBERS\r\n    //\r\n    //-------------------------------------------------------------\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  PROPS AND ATTRIBUTES  ~~~~\r\n\r\n    /**\r\n     * The element that the popup is for. Could be a css selector (String)\r\n     * or a HTML Element.\r\n     * @property\r\n     * @type {String|HTMLElement}\r\n     */\r\n    @prop({required: true, attr: true})\r\n    set for(value) {\r\n        if (value && \"string\" === typeof value) {\r\n            return document.querySelector(value);\r\n        }\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * When set to `true`, popup will be made visible.\r\n     *\r\n     * @property {Boolean} show\r\n     */\r\n    @prop({boolean: true})\r\n    get show() { return false; }\r\n\r\n\r\n    /**\r\n     * If Popup should be auto closed when user clicks outside of its content.\r\n     *\r\n     * @property {Boolean} autoClose\r\n     */\r\n    @prop({boolean: true})\r\n    get autoClose() { return false; }\r\n\r\n\r\n    /**\r\n     * The edge of the popup that should be used when position it next to the\r\n     * `for` element. Default is `top left`.\r\n     * See `common-micro-libs/src/domUtils/domPosition` for other possible values\r\n     *\r\n     * @property {string} my\r\n     */\r\n    @prop({attr: true})\r\n    get my() { return \"top left\"; }\r\n\r\n\r\n    /**\r\n     * The edge of the `for` element that will be used to position the popup against.\r\n     * Default is `bottom left`.\r\n     * See `common-micro-libs/src/domUtils/domPosition` for other possible values\r\n     *\r\n     * @property {string} at\r\n     */\r\n    @prop({attr: true})\r\n    get at() { return \"bottom left\"; }\r\n\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  LIFE CYCLE HOOKS  ~~~~~\r\n    // Called from constructor\r\n    init() {\r\n        // this._forPropWas = this.props.for;\r\n        this._bodyEv = null;\r\n        this.onPropsChange(this.position, \"at\");\r\n        this.onPropsChange(this.position, \"my\");\r\n    }\r\n\r\n    // Called when all required `props` have been provided\r\n    ready() {\r\n        this.onPropsChange(this._handleShowProp);\r\n        this._handleShowProp();\r\n        this.onDestroy(() => removeBodyEvent(this));\r\n    }\r\n\r\n    // Called if required fields are removed\r\n    // unready() {}\r\n\r\n    // called when element is attached to dom\r\n    // mounted() {}\r\n\r\n    // called when element is removed from dom\r\n    // unmounted() {}\r\n\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    @bind\r\n    _handleShowProp(){\r\n        if (this.for && this.show) {\r\n            this.position();\r\n\r\n            // Auto close? then setup body event\r\n            if (this.autoClose && !this._bodyEv) {\r\n                setTimeout(() => {\r\n                    this._bodyEv = domAddEventListener(document.body, \"click\", ev => {\r\n                        if (!this.contains(ev.target)) {\r\n                            // FIXME: support onHide callback? maybe event?\r\n\r\n                            removeBodyEvent(this);\r\n                            this.show = false;\r\n                        }\r\n                    });\r\n                }, 200);\r\n            }\r\n        }\r\n        else {\r\n            removeBodyEvent(this);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Positions the popup against the current `for` element.\r\n     */\r\n    @bind\r\n    position() {\r\n        if (this.for && this.show) {\r\n            const options = {}; // FIXME: move this to a computed prop\r\n            if (this.my) {\r\n                options.my = this.my\r\n            }\r\n            if (this.at) {\r\n                options.at = this.at;\r\n            }\r\n            domPosition(this, this.for, options);\r\n        }\r\n    }\r\n}\r\n\r\nexport default Popup;\r\n","/**\r\n * Shortcut/Functional alias to `Node.insertBefore` method.\r\n *\r\n * @param {Node|DocumentFragment} newNode\r\n * @param {Node} referenceNode\r\n *\r\n * @returns {Node|DocumentFragment}\r\n */\r\nexport function domInsertBefore(newNode, referenceNode) {\r\n    if (referenceNode && referenceNode.parentNode && referenceNode.parentNode.insertBefore) {\r\n        referenceNode.parentNode.insertBefore(newNode, referenceNode);\r\n    }\r\n    return newNode;\r\n}\r\nexport default domInsertBefore;\r\n\r\n","import {ComponentElement, STATE_SYMBOL, prop, bind} from \"component-element\"\r\nimport {domAddEventListener} from \"common-micro-libs/src/domutils/domAddEventListener\"\r\nimport {domInsertBefore} from \"common-micro-libs/src/domutils/domInsertBefore\"\r\n\r\n\r\n//=========================================================================\r\nconst INTERCEPTOR_TOP_1 = \"topTabInterceptor1\";\r\nconst INTERCEPTOR_TOP_2 = \"topTabInterceptor2\";\r\n\r\nconst INTERCEPTOR_BOTTOM_1 = \"bottomTabInterceptor1\";\r\nconst INTERCEPTOR_BOTTOM_2 = \"bottomTabInterceptor2\";\r\n\r\nconst INTERCEPTOR_LIST = [\r\n    INTERCEPTOR_TOP_1,\r\n    INTERCEPTOR_TOP_2,\r\n    INTERCEPTOR_BOTTOM_2,\r\n    INTERCEPTOR_BOTTOM_1\r\n];\r\n\r\nconst INTERCEPTOR_STYLES = \"outline: none !important;display:block !important;height:1px !important;width:1px !important;color:transparent !important;position:absolute !important;left:-9999999px !important;top:-99999999px !important;z-index:-1 !important;\";\r\n\r\n/**\r\n * Custom Element that, when visible, makes its self as large as its parent content\r\n * (driven by the first positioned element) and prevents access to any element that\r\n * is a child of the same parent to this element.\r\n *\r\n * @extends ComponentElement\r\n *\r\n * @example\r\n *\r\n *      <content-access block on-parent></content-access>\r\n */\r\nexport class ContentAccess extends ComponentElement {\r\n    //-------------------------------------------------------------\r\n    //\r\n    //                                              STATIC MEMBERS\r\n    //\r\n    //-------------------------------------------------------------\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ STATIC PROPERTIES ~~~~~\r\n    static get tagName() {\r\n        return \"content-access\";\r\n    }\r\n\r\n    static get template() {\r\n        return `\r\n<style>\r\n    :host {\r\n        display: inline-block;\r\n        box-sizing: border-box;\r\n    }\r\n    :host([on-parent]) {\r\n        display: none;\r\n    }\r\n    :host([on-parent]) .content {\r\n        position:relative;\r\n        z-index: 1;\r\n        max-height: 100%;\r\n        max-width: 100%;\r\n        overflow: auto;\r\n    }\r\n    :host([on-parent]),\r\n    .modal {\r\n        position: absolute;\r\n        box-sizing: border-box;\r\n        top: 0;\r\n        left: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n        bottom: 0;\r\n        right: 0;\r\n    }\r\n    .modal {\r\n        background: lightgrey;\r\n        background: var(--theme-color-1, lightgrey);\r\n        opacity: 0.6;\r\n    }\r\n    :host([block][on-parent]) {\r\n        display: block;\r\n    }\r\n    /*:host([on-parent]) .modal,*/\r\n    :host(:not([on-parent]):not([block])) .modal {\r\n        display: none;\r\n    }\r\n    :host([block]:not([on-parent])) {\r\n        position: relative;\r\n    }\r\n</style>\r\n<div class=\"content\">\r\n    <slot></slot>\r\n</div>\r\n<div class=\"modal\"></div>\r\n`;\r\n    }\r\n\r\n    // static get delayDestroy() {}\r\n    // static get useShadow() {}\r\n    // static get shadowMode() {}\r\n    // static getEventInitOptions(){}\r\n    // static get observedAttributes() {}\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ STATIC METHODS ~~~~~\r\n\r\n    // static renderTemplate(ele) {}\r\n    // static define(name) {}\r\n\r\n\r\n    //-------------------------------------------------------------\r\n    //\r\n    //                                            INSTANCE MEMBERS\r\n    //\r\n    //-------------------------------------------------------------\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  PROPS AND ATTRIBUTES  ~~~~\r\n\r\n    /**\r\n     * Attribute that when present on the element, will make this\r\n     * element visible and content around it (same parent) non-accessible\r\n     *\r\n     * @property\r\n     * @type Boolean\r\n     */\r\n    @prop({attr: true, boolean: true})\r\n    get block() { return false; }\r\n\r\n\r\n    /**\r\n     * When attribute present on element, then the behaviour of this component\r\n     * changes to making it `position:absolute` and to fill the parent's space.\r\n     * The tab control is applied to all content of the parent element.\r\n     * Also: Any content (elements) placed inside of the `content-access` will\r\n     * be visible and accessible to the user - similar to how modal dialogs work.\r\n     *\r\n     * @property\r\n     * @type Boolean\r\n     */\r\n    @prop({attr: true, boolean: true})\r\n    get onParent() { return false; }\r\n\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  LIFE CYCLE HOOKS  ~~~~~\r\n    // Called from constructor\r\n    init() {\r\n        this[STATE_SYMBOL] = {\r\n            [INTERCEPTOR_TOP_1]: null,\r\n            [INTERCEPTOR_TOP_2]: null,\r\n            [INTERCEPTOR_BOTTOM_1]: null,\r\n            [INTERCEPTOR_BOTTOM_2]: null,\r\n            isRefocusing: false\r\n        };\r\n        this.onPropsChange(this._handleBlock, \"block\");\r\n        this.onPropsChange(this._handleBlock, \"onParent\");\r\n        domAddEventListener(this, \"click\", this);\r\n    }\r\n\r\n\r\n    // Called when all required `props` have been provided\r\n    // ready() {}\r\n\r\n    // Called if required fields are removed\r\n    // unready() {}\r\n\r\n    // called when element is attached to dom\r\n    mounted() {\r\n        this._handleBlock();\r\n    }\r\n\r\n    // called when element is removed from dom\r\n    // unmounted() {}\r\n\r\n    destroy() {\r\n        super.destroy();\r\n        removeTabInterceptors(this);\r\n    }\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    @bind\r\n    _handleBlock() {\r\n        if (this.block) {\r\n            insertTabInterceptors(this);\r\n        } else {\r\n            removeTabInterceptors(this);\r\n        }\r\n    }\r\n\r\n    handleEvent(ev) {\r\n        if (this.block && ev.type === \"focus\" && ev.target._role && !this[STATE_SYMBOL].isRefocusing) {\r\n            this[STATE_SYMBOL].isRefocusing = true;\r\n            switch (ev.target._role) {\r\n                // Focusing from the top: send focus to bottom\r\n                case INTERCEPTOR_TOP_1:\r\n                case INTERCEPTOR_TOP_2:\r\n                    this[STATE_SYMBOL][INTERCEPTOR_BOTTOM_1].focus();\r\n                    break;\r\n\r\n                // Focusing from the bottom: send focus to top\r\n                case INTERCEPTOR_BOTTOM_1:\r\n                case INTERCEPTOR_BOTTOM_2:\r\n                    this[STATE_SYMBOL][INTERCEPTOR_TOP_1].focus();\r\n                    break;\r\n            }\r\n            this[STATE_SYMBOL].isRefocusing = false;\r\n\r\n        } else if (ev.type === \"click\" && this.block && !this.onParent) {\r\n            this[STATE_SYMBOL][INTERCEPTOR_BOTTOM_1].focus();\r\n        }\r\n    }\r\n}\r\n\r\nfunction insertTabInterceptors (inst) {\r\n    if (inst.parentNode) {\r\n        if (!inst[STATE_SYMBOL][INTERCEPTOR_TOP_1]) {\r\n            createTabInterceptorElements(inst);\r\n        }\r\n\r\n        if (inst.onParent) {\r\n            domInsertBefore(inst[STATE_SYMBOL][INTERCEPTOR_TOP_2], inst.parentNode.firstChild);\r\n            domInsertBefore(inst[STATE_SYMBOL][INTERCEPTOR_TOP_1], inst.parentNode.firstChild);\r\n\r\n            inst.parentNode.appendChild(inst[STATE_SYMBOL][INTERCEPTOR_BOTTOM_2]);\r\n            inst.parentNode.appendChild(inst[STATE_SYMBOL][INTERCEPTOR_BOTTOM_1]);\r\n        }\r\n        else {\r\n            domInsertBefore(inst[STATE_SYMBOL][INTERCEPTOR_TOP_1], inst);\r\n            domInsertBefore(inst[STATE_SYMBOL][INTERCEPTOR_TOP_2], inst);\r\n\r\n            if (inst.nextSibling) {\r\n                domInsertBefore(inst[STATE_SYMBOL][INTERCEPTOR_BOTTOM_1], inst.nextSibling);\r\n                domInsertBefore(inst[STATE_SYMBOL][INTERCEPTOR_BOTTOM_2], inst.nextSibling);\r\n\r\n            } else {\r\n                inst.parentNode.appendChild(inst[STATE_SYMBOL][INTERCEPTOR_BOTTOM_2]);\r\n                inst.parentNode.appendChild(inst[STATE_SYMBOL][INTERCEPTOR_BOTTOM_1]);\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n\r\nfunction removeTabInterceptors(inst) {\r\n    if (inst[STATE_SYMBOL][INTERCEPTOR_TOP_1]) {\r\n        INTERCEPTOR_LIST.forEach(interceptorEle => inst[STATE_SYMBOL][interceptorEle].parentNode && inst[STATE_SYMBOL][interceptorEle].parentNode.removeChild(inst[STATE_SYMBOL][interceptorEle]));\r\n    }\r\n}\r\n\r\nfunction createTabInterceptorElements(inst) {\r\n    if (!inst[STATE_SYMBOL][INTERCEPTOR_TOP_1]) {\r\n        INTERCEPTOR_LIST.forEach(name => {\r\n            inst[STATE_SYMBOL][name] = document.createElement(\"a\");\r\n            inst[STATE_SYMBOL][name].innerText = \"-\";\r\n            inst[STATE_SYMBOL][name]._role = name;\r\n            inst[STATE_SYMBOL][name].setAttribute(\"_role\", name);\r\n            inst[STATE_SYMBOL][name].setAttribute(\"tabindex\", \"0\");\r\n            inst[STATE_SYMBOL][name].setAttribute(\"style\", INTERCEPTOR_STYLES);\r\n            domAddEventListener(inst[STATE_SYMBOL][name], \"focus\", inst);\r\n        });\r\n    }\r\n}\r\n\r\nexport default ContentAccess;\r\n","/* global BUILD */\r\nexport {Popup} from \"./Popup/Popup\"\r\nexport {ContentAccess} from \"./ContentAccess/ContentAccess\"\r\n\r\nexport const VERSION = BUILD.DATA.VERSION;\r\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n"],"sourceRoot":""}