{"version":3,"sources":["webpack://__LIB/webpack/bootstrap","webpack://__LIB/./node_modules/@purtuga/common/src/jsutils/getGlobal.js","webpack://__LIB/external \"(window.WeakMap.WeakMap = window.WeakMap)\"","webpack://__LIB/external \"(window.Symbol.Symbol = window.Symbol)\"","webpack://__LIB/(webpack)/buildin/global.js","webpack://__LIB/./node_modules/@babel/runtime/helpers/esm/toArray.js","webpack://__LIB/./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack://__LIB/./node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack://__LIB/./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack://__LIB/./node_modules/@purtuga/common/src/jsutils/runtime-aliases.js","webpack://__LIB/./node_modules/@purtuga/common/src/jsutils/objectExtend.js","webpack://__LIB/./node_modules/@purtuga/common/src/jsutils/nextTick.js","webpack://__LIB/./node_modules/@purtuga/common/src/jsutils/throwIfThisIsPrototype.js","webpack://__LIB/./node_modules/@purtuga/common/src/domutils/domAddEventListener.js","webpack://__LIB/./node_modules/@purtuga/common/src/domutils/domFind.js","webpack://__LIB/./node_modules/@purtuga/common/src/jsutils/dataStore.js","webpack://__LIB/./node_modules/@purtuga/common/src/jsutils/Ev.js","webpack://__LIB/./node_modules/@purtuga/component-element/src/utils.js","webpack://__LIB/./node_modules/@purtuga/component-element/src/polyfill-support.js","webpack://__LIB/./node_modules/@purtuga/component-element/src/ComponentElement.js","webpack://__LIB/./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://__LIB/./node_modules/@purtuga/component-element/src/decorators/prop.js","webpack://__LIB/./node_modules/@purtuga/component-element/src/decorators/bind.js","webpack://__LIB/./node_modules/@purtuga/common/src/domutils/domPosition.js","webpack://__LIB/./src/Popup/Popup.js","webpack://__LIB/./node_modules/@purtuga/common/src/domutils/domInsertBefore.js","webpack://__LIB/./src/ContentAccess/ContentAccess.js","webpack://__LIB/./src/Icon/base/Icon.js","webpack://__LIB/./src/Icon/source.boxicons.js","webpack://__LIB/./src/Icon/source.office-ui-fabric.js","webpack://__LIB/./src/Icon/source.twemoji.js","webpack://__LIB/./src/Icon/Icon.js","webpack://__LIB/./node_modules/@purtuga/common/src/domutils/domToggleClass.js","webpack://__LIB/./node_modules/@purtuga/common/src/domutils/domAddClass.js","webpack://__LIB/./src/ConfirmAction/ConfirmAction.js","webpack://__LIB/./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","global","__webpack_exports__","GLOBAL","window","self","Function","WeakMap","g","this","e","_toArray","arr","Array","isArray","arrayWithHoles","iter","iterator","toString","from","iterableToArray","TypeError","nonIterableRest","functionBindCall","functionBind","isObject","obj","objectDefineProperty","objectKeys","defineProperties","keys","prop","setter","configurable","writable","descriptor","set","consoleLog","forEach","indexOf","splice","slice","console","log","consoleError","error","consoleWarn","warn","HTMLElementPrototype","HTMLElement","doc","document","head","createElement","tagName","createTextNode","data","appendChild","hasAttribute","insertBefore","setAttribute","getAttribute","removeAttribute","objectExtend","mergeIntoObj","mergeObjects","response","total","length","deepMerge","shift","reIsNativeCode","nextTick","setImediate","test","Promise","resolved","resolve","fn","then","catch","immediates","processing","push","processPending","setTimeout","isQueued","queuedCallbacks","Set","flushQueue","callbacks","clear","queue","callback","add","throwIfThisIsPrototype","THIS","constructor","Error","domAddEventListener","ele","event","capture","events","split","evListeners","evName","addEventListener","remove","removeEventListener","listeners","domFind","domEle","selector","querySelectorAll","dataStore","stash","LISTENER_STORAGE","Ev","on","getStoreFor","delete","emit","inst","Map","has","PRIVATE","STATE_SYMBOL","elementHasAttributeForProp","propDef","aliases","some","propAlias","getState","instance","state","isCssScopingDone","templateEle","ev","destroyCallbacks","destroyQueued","isMounted","getPropsDefinition","ComponentClass","getComponentClassState","propsDef","statePropsDef","componentPropsDef","propName","propAliasDef","_isAlias","propNameAlias","observedAttrs","supportsShadyCSS","ShadyCSS","removeElement","parentNode","removeChild","isString","supportsNativeShadowDom","createShadowRoot","attachShadow","nativeShadow","prepareRenderedContent","renderOutput","eleInstance","isRenderOutputString","ComponentClassState","view","innerHTML","cloneNode","template","prepareTemplate","scopeCss","importNode","content","textContent","prepareTemplateDom","SHADOW_DOM_SUPPORTED","EV_DEFAULT_INIT","bubbles","cancelable","composed","CE_REGISTRY","customElements","PROPS_NOOP","freeze","EVENT_ANY","lazySetupUnderway","ComponentElement","args","super","component","useShadow","shadowMode","shadowRoot","_$ui","onPropsChange","update","didInit","setupComponent","[object Object]","define","delayDestroy","process","eventInitOptions","observedAttributes","propList","filter","attr","props","propDefinitions","notifyAnyListeners","_for","_ev","propValue","default","notifyPropListeners","boolean","attrVal","geAttributeValueForProp","undefined","newValue","hasRequiredProps","required","every","$ui","destroy","clearTimeout","cb","didDestroy","onDestroy","$","querySelector","$$","_update","shouldRender","willRender","_setView","render","didRender","_queueUpdate","__queueUpdate","init","didMount","ready","mounted","didUnmount","unmounted","eventName","eventInit","eventNameLowercase","toLowerCase","CustomEvent","detail","dispatchEvent","eventNames","attributeChangedCallback","oldValue","connectedCallback","componentInstance","styleElement","styleComponentInstanceElement","disconnectedCallback","RE_UPPER_CASE_LETTERS","NOOP","val","options","kind","_propDecorator","initializer","propDefinition","validator","propertyDefinition","realHtmlPropValue","str","replace","match","p1","getKebabCase","getPropSetup","newDescriptor","getDecoratorDescriptor","extras","aliasName","map","proxyToPropName","componentPropDefinition","DecoratorDescriptor","placement","finisher","Klass","_bound","decoratorDescriptor","isDoingLazySetup","method","boundMethod","WINDOW","DOCUMENT","SCROLL_TOP","SCROLL_LEFT","PAGE_Y_OFFSET","PAGE_X_OFFSET","UNDEFINED","PX","isLeft","domPosition","positionEle","anchorEle","positionEleStyles","style","anchorEleRect","getBoundingClientRect","positionEleRect","opt","my","at","viewport","scrollTop","scrollLeft","documentElement","body","getViewportScrollInfo","viewportBottom","innerHeight","viewportRight","innerWidth","isMyLeft","isMyRight","isAtLeft","isAtRight","posLeft","left","posTop","bottom","right","width","height","top","removeBodyEvent","eleInst","_docEv","Popup","_decorate","_initialize","_ComponentElement","F","static","decorators","position","_handleShowProp","_renderDone","for","show","autoClose","contains","target","domInsertBefore","newNode","referenceNode","INTERCEPTOR_TOP_1","INTERCEPTOR_TOP_2","INTERCEPTOR_BOTTOM_1","INTERCEPTOR_BOTTOM_2","INTERCEPTOR_LIST","INTERCEPTOR_STYLES","ContentAccess","ContentAccess_decorate","isRefocusing","_handleBlock","removeTabInterceptors","block","innerText","_role","createTabInterceptorElements","onParent","firstChild","nextSibling","insertTabInterceptors","type","focus","interceptorEle","SOURCE_SETUP","SOURCE_STYLES","STATE","SOURCES","CACHE","fromCharCode","String","getStyleEle","cssCode","id","styleEle","Icon","Icon_decorate","iconUrl","reject","request","XMLHttpRequest","status","responseText","onerror","onabort","open","send","fontFaceCss","codepoint","code","parseInt","$icon","_handlePropChanges","source","iconSource","sources","doSetup","getStyles","getIcon","_showIconElement","iconEle","nodeType","TEMPLATE","boxicons","cdnUrl","iconInstance","fetchSvg","returnNewElement","handleReject","svgString","OFFICE_ICON_ELEMENT","ICON_TEMPLATE","IS_CODEPOINT","fromCodePoint","officeUiFabric","isIconLoaded","iconMap","iconAliases","IconClass","setupFont","getFontFaceCss","twemoji","getSvgImgNameFromCode","domToggleClass","el","cssClass","classList","toggle","domAddClass","classNameList","trim","className","ConfirmAction","_$confirm","_handleShowHideConfirm","_handleConfirm","_handlePropsChange","disabled","VERSION","Popup_Popup","ContentAccess_ContentAccess","base_Icon","ConfirmAction_ConfirmAction","BUILD"],"mappings":"sBACA,IAAAA,KAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,IACAG,EAAAH,EACAI,GAAA,EACAH,YAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,IAAAD,QAAAF,GAGAG,EAAAE,GAAA,EAGAF,EAAAD,QA0DA,OArDAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,GAA0CK,YAAA,EAAAC,IAAAL,KAK1CZ,EAAAkB,EAAA,SAAAhB,GACA,oBAAAiB,eAAAC,aACAN,OAAAC,eAAAb,EAAAiB,OAAAC,aAAwDC,MAAA,WAExDP,OAAAC,eAAAb,EAAA,cAAiDmB,OAAA,KAQjDrB,EAAAsB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAArB,EAAAqB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFA1B,EAAAkB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAArB,EAAAU,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAzB,EAAA6B,EAAA,SAAA1B,GACA,IAAAS,EAAAT,KAAAqB,WACA,WAA2B,OAAArB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD/B,EAAAkC,EAAA,GAIAlC,IAAAmC,EAAA,mCCjFA,SAAAC,GAAApC,EAAAU,EAAA2B,EAAA,sBAAAC,IAAO,MAAMA,EACK,oBAEHC,OAA2BA,YAFxB,IAGHH,EAA2BA,EAHxB,oBAIHI,KAAyBA,KAC7BC,SAAS,eAATA,oCCPXtC,EAAAD,QAAAqC,OAAAG,gBAAAH,OAAAG,uBCAAvC,EAAAD,QAAAqC,OAAApB,cAAAoB,OAAApB,sBCAA,IAAIwB,EAGJA,EAAK,WACJ,OAAOC,KADH,GAIL,IAECD,EAAIA,GAAK,IAAIF,SAAS,cAAb,GACR,MAAOI,GAEc,iBAAXN,SAAqBI,EAAIJ,QAOrCpC,EAAOD,QAAUyC,gCChBF,SAASG,EAASC,GAC/B,OCJa,SAAyBA,GACtC,GAAIC,MAAMC,QAAQF,GAAM,OAAOA,EDGxBG,CAAeH,IEJT,SAA0BI,GACvC,GAAIhC,OAAOiC,YAAYtC,OAAOqC,IAAkD,uBAAzCrC,OAAOkB,UAAUqB,SAAS9C,KAAK4C,GAAgC,OAAOH,MAAMM,KAAKH,GFG1FI,CAAgBR,IGJjC,WACb,MAAM,IAAIS,UAAU,wDHGkCC,UISjD,MAaMC,EAbejB,SAASb,KAAKrB,KAAKqB,KAAKa,SAASb,KAa7B+B,CAAalB,SAASlC,KAAKqB,KAAMa,SAASlC,MAG7D8C,EAA2BK,EAAiB5C,OAAOkB,UAAUqB,UAC7DO,EAA2BC,GAAyB,oBAAlBR,EAASQ,GAK3CC,EAA2BhD,OAAOC,eAElCgD,GAD2BjD,OAAOkD,iBACPlD,OAAOmD,MAClClD,EAAiB,CAAC8C,EAAKK,EAAM7C,EAAOT,EAAQuD,EAAQC,GAAe,EAAMpD,GAAa,EAAOqD,GAAW,KACjH,MAAMC,GACFF,eACApD,cAaJ,OAVIJ,GAAUuD,GACVG,EAAWrD,IAAML,EACjB0D,EAAWC,IAAMJ,IAEjBG,EAAWD,SAAWA,EACtBC,EAAWjD,MAAQA,GAGvByC,EAAqBD,EAAKK,EAAMI,GAEzBT,GAKLd,KACOE,EAAiBD,MAAMC,QAQvBuB,GAPiBd,EAAiBX,EAAI0B,SACrBf,EAAiBX,EAAI2B,SACrBhB,EAAiBX,EAAI4B,QACtBjB,EAAiBX,EAAI6B,OAIxBC,QAAQC,KACrBC,EAAeF,QAAQG,OAASR,EAChCS,EAAcJ,QAAQK,MAAQV,EAQrCW,GAJwB,oBAAuBhE,QAAUA,OAAOiC,UAAWjC,OAAOiC,SAI3DgC,YAAYpD,WAC5BqD,EAAMC,SACNC,EAAOF,EAAIE,KAEXC,EAAgBC,GAAWJ,EAAIG,cAAcC,GAC7CC,EAAiBC,GAAQN,EAAIK,eAAeC,GAAQ,IACpDC,EAAclC,EAAiByB,EAAqBS,aAEpDC,GADenC,EAAiByB,EAAqBW,cACtCpC,EAAiByB,EAAqBU,eAErDE,GADerC,EAAiByB,EAAqBa,cACtCtC,EAAiByB,EAAqBY,eACrDE,EAAkBvC,EAAiByB,EAAqBc,iBCtCtDC,MAnCR,SAASA,EAAaC,KAAiBC,GAC1C,IAGIhG,EACAuB,EAJA0E,EAAcF,MACdG,EAAcF,EAAaG,OAC3BC,GAAc,EAUlB,IAN4B,kBAAjBL,IACPK,EAAcL,EACdE,EAAcD,EAAaK,YAC3BH,EAAcF,EAAaG,QAG1BnG,EAAI,EAAGA,EAAIkG,EAAOlG,IACnB,GAAKgG,EAAahG,GAIlB,IAAKuB,KAAOyE,EAAahG,GACjBgG,EAAahG,GAAG6B,eAAeN,KAE3B6E,GACA5C,EAASyC,EAAS1E,KAClBiC,EAASwC,EAAahG,GAAGuB,IAEzB0E,EAAS1E,GAAOuE,GAAc,EAAMG,EAAS1E,GAAMyE,EAAahG,GAAGuB,IAGnE0E,EAAS1E,GAAOyE,EAAahG,GAAGuB,IAKhD,OAAO0E,GChDX,IAAIK,EAAiB,eAOjBC,EAAY,WACZ,GAA2B,oBAAhBC,aAA+BF,EAAeG,KAAKD,YAAYvD,YACtE,OAAOuD,YAIX,GAAuB,mBAAZE,SAA0BJ,EAAeG,KAAKC,QAAQzD,YAAa,CAC1E,IAAI0D,EAAWD,QAAQE,UACvB,OAAO,SAA0BC,GAC7BF,EAASG,KAAKD,GAAIE,MAAMtE,GAAKgC,QAAQG,MAAMnC,KAMnD,IAAIuE,KACAC,GAAa,EAajB,OAAO,SAA6BJ,GAChCG,EAAWE,KAAKL,GACXI,IACDA,GAAa,EAdrB,SAASE,IACLC,WAAW,WACPJ,EAAWX,OAAXW,GACIA,EAAWb,OACXgB,IAEAF,GAAa,GAElB,GAOCE,KAjCI,GAsCZE,GAAW,EACf,MAAMC,EAAkB,IAAIC,IAC5B,IAAIvH,EAAGkB,EACP,MAAMsG,EAAa,KACf,MAAMC,MAAiBH,GAGvB,IAFAA,EAAgBI,QAChBL,GAAW,EACNrH,EAAI,EAAGkB,EAAIuG,EAAUtB,OAAQnG,EAAIkB,EAAGlB,IACrCyH,EAAUzH,MAWlBuG,EAASoB,MAAQC,KACbN,EAAgBO,IAAID,GACfP,IACDA,GAAW,EACXd,EAASiB,MC7DV,SAASM,EAAuBC,GACnC,GAAIA,EAAKC,aAAeD,IAASA,EAAKC,YAAYpG,UAC9C,MAAM,IAAIqG,MAAM,0DCWjB,SAASC,EAAoBC,EAAKC,EAAOR,EAAUS,GACtD,IAAIC,EAAcF,EAAMG,MAAM,OAC1BC,KAmBJ,OAjBAF,EAAOjE,QAAQoE,IACXN,EAAIO,iBAAiBD,EAAQb,EAAUS,GACvCG,EAAYC,IACRE,OAAQ,IAAMR,EAAIS,oBAAoBH,EAAQb,EAAUS,MAczD3H,OAAOY,QACVuH,UAAWL,EACXG,OAAQ,WACJL,EAAOjE,QAAQoE,GAAUD,EAAYC,GAAQE,aAI1CT,QCtCR,SAASY,EAAQC,EAAQC,GAC5B,OAAOpG,MAAMhB,UAAU4C,MAAMrE,KAAK4I,EAAOE,iBAAiBD,IAE/CF,eCUAI,GAVXC,MAAQ,IAAI7G,UAKZhB,OAAQ,WACJ,OAAO,IAAIgB,YCpBnB,MAAM8G,EAAmBrI,OAAO,eAMnBsI,EACTC,GAAGb,EAAQb,GAKP,OAJA2B,EAAY/G,KAAMiG,GAAQZ,IAAID,GAIvB,IAAM2B,EAAY/G,KAAMiG,GAAQe,OAAO5B,GAGlD6B,KAAKhB,EAAQlD,GACTgE,EAAY/G,KAAMiG,GAAQpE,QAAQuD,GAAYA,EAASrC,IAG3DmC,QACI6B,EAAY/G,MAAMkF,SAS1B,SAAS6B,EAAYG,EAAMjB,GAIvB,OAHKiB,EAAKN,KACNM,EAAKN,GAAoB,IAAIO,KAE5BlB,GAGAiB,EAAKN,GAAkBQ,IAAInB,IAC5BiB,EAAKN,GAAkBjF,IAAIsE,EAAQ,IAAIlB,KAEpCmC,EAAKN,GAAkBvI,IAAI4H,IALvBiB,EAAKN,cC3Bb,MAAMS,EAAUX,EAAU5H,SACpBwI,EAAe/I,iBAAO,SAU5B,SAASgJ,EAA2B5B,EAAK6B,GAC5C,OAAOA,EAAQC,QAAQC,KAAKC,GAAahC,EAAI1C,aAAa0E,IAqBvD,SAASC,EAASC,GACrB,IAAKR,EAAQD,IAAIS,GAAW,CACxB,IAAIC,GACAC,kBAAkB,EAClBC,YAAa,KACbC,GAAI,IAAIpB,EACRqB,oBACAC,cAAe,KACfC,WAAW,GAGff,EAAQ1F,IAAIkG,EAAUC,GAE1B,OAAOT,EAAQhJ,IAAIwJ,GAuChB,SAASQ,EAAmBC,GAC/B,IAAIR,EAAQS,EAAuBD,GAEnC,IAAKR,EAAMU,SAAU,CACjB,MAAMC,EAAgBX,EAAMU,YACtBE,EAAoBJ,EAAeE,SAIrCE,GACAvH,EAAWuH,GAAmB7G,QAAQ8G,IAGlC,GAFAF,EAAcE,GAAYD,EAAkBC,GAExCtI,EAAQoI,EAAcE,GAAUlB,SAAU,CAC1C,MAAMmB,EAAetF,KAAiBoF,EAAkBC,IAAaE,UAAU,IAC/EJ,EAAcE,GAAUlB,QAAQ5F,QAC5BiH,IAAkBL,EAAcK,KACfL,EAAcK,GAAiBF,OAMpE,OAAOd,EAAMU,SAUV,SAASD,EAAuBD,GAQnC,OAPKjB,EAAQD,IAAIkB,IACbjB,EAAQ1F,IAAI2G,GACRE,SAAU,KACVR,YAAa,KACbe,cAAe,OAGhB1B,EAAQhJ,IAAIiK,cC5HhB,MAAMU,EAAmB,MAAQtJ,IAAOuJ,SACzCC,EAAgBvD,GAAOA,EAAIwD,WAAWC,YAAYzD,GAClD0D,EAAW9J,GAAK,iBAAoBA,EAMnC,SAAS+J,IACZ,OAAQ3G,EAAK4G,kBAAoB5G,EAAK6G,iBAChCR,KAAsBtJ,IAAOuJ,SAASQ,cAwBzC,SAASC,GAAuBC,EAAcC,GACjD,GAAIZ,IAAoB,CACpB,MAAMa,EAAuBR,EAASM,GAChCG,EAAsBvB,EAAuBqB,EAAYpE,aAC/D,IACIuE,GADA/B,YAACA,GAAe8B,EAqCpB,OAhCK9B,IACD8B,EAAoB9B,YAAcA,EAAcpF,EAAc,YAC1DiH,EACA7B,EAAYgC,UAAYL,EAExB3B,EAAYhF,YAAY2G,EAAaM,WAAU,IA7BxD,SAAmBC,EAAUN,GAC5BZ,KACAtJ,IAAOuJ,SAASkB,gBAAgBD,EAAUN,EAAYpE,YAAY3C,SA6B9DuH,CAASpC,EAAc4B,IAIvBC,GACA7B,EAAYgC,UAAYL,EACxBI,EAAOrH,SAAS2H,WAAWrC,EAAYsC,SAAS,GAChDtC,EAAYuC,YAAc,IAE1BR,EAAOJ,EAKNI,EAAKO,UACNP,EAAKO,QAAUP,GAInBrK,IAAOuJ,SAASuB,mBAAmBT,EAAMH,EAAYpE,YAAY3C,SAKjEyD,EAAQyD,EAAM,SAASlI,QAAQqH,GACxBa,GC1Df,MAAMU,GAAuB9H,EAAK4G,kBAAoB5G,EAAK6G,aACrDkB,IAAoBC,SAAS,EAAMC,YAAY,EAAMC,UAAU,GAC/DC,GAAcnL,OAAOoL,eACrBC,GAAa9M,OAAO+M,OAAO/M,OAAOY,OAAO,OACzCoM,GAAY3M,OAAO,gBACzB,IAAI4M,IAAoB,QAQlBC,WAAyB5I,YAC3BgD,eAAe6F,GACX,MAAMzL,EAAO0L,SAASD,IAASrL,KAE/B,OAqiBR,SAAyBuL,GACrB,MAAMC,UAAEA,EAAFC,WAAaA,GAAeF,EAAU/F,YACxCgG,GAAaf,GACTc,EAAUG,WACVH,EAAUI,KAAOJ,EAAUG,WAG3BH,EAAUI,KAAOJ,EAAU/B,cAAe7K,KAAM8M,IAIpDF,EAAUI,KAAOJ,EAGrBA,EAAUK,cAAcL,EAAUM,QAClCN,EAAUO,UArjBNC,CAAenM,GACRA,EAmBXiD,qBAAuB,MAAM,IAAI4C,MAAM,uBAKvCuG,cAAcjO,GACVA,EAAOA,GAAQiC,KAAK6C,QAEhBiI,GAAYzM,IAAIN,GACZ+M,GAAYzM,IAAIN,KAAUiC,MAC1BqC,KAAetE,yEAKvB+M,GAAYmB,OAAOlO,EAAMiC,MAS7BkM,0BAA4B,OAAO,EAOnCV,uBAAyB,OAAO,EAOhCC,wBAA0B,MAAO,OAOjCvB,sBAKI,MAAO,cAoBX8B,wBAEQG,EAYRC,8BAAgC,OAAO1B,GAGvC2B,gCACI,IAAIvE,EAAQS,EAAuBvI,MAEnC,IAAK8H,EAAMiB,cAAe,CACtB,MAAMuD,EAAWjE,EAAmBrI,MACpC8H,EAAMiB,cAAgB5H,EAAWmL,GAAUC,OAAOjN,GAAKgN,EAAShN,GAAGkN,MAGvE,OAAO1E,EAAMiB,cAWjB0D,YAGI,GAFAnH,EAAuBtF,MAEnBmL,GACA,OAGJA,IAAoB,EAEpB,MAAMuB,EAAkBrE,EAAmBrI,KAAKwF,aAChD,IAAIiH,KACJ,MAAMxE,EAAKL,EAAS5H,MAAMiI,GACpB0E,EAAqB,IAAM1E,EAAGhB,KAAKiE,IAuDzC,OAtDAyB,EAAmBC,KAAO5M,KAC1B2M,EAAmBE,IAAM3B,GAGzB/J,EAAWuL,GAAiB7K,QAAQ8G,IAChC,IAAK+D,EAAgB/D,KAAc+D,EAAgB/D,GAAUE,SAAU,CACnE,IAAIiE,EAAYJ,EAAgB/D,GAAUoE,QAAQpP,KAAKqC,MACvD,MAAMgN,EAAsB,IAAM/E,EAAGhB,KAAK0B,GAE1CqE,EAAoBJ,KAAO5M,KAC3BgN,EAAoBH,IAAMlE,EAKtB+D,EAAgB/D,GAAU6D,OACzBE,EAAgB/D,GAAUsE,SAC3B1F,EAA2BvH,KAAM0M,EAAgB/D,IAEjDmE,EF3Kb,SAAiCnH,EAAK6B,GACzC,IAAI0F,EAAU,GAOd,OANA1F,EAAQC,QAAQC,KAAKC,IACjB,GAAIhC,EAAI1C,aAAa0E,GAEjB,OADAuF,EAAUvH,EAAIvC,aAAauE,IACpB,IAGRuF,EEmKqBC,CAAwBnN,KAAM0M,EAAgB/D,IACnD3I,KAAKX,eAAesJ,KAG3BmE,EAAY9M,KAAK2I,UACV3I,KAAK2I,IAGhBxK,EACIsO,EACA9D,OACAyE,EACA,WACI,OAAON,GAEXO,IACIA,EAAWX,EAAgB/D,GAAU4D,OAAO5O,KAAKqC,KAAMqN,GAGnDrN,KAAKoI,YACLrE,EAASoB,MAAM6H,GACfjJ,EAASoB,MAAMwH,IAGZG,EAAYO,IAEvB,GACA,MAKZlP,EAAe6B,KAAM,QAASyM,OAAOW,OAAWA,GAAW,GAAM,GAAM,GACvEjC,IAAoB,EAEbsB,EAMXa,uBAEI,OADAhI,EAAuBtF,MAChBmB,EAAWnB,KAAKwF,YAAYgD,UAC9B+D,OAAO5D,GAAY3I,KAAKwF,YAAYgD,SAASG,GAAU4E,UACvDC,MAAM7E,KAAc3I,KAAKyM,MAAM9D,IAOxCP,gBAEI,OADA9C,EAAuBtF,MAChB4H,EAAS5H,MAAMoI,UAS1BqF,UACI,OAAOzN,KAAK2L,KAMhB+B,UACI,GAAIrG,EAAQD,IAAIpH,MAAO,CACnB,MAAM8H,EAAQF,EAAS5H,MACvBqH,EAAQL,OAAOhH,MACX8H,EAAMK,gBACNwF,aAAa7F,EAAMK,eACnBL,EAAMK,cAAgB,MAE1BL,EAAMI,iBAAiBnG,OAAO,GAAGF,QAAQ+L,GAAMA,KAE/C5N,KAAKmJ,YACLnJ,KAAKmJ,WAAWC,YAAYpJ,MAEhCA,KAAK6N,aAOTC,UAAU1I,GACNwC,EAAS5H,MAAMkI,iBAAiBxD,KAAKU,GAWzC2I,EAAEvH,GACE,OAAOxG,KAAKyN,IAAIO,cAAcxH,GAWlCyH,GAAGzH,GACC,OAAOF,EAAQtG,KAAKyN,IAAKjH,GAa7BqF,aAGI,GAFAvG,EAAuBtF,MAEnBmL,GACA,OAGJ,MAAM+C,EAAU,KACZ,IAAKlO,KAAKoI,UACN,OAGJ,MAAM+F,EAAenO,KAAKoO,cAEtB,kBAAqBD,GAAgBA,KACrCnO,KAAKqO,SAASrO,KAAKsO,UACnBtO,KAAKuO,cASb,OALAL,EAAQtB,KAAO5M,KACfmL,IAAoB,EACpBhN,EAAe6B,KAAM,SAAUkO,GAC/B/C,IAAoB,EAEb+C,EAQXM,mBAGI,GAFAlJ,EAAuBtF,MAEnBmL,GACA,OAGJ,MAAMsD,EAAgB,KAClB1K,EAASoB,MAAMnF,KAAK6L,SAQxB,OALA4C,EAAc7B,KAAO5M,KACrBmL,IAAoB,EACpBhN,EAAe6B,KAAM,eAAgByO,GACrCtD,IAAoB,EAEbsD,EAUXJ,SAAS1E,GACL,IAAII,EAAOJ,EAENL,MACDS,EAAOL,GAAuBC,EAAc3J,OAAS2J,GAIrD,iBAAoBI,EACpB/J,KAAKyN,IAAIzD,UAAYD,GAErB/J,KAAKyN,IAAIlD,YAAc,GACvBvK,KAAKyN,IAAIzK,YAAY+G,IAY7B+B,UAEQ,SAAU9L,MAIVA,KAAK0O,OAObC,WAEQ,UAAW3O,MAIXA,KAAK4O,QAGL,YAAa5O,MAMbA,KAAK6O,UASbT,cAUAE,SAAU,MAAQ,gBAKlBC,aAKAO,aAEQ,cAAe9O,MAIfA,KAAK+O,YAOblB,cAuBA5G,KAAK+H,EAAWjM,EAAMkM,GAClB,MAAMC,EAAqBF,EAAUG,cAC/BvJ,EAAQ,IAAIwJ,YACdJ,EACA1L,KAAiBtD,KAAKwF,YAAY4G,iBAAkB6C,GAAaI,OAAQtM,KAGzE,mBAAsB/C,KAAKkP,IAC3BlP,KAAKkP,GAAoBtJ,GAG7B5F,KAAKsP,cAAc1J,GAevBkB,GAAGyI,EAAYnK,EAAUS,GACrB,OAAOH,EAAoB1F,KAAMuP,EAAYnK,EAAUS,GAY3D+F,cAAcxG,EAAUuD,GACpB,OAAOf,EAAS5H,MAAMiI,GAAGnB,GAAG6B,GAAYuC,GAAW9F,GAMvDoK,yBAAyBzR,EAAM0R,EAAUpC,GACrC,MAAM7E,EAAYH,EAAmBrI,KAAKwF,aACtCgD,EAASzK,KACTA,EAAOyK,EAASzK,GAAMA,MAE1BiC,KAAKyM,MAAM1O,GAAQsP,EAGvBqC,oBACI,MAAM5H,EAAQF,EAAS5H,MAEnB8H,EAAMK,gBACNwF,aAAa7F,EAAMK,eACnBL,EAAMK,cAAgB,MAGrBmB,KDxdN,SAAuCqG,GACtC3G,KACAtJ,IAAOuJ,SAAS2G,aAAaD,GCudzBE,CAA8B7P,MAGlC8H,EAAMM,WAAY,EAClBpI,KAAK2O,WACL3O,KAAK6L,SAGTiE,uBAII,GAAIzI,EAAQD,IAAIpH,MAAO,CACnB,MAAM8H,EAAQF,EAAS5H,MAClB8H,EAAMK,gBACPL,EAAMK,cAAgBvD,WAAW5E,KAAK0N,QAAQ1O,KAAKgB,MAAOA,KAAKwF,YAAY0G,eAE/EpE,EAAMM,WAAY,EAGtBpI,KAAK8O,eC3kBE,SAAyB7N,EAAKlC,EAAKN,GAC5CM,KAAOkC,EACT/C,OAAOC,eAAe8C,EAAKlC,GACzBN,MAAOA,EACPL,YAAY,EACZoD,cAAc,EACdC,UAAU,IAGZR,EAAIlC,GAAON,GD8BT2M,cAgBgBJ,IEjDtB,MAAM+E,GAAwB,QACxBC,GAAOC,GAAOA,EASb,SAAS3O,GAAK4O,MACjB,OAAIA,EAAQnR,KAAOmR,EAAQC,KAChBC,MAAmBF,GAEvBE,GAAepR,KAAK,KAAMkR,GAGrC,SAASE,GAAeF,GAASnR,IAACA,EAADsR,YAAMA,EAAN3O,WAAmBA,IAChD,MAAM4O,EAmFV,SAAsBvS,EAAMsS,EAAaE,EAAW/I,GAahD,MAAMgJ,EAAqBlN,GAEnBvF,OACAyO,MAAM,EACNe,UAAU,EACVN,SAAS,EACTF,QAASsD,GAAeL,GACxBzD,OAAQgE,GAAaP,GACrBvI,SAAW1J,IAGfyJ,GAKAgJ,EAAmBvD,UACnBuD,EAAmBhE,MAAO,EAC1BgE,EAAmBzD,QAAUyD,EAAmBjE,OAAS,SAAUc,GAC/D,MAAMoD,EAAoBlJ,EAA2BvH,KAAMwQ,GAM3D,MAAI,kBAAqBnD,GACjBoD,IAAsBpD,IAClBA,EACAlK,EAAanD,KAAMjC,EAAMsP,GAEzBhK,EAAgBrD,KAAMjC,IAGvBsP,GAGJoD,IAKX1S,EAAKoR,gBAAkBpR,GACvByS,EAAmB/I,QAAQ/C,KAAK3G,EAAKoR,eAKrCY,GAAsB9L,KAAKlG,IAC3ByS,EAAmB/I,QAAQ/C,KJlG5B,SAAsBgM,GACzB,OAAOA,EAAIC,QAAQ,WAAY,CAACC,EAAOC,IAAO,IAAMA,EAAG1B,eIiGnB2B,CAAa/S,IAGjD,OAAOyS,EAnJgBO,CACnBhS,EACAsR,GAAe3O,EAAWrD,IAC1BqD,EAAWC,IACXuO,GAEEc,EAAgBC,GAAuBlS,EAAKA,EAAKuR,GAUvD,OAPIA,EAAe7I,UACfuJ,EAAcE,OAASZ,EAClB7I,QACA8E,OAAO4E,GAAaA,IAAcpS,GAClCqS,IAAID,GAAaF,GAAuBE,EAAWpS,KAGrDiS,EAmBX,SAASC,GAAuBlS,EAAKsS,EAAiBC,GAClD,MAAMC,GACFxS,MACAoR,KAAM,SACNqB,UAAW,YACX9P,YACIF,cAAc,EACdnD,MAEI,OADAiH,EAAuBtF,MAChBA,KAAKyM,MAAM4E,IAEtB1P,IAAI0L,GAEA,OADA/H,EAAuBtF,MAChBA,KAAKyM,MAAM4E,GAAmBhE,KAmBjD,OAdIiE,IACAC,EAAoBE,SAAW,SAAUC,GAEhCA,EAAMrS,eAAe,aACtBlB,EACIuT,EACA,WACApO,EAAapF,OAAOY,OAAO,MAAO4S,EAAMlJ,WAGhDkJ,EAAMlJ,SAASzJ,GAAOuS,IAIvBC,ECpFJ,SAASvS,GAAKkR,GACjB,OAAIA,EAAQnR,KAAOmR,EAAQC,KAChBwB,GAAOzB,GAEXyB,GAGX,SAASA,GAAOC,GACZ,MAAMzB,KAACA,EAADpR,IAAOA,EAAP2C,WAAYA,GAAckQ,EAChC,GAAa,WAATzB,GAAqBzO,EAAWjD,MAAO,CACvC,IAAIoT,GAAmB,EACvB,MAAMC,EAASpQ,EAAWjD,aAEnBiD,EAAWjD,aACXiD,EAAWD,SAElBC,EAAWrD,IAAM,WAGb,GAFAiH,EAAuBtF,MAEnB6R,EACA,OAEJA,GAAmB,EAEnB,MAAME,EAAcD,EAAO9S,KAAKgB,MAIhC,OAHA7B,EAAe6B,KAAMjB,EAAKgT,GAC1BF,GAAmB,EAEZE,GAIf,OAAOH,ECrCX,MAAMI,GAAgBrS,OAChBsS,GAAgBD,GAAOtP,SACvBwP,GAAgB,YAChBC,GAAgB,aAChBC,GAAgB,cAChBC,GAAgB,cAChBC,GAAgB,YAChBC,GAAgB,KAIhBC,GAAY,QAwGHC,OAxER,SAAqBC,EAAaC,EAAWzC,GAChD,IAAI0C,EAAsBF,EAAYG,MAClCC,EAAsBH,EAAUI,wBAChCC,EAAsBN,EAAYK,wBAClCE,EAAsB3P,GACtB4P,GAAY,WACZC,GAAY,cACZC,SAAYpB,IACb9B,IACCmD,UAAEA,EAAFC,WAAaA,GAkFrB,SAA+BF,GAC3B,IAAI3P,KAoBJ,OAlBI2P,IAAapB,IAAUoB,IAAanB,UACzBD,GAAOI,MAAmBE,IACjC7O,EAASyO,IAAiBF,GAAOI,IACjC3O,EAAS0O,IAAiBH,GAAOK,KAE1BJ,GAASsB,iBAChB9P,EAASyO,IAAiBD,GAASsB,gBAAgBrB,IACnDzO,EAAS0O,IAAiBF,GAASsB,gBAAgBpB,MAGnD1O,EAASyO,IAAiBD,GAASuB,KAAKtB,IACxCzO,EAAS0O,IAAiBF,GAASuB,KAAKrB,MAG5C1O,EAASyO,IAAiBkB,EAASlB,IACnCzO,EAAS0O,IAAiBiB,EAASjB,KAGhC1O,EAvGyBgQ,CAAsBR,EAAIG,UAItDM,EAAkBT,EAAIG,SAASO,YAC/BC,EAAkBX,EAAIG,SAASS,WAE/BC,EAActB,GAAOvO,KAAKgP,EAAIC,IAC9Ba,GAAeD,EACfE,EAAcxB,GAAOvO,KAAKgP,EAAIE,IAC9Bc,GAAeD,EAGfE,EAAUpB,EAAcqB,KACxBC,EAAUtB,EAAcuB,OAAShB,EAejCS,GAAYG,EACZC,EAAUpB,EAAcwB,MAGjBP,GAAaE,EACpBC,EAAUpB,EAAcwB,MAAQtB,EAAgBuB,MAGzCR,GAAaC,IACpBE,EAAUpB,EAAcqB,KAAOnB,EAAgBuB,OAU9CL,EAAUlB,EAAgBuB,MAAUX,EAAgBN,IACrDY,GAAWlB,EAAgBuB,OAM1BH,EAASpB,EAAgBwB,OAAWd,EAAiBL,IACtDe,GAAWpB,EAAgBwB,OAAS1B,EAAc0B,QAGtD5B,EAAkBuB,KAAOD,EAAU3B,GACnCK,EAAkB6B,IAAOL,EAAS7B,6oHC7GtC,MAAMmC,GAAkBC,IAChBA,EAAQC,QAAUD,EAAQC,OAAOzO,QACjCwO,EAAQC,OAAOzO,SAEnBwO,EAAQC,OAAS,MA4Bd,IAAMC,0mEAAbC,CAAA,cAAAC,EAAAC,GAAA,OAAAC,gBAAOD,EAAqChJ,eAAAX,GAAAC,SAAAD,GAAA0J,EAAA/U,QAA5ClC,IAAAqS,KAAA,QAAA+E,QAAA,EAAAnW,IAAA,UAAAN,MAAA,IAQqB,WARrB0R,KAAA,MAAAgF,YAkCK7T,IAAMkL,MAAM,KAlCjBzN,IAAA,MAAAN,MAmCYA,GACAA,GAAS,iBAAoBA,EACtBiE,SAASsL,cAAcvP,GAE3BA,IAvCf0R,KAAA,MAAAgF,YA+CK7T,IAAM2L,SAAS,KA/CpBlO,IAAA,OAAAN,MAAA,KAgDwB,IAhDxB0R,KAAA,MAAAgF,YAwDK7T,IAAM2L,SAAS,KAxDpBlO,IAAA,YAAAN,MAAA,KAyD6B,IAzD7B0R,KAAA,MAAAgF,YAmEK7T,IAAMkL,MAAM,KAnEjBzN,IAAA,KAAAN,MAAA,IAoEsB,aApEtB0R,KAAA,MAAAgF,YA8EK7T,IAAMkL,MAAM,KA9EjBzN,IAAA,KAAAN,MAAA,IA+EsB,gBA/EtB0R,KAAA,SAAApR,IAAA,UAAAiN,QAqFQhM,KAAK4U,OAAS,KACd5U,KAAK4L,cAAc5L,KAAKoV,SAAU,MAClCpV,KAAK4L,cAAc5L,KAAKoV,SAAU,MAClCpV,KAAK4L,cAAc5L,KAAKqV,oBAxFhClF,KAAA,SAAApR,IAAA,aAAAiN,QA4FQ,OAAQhM,KAAKsV,eA5FrBnF,KAAA,SAAApR,IAAA,SAAAiN,QAkGQ,OAFAhM,KAAKsV,aAAc,EAEX,qgCAlGhBnF,KAAA,SAAApR,IAAA,YAAAiN,QA+IQhM,KAAKqV,qBA/IblF,KAAA,SAAApR,IAAA,aAAAiN,QAmJQ0I,GAAgB1U,SAnJxBmQ,KAAA,SAAAgF,YAuJKnW,IAvJLD,IAAA,kBAAAiN,QAyJYhM,KAAKuV,KAAOvV,KAAKwV,MACjBxV,KAAKoV,WAGDpV,KAAKyV,YAAczV,KAAK4U,SACxB5U,KAAK4U,QAAS,EACdhQ,WAAW,KACP5E,KAAK4U,OAASlP,EAAoBhD,SAAU,QAASuF,IAC5CjI,KAAK0V,SAASzN,EAAG0N,UAGlBjB,GAAgB1U,MAChBA,KAAKwV,MAAO,MAGrB,OAIPd,GAAgB1U,SA5K5BmQ,KAAA,SAAAgF,YAmLKnW,IAnLLD,IAAA,WAAAiN,QAqLQ,GAAIhM,KAAKuV,KAAOvV,KAAKwV,KAAM,CACvB,MAAMtF,KACFlQ,KAAKkT,KACLhD,EAAQgD,GAAKlT,KAAKkT,IAElBlT,KAAKmT,KACLjD,EAAQiD,GAAKnT,KAAKmT,IAEtBV,GAAYzS,KAAMA,KAAKuV,IAAKrF,SA7Lb9E,IC7BpB,SAASwK,GAAgBC,EAASC,GAIrC,OAHIA,GAAiBA,EAAc3M,YAAc2M,EAAc3M,WAAWjG,cACtE4S,EAAc3M,WAAWjG,aAAa2S,EAASC,GAE5CD,2oHCNX,MAAME,GAAoB,qBACpBC,GAAoB,qBAEpBC,GAAuB,wBACvBC,GAAuB,wBAEvBC,IACFJ,GACAC,GACAE,GACAD,IAGEG,GAAqB,sOAapB,IAAMC,0mEAAbC,CAAA,cAAAvB,EAAAC,GAAA,OAAAC,gBAAOD,EAA6ChJ,eAAAX,GAAAC,SAAAD,GAAA0J,EAAA/U,QAApDlC,IAAAqS,KAAA,QAAA+E,QAAA,EAAAnW,IAAA,UAAAN,MAAA,IAQqB,mBARrB0R,KAAA,MAAAgF,YAmCK7T,IAAMkL,MAAM,EAAMS,SAAS,KAnChClO,IAAA,QAAAN,MAAA,KAoCyB,IApCzB0R,KAAA,MAAAgF,YAiDK7T,IAAMkL,MAAM,EAAMS,SAAS,KAjDhClO,IAAA,WAAAN,MAAA,KAkD4B,IAlD5B0R,KAAA,SAAApR,IAAA,UAAAiN,QAwDQhM,KAAKsH,IACD0E,CAAC+J,IAAoB,KACrB/J,CAACgK,IAAoB,KACrBhK,CAACiK,IAAuB,KACxBjK,CAACkK,IAAuB,KACxBK,cAAc,GAElBvW,KAAK4L,cAAc5L,KAAKwW,aAAc,SACtCxW,KAAK4L,cAAc5L,KAAKwW,aAAc,YACtC9Q,EAAoB1F,KAAM,QAASA,SAjE3CmQ,KAAA,SAAApR,IAAA,WAAAiN,QAuEQhM,KAAKwW,kBAvEbrG,KAAA,SAAApR,IAAA,aAAAiN,QA2EQ,OAAQhM,KAAKsV,eA3ErBnF,KAAA,SAAApR,IAAA,SAAAiN,QAiFQ,OAFAhM,KAAKsV,aAAc,EAEX,ugCAjFhBnF,KAAA,SAAApR,IAAA,aAAAiN,QAoIQyK,GAAsBzW,SApI9BmQ,KAAA,SAAAgF,YAwIKnW,IAxILD,IAAA,eAAAiN,QA0IYhM,KAAK0W,MA+BjB,SAAgCxP,GACxBA,EAAKiC,aACAjC,EAAKI,GAAcyO,KAkChC,SAAsC7O,GAC7BA,EAAKI,GAAcyO,KACpBI,GAAiBtU,QAAQ9D,IACrBmJ,EAAKI,GAAcvJ,GAAQ2E,SAASE,cAAc,KAClDsE,EAAKI,GAAcvJ,GAAM4Y,UAAY,IACrCzP,EAAKI,GAAcvJ,GAAM6Y,MAAQ7Y,EACjCmJ,EAAKI,GAAcvJ,GAAMoF,aAAa,QAASpF,GAC/CmJ,EAAKI,GAAcvJ,GAAMoF,aAAa,WAAY,KAClD+D,EAAKI,GAAcvJ,GAAMoF,aAAa,QAASiT,IAC/C1Q,EAAoBwB,EAAKI,GAAcvJ,GAAO,QAASmJ,KA1CvD2P,CAA6B3P,GAG7BA,EAAK4P,UACLlB,GAAgB1O,EAAKI,GAAc0O,IAAoB9O,EAAKiC,WAAW4N,YACvEnB,GAAgB1O,EAAKI,GAAcyO,IAAoB7O,EAAKiC,WAAW4N,YAEvE7P,EAAKiC,WAAWnG,YAAYkE,EAAKI,GAAc4O,KAC/ChP,EAAKiC,WAAWnG,YAAYkE,EAAKI,GAAc2O,OAG/CL,GAAgB1O,EAAKI,GAAcyO,IAAoB7O,GACvD0O,GAAgB1O,EAAKI,GAAc0O,IAAoB9O,GAEnDA,EAAK8P,aACLpB,GAAgB1O,EAAKI,GAAc2O,IAAuB/O,EAAK8P,aAC/DpB,GAAgB1O,EAAKI,GAAc4O,IAAuBhP,EAAK8P,eAG/D9P,EAAKiC,WAAWnG,YAAYkE,EAAKI,GAAc4O,KAC/ChP,EAAKiC,WAAWnG,YAAYkE,EAAKI,GAAc2O,QArDnDgB,CAAsBjX,MAEtByW,GAAsBzW,SA7IlCmQ,KAAA,SAAApR,IAAA,cAAAiN,MAiJgB/D,GACR,GAAIjI,KAAK0W,OAAqB,UAAZzO,EAAGiP,MAAoBjP,EAAG0N,OAAOiB,QAAU5W,KAAKsH,GAAciP,aAAc,CAE1F,OADAvW,KAAKsH,GAAciP,cAAe,EAC1BtO,EAAG0N,OAAOiB,OAEd,KAAKb,GACL,KAAKC,GACDhW,KAAKsH,GAAc2O,IAAsBkB,QACzC,MAGJ,KAAKlB,GACL,KAAKC,GACDlW,KAAKsH,GAAcyO,IAAmBoB,QAG9CnX,KAAKsH,GAAciP,cAAe,MAEf,UAAZtO,EAAGiP,MAAoBlX,KAAK0W,QAAU1W,KAAK8W,UAClD9W,KAAKsH,GAAc2O,IAAsBkB,aApKlB/L,IAuMnC,SAASqL,GAAsBvP,GACvBA,EAAKI,GAAcyO,KACnBI,GAAiBtU,QAAQuV,GAAkBlQ,EAAKI,GAAc8P,GAAgBjO,YAAcjC,EAAKI,GAAc8P,GAAgBjO,WAAWC,YAAYlC,EAAKI,GAAc8P,8oHC3NjL,MAAMC,GAAe9Y,OAAO,gBACtB+Y,GAAgB/Y,OAAO,iBACvBgZ,GAAQhZ,OAAO,SACfiZ,MACAC,GAAQvZ,OAAOY,OAAO,MAGtB4Y,GAAeC,OAAOD,aAyV5B,SAASE,GAAYC,EAASC,GAC1B,MAAMC,EAAWnV,EAAc,SAM/B,OALAmV,EAASb,KAAO,WAChBlU,EAAY+U,EAAUjV,EAAe+U,IACjCC,GACA3U,EAAa4U,EAAU,UAAWD,GAE/BC,EAoBIC,8mEA/VfC,CAAA,cAAAlD,EAAAC,GAAA,OAAAC,gBAAOD,EAAoChJ,eAAAX,GAAAC,SAAAD,GAAA0J,EAAA/U,QAA3ClC,IAAAqS,KAAA,QAAA+E,QAAA,EAAAnW,IAAA,UAAAN,MAAA,IAQqB,UARrB0R,KAAA,QAAA+E,QAAA,EAAAnW,IAAA,UAAAN,MAAA,IAgBqB+Y,KAhBrBrH,KAAA,SAAA+E,QAAA,EAAAnW,IAAA,WAAAN,MAkCoByZ,IACPT,GAAMS,KACPT,GAAMS,GAAW,IAAIhU,QAAQ,CAACE,EAAS+T,KACnC,MAAMC,EAAU,IAAIC,eACpBD,EAAQlS,iBAAiB,OAAQ,WACzBlG,KAAKsY,OAAS,KAAOtY,KAAKsY,QAAU,IACpCH,EAAO,IAAI1S,SAASzF,KAAKsY,UAAUtY,KAAKuY,iBAG5CnU,EAAQpE,KAAKuY,gBAEjBH,EAAQI,QAAUL,EAClBC,EAAQK,QAAUN,EAClBC,EAAQM,KAAK,MAAOR,GACpBE,EAAQO,UAITlB,GAAMS,MApDrB/H,KAAA,SAAA+E,QAAA,EAAAnW,IAAA,YAAAiN,MA6DqB4M,GACbnW,EAAIE,KAAKK,YAAY4U,GAAYgB,OA9DzCzI,KAAA,SAAA+E,QAAA,EAAAnW,IAAA,gBAAAiN,MAiFyB6M,GAKjB,IAAIC,EAA4B,iBAAdD,EACdE,SAASF,EAAUlI,QAAQ,OAAQ,IAAK,IAAMkI,EAClD,OAAIC,EAAO,MACApB,GAAaoB,GAGjBpB,GACH,QAFJoB,GAAQ,QAEc,IAClB,OAAiB,KAAPA,OA9FtB3I,KAAA,QAAAgF,YA8GK7T,IAAOkL,MAAM,KA9GlBzN,IAAA,OAAAN,MAAA,IA+GW,KA/GX0R,KAAA,QAAAgF,YAqHK7T,IAAOkL,MAAM,KArHlBzN,IAAA,OAAAN,MAAA,IAsHW,KAtHX0R,KAAA,QAAAgF,YA4HK7T,IAAOkL,MAAM,KA5HlBzN,IAAA,OAAAN,MAAA,IA6HW,KA7HX0R,KAAA,SAAApR,IAAA,UAAAiN,QAkIahM,KAAKuX,MACNvX,KAAKuX,KACDyB,MAAO,KACPtY,KAAM,KACN3C,KAAM,MAEViC,KAAKsX,OACLtX,KAAK4L,cAAc5L,KAAKiZ,wBAzIpC9I,KAAA,SAAApR,IAAA,aAAAiN,QA8IQ,OAAQhM,KAAKsV,eA9IrBnF,KAAA,SAAApR,IAAA,SAAAiN,QAoJQ,OAFAhM,KAAKsV,aAAc,EAEX,6mDApJhBnF,KAAA,SAAApR,IAAA,YAAAiN,QAqOQhM,KAAKiZ,wBArOb9I,KAAA,SAAAgF,YA2OKnW,IA3OLD,IAAA,qBAAAiN,QA6OQ,MAAMlE,EAAQ9H,KAAKuX,IACb9K,EAAQzM,KAAKyM,MA2BnB,GAvBIA,EAAM1O,OAAS+J,EAAM/J,MACrB0O,EAAMqM,OAAShR,EAAMgR,MACrBrM,EAAM/L,OAASoH,EAAMpH,OAKjBoH,EAAMpH,MACNV,KAAKsX,IAAexP,EAAMpH,OAE1BV,KAAKsX,IAAexP,EAAMpH,MAAMyF,SAGpC2B,EAAM/J,KAAO+J,EAAMpH,KAAOoH,EAAMgR,KAAOhR,EAAMoR,OAAS,KAElDpR,EAAMkR,QACFlR,EAAMkR,MAAM7P,YACZrB,EAAMkR,MAAM7P,WAAWC,YAAYtB,EAAMkR,OAE7ClR,EAAMkR,MAAQ,QAIjBvM,EAAM1O,MAAQ0O,EAAMqM,OAASrM,EAAM/L,KAAM,CAC1CoH,EAAM/J,KAAO0O,EAAM1O,KACnB+J,EAAMgR,KAAOrM,EAAMqM,KACnBhR,EAAMpH,KAAO+L,EAAM/L,KAEnB,MAAMyY,EAAanZ,KAAKwF,YAAY4T,QAAQ3M,EAAM/L,MAE9CyY,IACArR,EAAMoR,OAASC,EAGVA,EAAW9B,MACZ8B,EAAW9B,KAAgB,EAEvB,YAAa8B,GACbA,EAAWE,QAAQrZ,KAAKwF,eAK3BxF,KAAKsX,IAAexP,EAAMpH,OAAS,cAAeyY,IACnDnZ,KAAKsX,IAAexP,EAAMpH,MAAQkX,GAAYuB,EAAWG,cAG7DH,EACKI,QAAQvZ,KAAKyM,MAAOzM,MACpBsE,KAAKtE,KAAKwZ,uBAnS/BrJ,KAAA,SAAAgF,YAwSKnW,IAxSLD,IAAA,mBAAAiN,MAySqByN,GACb,GAAIA,GAAWzZ,KAAKyM,MAAM1O,OAASiC,KAAKuX,IAAOxZ,KAAM,CAGjD,GAAyB,KAArB0b,EAAQC,YACRD,EAAUA,EAAQ1C,YAGd,OAIR/W,KAAKuX,IAAOyB,MAAQS,EACpBzW,EAAYhD,KAAKyN,IAAKgM,GAGlBzZ,KAAKsX,IAAetX,KAAKuX,IAAO7W,OAChCV,KAAKyN,IAAIvK,aACLlD,KAAKsX,IAAetX,KAAKuX,IAAO7W,MAChCV,KAAKuX,IAAOyB,aA5TN5N,ICvC1B,MAAMuO,GAAW/W,EAAc,YAOlBgX,IACTC,OAAQ,kCACRN,QAAQ9M,EAAOqN,GACX,GAAIrN,EAAM1O,KAAM,CACZ,MAAMma,KAAalY,KAAK6Z,qBAAqBpN,EAAM1O,WAEnD,OAAO+b,EAAatU,YACfuU,SAAS7B,GACT5T,KAAK0V,IACLzV,MAAM0V,IAEf,OAAO/V,QAAQiU,OAAO,IAAI1S,MAAM,6BAIxC,SAASwU,GAAa7X,GAElB,OADAD,EAAaC,GACN8B,QAAQiU,OAAO/V,GAG1B,SAAS4X,GAAiBE,GAEtB,OADAP,GAAS3P,UAAYkQ,EACdxX,SAAS2H,WAAWsP,GAASrP,SAAS,GAAMyM,WC7BvD,MAAMoD,GAAsB5b,OAAO,UAC7B6b,GAAgBxX,EAAc,YAC9ByX,GAAe,QACrB,IAAIC,GAEJF,GAAcpQ,UAAa,iDAyBpB,MAAMuQ,IACTV,OAAQ,2DACRW,cAAc,EAUdC,WAQAC,eAEArB,QAAQsB,GACJL,GAAgBK,EAAUL,cAC1BK,EAAUC,UAAU5a,KAAK6a,mBAG7BtB,SAAQT,KAAEA,EAAF/a,KAAQA,GAAQ+b,GAYpB,OATKA,EAAaK,MACdL,EAAaK,IAAuB1X,EAAI4H,WAAW+P,GAAc9P,SAAS,GAAMyM,YAGpF+C,EAAaK,IAAqB5P,YAAcuO,EAC1CuB,GAAapW,KAAK6U,GACdwB,GAAcxB,GACdA,EACJwB,GAActa,KAAKya,QAAQ1c,IAASiC,KAAK0a,YAAY3c,IACpDmG,QAAQE,QAAQ0V,EAAaK,MAGxCU,iBACI,yEAGO7a,KAAK6Z,qEACL7Z,KAAK6Z,mEACL7Z,KAAK6Z,6GAOhBP,YACI,WACNtZ,KAAK6a,yKCvFDlB,GAAW/W,EAAc,YAWlBkY,IACTjB,OAAQ,mCACRN,QAAQ9M,EAAOqN,GACX,GAAIrN,EAAMqM,KAAM,CACZ,MAAMZ,KAAalY,KAAK6Z,UAWpC,SAA+Bf,GAC3B,OAAOA,EACF3J,cACAwB,QAAQ,OAAQ,IAdqBoK,CAAsBtO,EAAMqM,YAE9D,OAAOgB,EAAatU,YACfuU,SAAS7B,GACT5T,KAAK0V,IACLzV,MAAM0V,IAEf,OAAO/V,QAAQiU,OAAO,IAAI1S,MAAM,6BAUxC,SAASwU,GAAa7X,GAElB,OADAD,EAAaC,GACN8B,QAAQiU,OAAO/V,GAG1B,SAAS4X,GAAiBE,GAEtB,OADAP,GAAS3P,UAAYkQ,EACdxX,SAAS2H,WAAWsP,GAASrP,SAAS,GAAMyM,WChCvDiB,GAAKoB,QAAQQ,SAAWA,GACxB5B,GAAKoB,QAAQ0B,QAAUA,GACvB9C,GAAKoB,QAAQ,oBAAsBmB,GCJ5B,SAASS,GAAeC,EAAIC,GAC/B,GAAID,EACA,OAAOA,EAAGE,UAAUC,OAAOF,GCD5B,SAASG,GAAYJ,EAAIC,GAC5B,IAAII,EAAgB3D,OAAOuD,GAAUK,OAAOxV,MAAM,OAAOqL,IAAIoK,GAAaA,EAAUD,QAChFN,GAAMK,EAAc3X,QACpB2X,EAAczZ,QAASqZ,GAAaD,EAAGE,UAAU9V,IAAI6V,ipHCUvDO,qpEAANzG,EAA6ChJ,eAAAX,GAAAC,SAAAD,GAAA0J,EAAA/U,2DAQxB,4CAoBhBsB,IAAO2L,SAAS,+BAAmB,2CAQhC,OAAQjN,KAAKsV,kDAIb,IAAItV,KAAKsV,YAIT,MAAQ,00EA4FHtV,KAAKsV,cACNtV,KAAKsV,aAAc,EACnBtV,KAAK0b,UAAY1b,KAAK+N,EAAE,YACxBrI,EAAoB1F,KAAK+N,EAAE,WAAY,QAAS/N,KAAK2b,wBACrDjW,EAAoB1F,KAAK+N,EAAE,QAAS,QAAS/N,KAAK4b,gBAClDlW,EAAoB1F,KAAK+N,EAAE,OAAQ,QAAS/N,KAAK2b,wBACjD3b,KAAK4L,cAAc5L,KAAK6b,mBAAoB,0CASnD7c,qCAEOgB,KAAKyM,MAAMqP,UACXT,GAAYrb,KAAK0b,UAAW,qCAInC1c,yCAEQiE,EAAajD,KAAM,aACpBgb,GAAehb,KAAK0b,UAAW,qCAItC1c,iCAOGgB,KAAKiH,KAAK,aACVjH,KAAK2b,8BA7KevQ,ICtB5BhO,EAAAU,EAAA2B,EAAA,4BAAAsc,KAAA3e,EAAAU,EAAA2B,EAAA,0BAAAuc,KAAA5e,EAAAU,EAAA2B,EAAA,kCAAAwc,KAAA7e,EAAAU,EAAA2B,EAAA,yBAAAyc,KAAA9e,EAAAU,EAAA2B,EAAA,kCAAA0c,KAMO,MAAMJ,GAAUK","file":"common-widget-elements.esm.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","\r\nexport const GLOBAL = (() => {\r\n    const undef = 'undefined';\r\n    /* global self, window, global */\r\n    if (typeof window !== undef) { return window; }\r\n    if (typeof global !== undef) { return global; }\r\n    if (typeof self !== undef) { return self; }\r\n    return Function('return this;')();\r\n})();\r\n\r\nexport function getGlobal() {\r\n    return GLOBAL;\r\n}\r\nexport default getGlobal;","module.exports = (window.WeakMap.WeakMap = window.WeakMap);","module.exports = (window.Symbol.Symbol = window.Symbol);","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","/**\r\n * return a value to a given method\r\n *\r\n * @function\r\n * @param {Function} fn\r\n * @param {*} ctx The context to be assigned to `fn`\r\n * @return {Function}\r\n *\r\n * @example\r\n *\r\n * f = functionBin(function() { console.log(`Hello ${this.name}`); }, { name: \"Jackson\" });\r\n * f(); // => \"Hello Jackson\"\r\n */\r\nexport const functionBind = Function.bind.call.bind(Function.bind);\r\n\r\n/**\r\n * return a bound `.call` to the given method.\r\n *\r\n * @type function\r\n * @param {Function} fn\r\n * @return {Function}\r\n * @example\r\n *\r\n * forEach = functionBindCall(Array.prototype.forEach);\r\n * // same as doing: Array.prototype.forEach.call (but returns a new \"call\" method);\r\n */\r\nexport const functionBindCall = functionBind(Function.call.bind, Function.call);\r\n\r\n// Object ===============================================================================\r\nexport const toString                 = functionBindCall(Object.prototype.toString);\r\nexport const isObject                 = obj => toString(obj) === \"[object Object]\";\r\nexport const isString                 = obj => toString(obj) === \"[object String]\";\r\nexport const isFunction               = obj => toString(obj) === \"[object Function]\";\r\nexport const isNull                   = obj => toString(obj) === \"[object Null]\";\r\nexport const isUndefined              = obj => toString(obj) === \"[object Undefined]\";\r\nexport const objectDefineProperty     = Object.defineProperty;\r\nexport const objectDefineProperties   = Object.defineProperties;\r\nexport const objectKeys               = Object.keys;\r\nexport const defineProperty = (obj, prop, value, getter, setter, configurable = true, enumerable = false, writable = true) => {\r\n    const descriptor = {\r\n        configurable,\r\n        enumerable\r\n    };\r\n\r\n    if (getter || setter) {\r\n        descriptor.get = getter;\r\n        descriptor.set = setter;\r\n    } else {\r\n        descriptor.writable = writable;\r\n        descriptor.value = value;\r\n    }\r\n\r\n    objectDefineProperty(obj, prop, descriptor);\r\n\r\n    return obj;\r\n};\r\n\r\n\r\n// Array ===============================================================================\r\nconst arr = [];\r\nexport const isArray        = Array.isArray;\r\nexport const arrayForEach   = functionBindCall(arr.forEach);\r\nexport const arrayIndexOf   = functionBindCall(arr.indexOf);\r\nexport const arraySplice    = functionBindCall(arr.splice);\r\nexport const arraySlice    = functionBindCall(arr.slice);\r\n\r\n\r\n// Logging ===============================================================================\r\nexport const consoleLog = console.log; // eslint-disable-line\r\nexport const consoleError = console.error || consoleLog; // eslint-disable-line\r\nexport const consoleWarn = console.warn || consoleLog; // eslint-disable-line\r\n\r\n\r\n// Iterators ===============================================================================\r\nexport const SymbolIterator = \"undefined\" !== typeof Symbol && Symbol.iterator ? Symbol.iterator : \"@@iterator\";\r\n\r\n\r\n// DOM ===============================================================================\r\nconst HTMLElementPrototype = HTMLElement.prototype;\r\nexport const doc = document;\r\nexport const head = doc.head;\r\nexport const createDocFragment = () => doc.createDocumentFragment();\r\nexport const createElement = tagName => doc.createElement(tagName);\r\nexport const createTextNode = data => doc.createTextNode(data || \"\");\r\nexport const appendChild = functionBindCall(HTMLElementPrototype.appendChild);\r\nexport const insertBefore = functionBindCall(HTMLElementPrototype.insertBefore);\r\nexport const hasAttribute = functionBindCall(HTMLElementPrototype.hasAttribute);\r\nexport const getAttribute = functionBindCall(HTMLElementPrototype.getAttribute);\r\nexport const setAttribute = functionBindCall(HTMLElementPrototype.setAttribute);\r\nexport const removeAttribute = functionBindCall(HTMLElementPrototype.removeAttribute);\r\nexport const isDocFragment = node => toString(node) === \"[object DocumentFragment]\";\r\n","import {isObject} from \"./runtime-aliases.js\";\r\n\r\n//============================================================\r\n\r\n/**\r\n * Extends an object with the properties of another.\r\n *\r\n * @param {Object|Boolean} mergeIntoObj\r\n *  The object that will have the properties of every other object provided\r\n *  on input merged into. This can also be a `Boolean`, in which case,\r\n *  a deep merge of objects will be done - argument number 2 will\r\n *  become the `mergeIntoObj`.\r\n * @param {...Object} mergeObjects\r\n *\r\n * @return {Object}\r\n */\r\nexport function objectExtend(mergeIntoObj, ...mergeObjects) {\r\n    let response    = mergeIntoObj || {};\r\n    let total       = mergeObjects.length;\r\n    let deepMerge   = false;\r\n    let i;\r\n    let key;\r\n\r\n    if (typeof mergeIntoObj === \"boolean\") {\r\n        deepMerge   = mergeIntoObj;\r\n        response    = mergeObjects.shift() || {};\r\n        total       = mergeObjects.length;\r\n    }\r\n\r\n    for (i = 0; i < total; i++) {\r\n        if (!mergeObjects[i]) {\r\n            continue;\r\n        }\r\n\r\n        for (key in mergeObjects[i]) {\r\n            if (mergeObjects[i].hasOwnProperty(key)) {\r\n                if (\r\n                    deepMerge &&\r\n                    isObject(response[key]) &&\r\n                    isObject(mergeObjects[i][key])\r\n                ) {\r\n                    response[key] = objectExtend( true, response[key], mergeObjects[i][key]);\r\n\r\n                } else {\r\n                    response[key] = mergeObjects[i][key];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return response;\r\n}\r\nexport default objectExtend;","/* global setImediate:true */\r\nlet reIsNativeCode = /native code/i;\r\n\r\n/**\r\n * Executes a function at the end of the current event Loop - during micro-task processing\r\n *\r\n * @param {Function} callback\r\n */\r\nlet nextTick = (function(){\r\n    if (typeof setImediate !== \"undefined\" && reIsNativeCode.test(setImediate.toString())) {\r\n        return setImediate;\r\n    }\r\n\r\n    // Native Promsie? Use it.\r\n    if (typeof Promise === 'function' && reIsNativeCode.test(Promise.toString())) {\r\n        let resolved = Promise.resolve();\r\n        return function _nextTickPromise(fn) {\r\n            resolved.then(fn).catch(e => console.error(e)); // eslint-disable-line\r\n        };\r\n    }\r\n\r\n    // fallback to setTimeout\r\n    // From: https://bugzilla.mozilla.org/show_bug.cgi?id=686201#c68\r\n    let immediates = [];\r\n    let processing = false;\r\n\r\n    function processPending() {\r\n        setTimeout(function() {\r\n            immediates.shift()();\r\n            if (immediates.length) {\r\n                processPending();\r\n            } else {\r\n                processing = false;\r\n            }\r\n        }, 0);\r\n    }\r\n\r\n    return function _nextTickSetTimeout(fn) {\r\n        immediates.push(fn);\r\n        if (!processing) {\r\n            processing = true;\r\n            processPending();\r\n        }\r\n    };\r\n})();\r\n\r\nlet isQueued = false;\r\nconst queuedCallbacks = new Set();\r\nlet i, t;\r\nconst flushQueue = () => {\r\n    const callbacks = [ ...queuedCallbacks ];\r\n    queuedCallbacks.clear();\r\n    isQueued = false;\r\n    for (i = 0, t = callbacks.length; i < t; i++) {\r\n        callbacks[i]();\r\n    }\r\n};\r\n\r\n/**\r\n * Queues a callback to be executed on nextTick. Unlike calling `nextTick` directly\r\n * `queue()` will ensure that the same callback is not executed more than once when\r\n * `nextTick` runs.\r\n *\r\n * @param {Function} callback\r\n */\r\nnextTick.queue = callback => {\r\n    queuedCallbacks.add(callback);\r\n    if (!isQueued) {\r\n        isQueued = true;\r\n        nextTick(flushQueue);\r\n    }\r\n};\r\n\r\nexport default nextTick;\r\nexport { nextTick };\r\n","/**\r\n * Check if the given `this` value matches its own Constructor's prototype, and\r\n * if so, throw an error.\r\n * Good to use with lazy properties that set themselves up on first access\r\n *\r\n * @param {Object} THIS\r\n * @throws\r\n */\r\nexport function throwIfThisIsPrototype(THIS) {\r\n    if (THIS.constructor && THIS === THIS.constructor.prototype) {\r\n        throw new Error(\"Can not be accessed directly on constructor.prototype!\");\r\n    }\r\n}","/**\r\n * Adds an event handler to a DOM element and returns back an\r\n * object that allows for removal of the event.\r\n *\r\n * @function domAddEventListener\r\n *\r\n * @param {HTMLElement} ele\r\n * @param {String} event\r\n *  The event to listen to (ex. `click`). Multiple events can be defined\r\n *  by separating them with whitespace\r\n * @param {Function} callback\r\n * @param {Boolean} [capture]\r\n *\r\n * @return DOMEventListener\r\n *\r\n * @example\r\n *\r\n * var listener = domAddEventHandler(myEle, \"click\", function(){});\r\n * ...\r\n * listener.remove();\r\n */\r\nexport function domAddEventListener(ele, event, callback, capture) {\r\n    let events      = event.split(/\\s+/);\r\n    let evListeners = {};\r\n\r\n    events.forEach(evName => {\r\n        ele.addEventListener(evName, callback, capture);\r\n        evListeners[evName] = {\r\n            remove: () => ele.removeEventListener(evName, callback, capture)\r\n        }\r\n    });\r\n\r\n    /**\r\n     * A DOM Event listener.\r\n     *\r\n     * @typedef {Object} DOMEventListener\r\n     *\r\n     * @property {Function} remove\r\n     * @property {Object} listeners\r\n     *  List of listeners that were bound to the DOM element. Each listeners has a\r\n     *  corresponding `.remove()` method.\r\n     */\r\n    return Object.create({\r\n        listeners: evListeners,\r\n        remove: function () {\r\n            events.forEach(evName => evListeners[evName].remove());\r\n        }\r\n    });\r\n}\r\nexport default domAddEventListener;\r\n","/**\r\n * Finds Elements within a given HTML Element using `querySelectorAll` and\r\n * return an Array with those elements.\r\n *\r\n * @function domFind\r\n *\r\n * @param {HTMLElement} domEle\r\n * @param {String} selector\r\n *\r\n * @returns {Array<HTMLElement>}\r\n */\r\nexport function domFind(domEle, selector){\r\n    return Array.prototype.slice.call(domEle.querySelectorAll(selector));\r\n}\r\nexport default domFind;\r\n","import {WeakMap} from \"./WeakMap\";\r\n\r\n/**\r\n * Returns an object that contains an initialized WeakMap (`stash` property)\r\n * where data can be stored.\r\n *\r\n * @namespace dataStore\r\n *\r\n */\r\nvar dataStore = /** @lends dataStore */{\r\n    /**\r\n     * Stash data here.\r\n     * @type WeakMap\r\n     */\r\n    stash:  new WeakMap(),\r\n    /**\r\n     * Create a private data store and return it.\r\n     * @return {WeakMap}\r\n     */\r\n    create: function(){\r\n        return new WeakMap();\r\n    }\r\n};\r\n\r\nexport default dataStore;\r\nexport { dataStore };\r\n","const LISTENER_STORAGE = Symbol(\"state\");\r\n\r\n/**\r\n * Supper tiny minimalist EventEmitter\r\n * @implements MinimalEventEmitter\r\n */\r\nexport class Ev {\r\n    on(evName, callback) {\r\n        getStoreFor(this, evName).add(callback);\r\n        /**\r\n         * @typedef {Function} EvOff\r\n         */\r\n        return () => getStoreFor(this, evName).delete(callback);\r\n    }\r\n\r\n    emit(evName, data) {\r\n        getStoreFor(this, evName).forEach(callback => callback(data));\r\n    }\r\n\r\n    clear() {\r\n        getStoreFor(this).clear();\r\n    }\r\n}\r\n\r\n/**\r\n * @private\r\n * @return {Map|Set}\r\n *  If called with no `evName`, then the entire store is returned (a `Map`)\r\n */\r\nfunction getStoreFor(inst, evName) {\r\n    if (!inst[LISTENER_STORAGE]) {\r\n        inst[LISTENER_STORAGE] = new Map();\r\n    }\r\n    if (!evName) {\r\n        return inst[LISTENER_STORAGE];\r\n    }\r\n    if (!inst[LISTENER_STORAGE].has(evName)) {\r\n        inst[LISTENER_STORAGE].set(evName, new Set());\r\n    }\r\n    return inst[LISTENER_STORAGE].get(evName);\r\n}\r\n\r\n\r\n/**\r\n * Minimal EventEmitter interface provinding only the basics\r\n *\r\n * @interface MinimalEventEmitter\r\n */\r\n\r\n/**\r\n * Set an event listener\r\n * @function\r\n * @name MinimalEventEmitter#on\r\n * @param {String} evName\r\n * @param {Function} callback\r\n * @returns {EvOff}\r\n */\r\n\r\n/**\r\n * Emit an event\r\n *\r\n * @function\r\n * @name MinimalEventEmitter#emit\r\n * @param {String} evName\r\n * @param {*} data\r\n */\r\n\r\n/**\r\n * Clear the all the event listeners\r\n * @function\r\n * @name MinimalEventEmitter#clear\r\n */","import objectExtend from \"@purtuga/common/src/jsutils/objectExtend\"\r\nimport dataStore from \"@purtuga/common/src/jsutils/dataStore\"\r\nimport {Ev} from \"@purtuga/common/src/jsutils/Ev\"\r\nimport { isArray, objectKeys } from \"@purtuga/common/src/jsutils/runtime-aliases\"\r\nimport {Symbol} from \"@purtuga/common/src/jsutils/Symbol\"\r\n\r\n//============================================================================\r\nexport const PRIVATE = dataStore.create();\r\nexport const STATE_SYMBOL = Symbol(\"state\");\r\n\r\n/**\r\n * Checks if the element has an attribute set that matches any of the aliases for a prop\r\n *\r\n * @param {ComponentElement} ele\r\n * @param {ComponentElement~PropDefinition} propDef\r\n *\r\n * @return {Boolean}\r\n */\r\nexport function elementHasAttributeForProp(ele, propDef) {\r\n    return propDef.aliases.some(propAlias => ele.hasAttribute(propAlias));\r\n}\r\n\r\n/**\r\n * Get the prop value from the possible HTML attributes (propName + aliases)\r\n *\r\n * @param ele\r\n * @param propDef\r\n * @returns {string}\r\n */\r\nexport function geAttributeValueForProp(ele, propDef) {\r\n    let attrVal = \"\";\r\n    propDef.aliases.some(propAlias => {\r\n        if (ele.hasAttribute(propAlias)) {\r\n            attrVal = ele.getAttribute(propAlias);\r\n            return true;\r\n        }\r\n    });\r\n    return attrVal;\r\n}\r\n\r\nexport function getState(instance) {\r\n    if (!PRIVATE.has(instance)) {\r\n        let state = {\r\n            isCssScopingDone: false,\r\n            templateEle: null,\r\n            ev: new Ev(),\r\n            destroyCallbacks: [],\r\n            destroyQueued: null,\r\n            isMounted: false\r\n        };\r\n\r\n        PRIVATE.set(instance, state);\r\n    }\r\n    return PRIVATE.get(instance);\r\n}\r\n\r\n\r\n/**\r\n * Returns a kebab-case representation of the given string on input. Essentially, replaces\r\n * each Capital letter with a `-` followed by that letter in lower case.\r\n *\r\n * @param {String} str\r\n *\r\n * @return {String}\r\n *\r\n * @example\r\n *\r\n * getKebabCase(\"Paul\"); // => -paul\r\n * getKebabCase(\"paulTavares\"); // => paul-tavares\r\n */\r\nexport function getKebabCase(str) {\r\n    return str.replace(/([A-Z])/g, (match, p1) => \"-\" + p1.toLowerCase())\r\n}\r\n\r\n\r\n/**\r\n * Given a string in kebab case (ex. paul-tavares), this will return a CamelCase\r\n * representation of that string.\r\n *\r\n * @param {String} str\r\n *\r\n * @return {String}\r\n */\r\nexport function getCamelCase(str) {\r\n    return str.replace(/(-[a-z])/g, (match, p1) => p1.toUpperCase().substr(1))\r\n}\r\n\r\n/**\r\n *\r\n * @param ComponentClass\r\n * @returns {Object<String,ComponentElement~PropDefinition>}\r\n */\r\nexport function getPropsDefinition(ComponentClass) {\r\n    let state = getComponentClassState(ComponentClass);\r\n\r\n    if (!state.propsDef) {\r\n        const statePropsDef = state.propsDef = {};\r\n        const componentPropsDef = ComponentClass.propsDef;\r\n\r\n        // The props are stored internally (weakmap) once for the Component Class.\r\n        // The internal definition has the \"aliases\" expanded as well.\r\n        if (componentPropsDef) {\r\n            objectKeys(componentPropsDef).forEach(propName => {\r\n                statePropsDef[propName] = componentPropsDef[propName];\r\n                // expand aliases as well\r\n                if (isArray(statePropsDef[propName].aliases)) {\r\n                    const propAliasDef = objectExtend({}, componentPropsDef[propName], { _isAlias: true });\r\n                    statePropsDef[propName].aliases.forEach(\r\n                        propNameAlias => !statePropsDef[propNameAlias] &&\r\n                                        (statePropsDef[propNameAlias] = propAliasDef));\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    return state.propsDef;\r\n}\r\n\r\n/**\r\n * Returns the internal state for the Component Class\r\n *\r\n * @param {ComponentElement} ComponentClass\r\n *\r\n * @return {Object}\r\n */\r\nexport function getComponentClassState(ComponentClass) {\r\n    if (!PRIVATE.has(ComponentClass)) {\r\n        PRIVATE.set(ComponentClass, {\r\n            propsDef: null,\r\n            templateEle: null,\r\n            observedAttrs: null\r\n        });\r\n    }\r\n    return PRIVATE.get(ComponentClass);\r\n}\r\n\r\n\r\n","//--------------------------------------------------------------\r\n// Utilities to work with polyfills like ShadyCSS\r\n//--------------------------------------------------------------\r\nimport {GLOBAL} from \"@purtuga/common/src/jsutils/getGlobal\"\r\nimport {domFind} from \"@purtuga/common/src/domutils/domFind.js\"\r\nimport {createElement, head} from \"@purtuga/common/src/jsutils/runtime-aliases.js\"\r\nimport {getComponentClassState} from \"./utils.js\"\r\n\r\n//===========================================================================================\r\nexport const supportsShadyCSS = () => !!GLOBAL.ShadyCSS;\r\nconst removeElement = ele => ele.parentNode.removeChild(ele);\r\nconst isString = s => \"string\" === typeof s;\r\n\r\n/**\r\n * if runtime env. supports shadowRoot\r\n * @returns {boolean}\r\n */\r\nexport function supportsNativeShadowDom() {\r\n    return (head.createShadowRoot || head.attachShadow) &&\r\n        (!supportsShadyCSS() || GLOBAL.ShadyCSS.nativeShadow)\r\n}\r\n\r\n/**\r\n * Scopes the CSS of a given template for the Component by using ShadyCSS.\r\n *\r\n * @param template\r\n * @param eleInstance\r\n */\r\nexport function scopeCss (template, eleInstance) {\r\n    if (supportsShadyCSS()) {\r\n        GLOBAL.ShadyCSS.prepareTemplate(template, eleInstance.constructor.tagName);\r\n    }\r\n}\r\n\r\n/**\r\n * Prepares the rendered content by removing style elements - since they were sopped\r\n * during `scopeCss`\r\n *\r\n * @param renderedContent\r\n * @param componentInstance\r\n *\r\n * @return {HTMLElement|DocumentFragment}\r\n */\r\nexport function prepareRenderedContent(renderOutput, eleInstance) {\r\n    if (supportsShadyCSS()) {\r\n        const isRenderOutputString = isString(renderOutput);\r\n        const ComponentClassState = getComponentClassState(eleInstance.constructor);\r\n        let {templateEle} = ComponentClassState;\r\n        let view;\r\n\r\n        // If Styles have not yet been scoped in the HEAD of the element for this CE Class,\r\n        // then do it now this occurs only once per Component.\r\n        if (!templateEle) {\r\n            ComponentClassState.templateEle = templateEle = createElement(\"template\");\r\n            if (isRenderOutputString) {\r\n                templateEle.innerHTML = renderOutput;\r\n            } else {\r\n                templateEle.appendChild(renderOutput.cloneNode(true));\r\n            }\r\n            scopeCss(templateEle , eleInstance);\r\n        }\r\n\r\n        // If the input was a string, then get a document fragment out of it\r\n        if (isRenderOutputString) {\r\n            templateEle.innerHTML = renderOutput;\r\n            view = document.importNode(templateEle.content, true);\r\n            templateEle.textContent = \"\";\r\n        } else {\r\n            view = renderOutput;\r\n        }\r\n\r\n        // Need to prepare this DOM by calling ShadyCSS.prepareTemplateDom so\r\n        // that scoping classes are applied\r\n        if (!view.content) { // FIXME: should use isTemplate()\r\n            view.content = view;\r\n        }\r\n\r\n        // FIXME: this is dangerous because it expects a certain internal implementation in prepareTemplateDom()\r\n        GLOBAL.ShadyCSS.prepareTemplateDom(view, eleInstance.constructor.tagName);\r\n\r\n        // TODO: any momoization can happen here?\r\n\r\n        // Remove <style> element\r\n        domFind(view, \"style\").forEach(removeElement);\r\n        return view;\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Styles the instance of a custom element using ShadyCSS\r\n *\r\n * @param {HTMLElement} componentInstance\r\n */\r\nexport function styleComponentInstanceElement(componentInstance) {\r\n    if (supportsShadyCSS()) {\r\n        GLOBAL.ShadyCSS.styleElement(componentInstance);\r\n    }\r\n}\r\n\r\n/**\r\n * Restyles a component's sub-tree. Use it when DOM might have been altered dynamically\r\n * and polyfilled styles needs to be applied.\r\n *\r\n * @param {HTMLElement} componentInstance\r\n */\r\nexport function reStyleComponentInstanceSubtree(componentInstance) {\r\n    if (supportsShadyCSS()) {\r\n        GLOBAL.ShadyCSS.styleSubtree(componentInstance)\r\n    }\r\n}","import objectExtend from \"@purtuga/common/src/jsutils/objectExtend.js\"\r\nimport {nextTick} from \"@purtuga/common/src/jsutils/nextTick.js\"\r\nimport {throwIfThisIsPrototype} from \"@purtuga/common/src/jsutils/throwIfThisIsPrototype.js\"\r\nimport {\r\n    objectKeys,\r\n    defineProperty,\r\n    consoleWarn,\r\n    head\r\n} from \"@purtuga/common/src/jsutils/runtime-aliases.js\"\r\nimport domAddEventListener from \"@purtuga/common/src/domutils/domAddEventListener.js\"\r\nimport domFind from \"@purtuga/common/src/domutils/domFind.js\"\r\nimport {\r\n    getState,\r\n    PRIVATE,\r\n    getPropsDefinition,\r\n    getComponentClassState,\r\n    elementHasAttributeForProp,\r\n    geAttributeValueForProp\r\n} from \"./utils.js\"\r\nimport {\r\n    styleComponentInstanceElement,\r\n    prepareRenderedContent,\r\n    supportsNativeShadowDom\r\n} from \"./polyfill-support.js\"\r\n\r\n//============================================================================\r\nconst SHADOW_DOM_SUPPORTED = head.createShadowRoot || head.attachShadow;\r\nconst EV_DEFAULT_INIT = { bubbles: true, cancelable: true, composed: true };\r\nconst CE_REGISTRY = window.customElements;\r\nconst PROPS_NOOP = Object.freeze(Object.create(null));\r\nconst EVENT_ANY = Symbol(\"ev.props.any\");\r\nlet lazySetupUnderway = false;\r\n\r\n/**\r\n * A generic class for building widgets based on HTML Custom Elements.\r\n *\r\n * @extends HTMLElement\r\n *\r\n */\r\nclass ComponentElement extends HTMLElement {\r\n    constructor(...args) {\r\n        const self = super(...args) || this;\r\n        setupComponent(self);\r\n        return self;\r\n    }\r\n\r\n    //==============================================================\r\n    //  Static Members\r\n    //==============================================================\r\n\r\n    /**\r\n     * The Component's props definition\r\n     * @name propsDef\r\n     * @type {Object<String,ComponentElement~PropDefinition>}\r\n     */\r\n    static propsDef = PROPS_NOOP;\r\n\r\n    /**\r\n     * Return default registration tag name\r\n     *\r\n     * @type {String}\r\n     */\r\n    static get tagName() { throw new Error(\"tagName not defined\") }\r\n\r\n    /**\r\n     * Registers the web component. Uses tagName as default input param\r\n     */\r\n    static define(name) {\r\n        name = name || this.tagName;\r\n\r\n        if (CE_REGISTRY.get(name)) {\r\n            if (CE_REGISTRY.get(name) !== this) {\r\n                consoleWarn(`${name} is already a defined in customElementsRegistry as a different Class`);\r\n            }\r\n            return;\r\n        }\r\n\r\n        CE_REGISTRY.define(name, this);\r\n    }\r\n\r\n    /**\r\n     * The number of milliseconds to wait after an element has been detached from DOM before\r\n     * the `.destroy()` method is auto executed.\r\n     *\r\n     * @type {Number}\r\n     */\r\n    static get delayDestroy() { return 0; }\r\n\r\n    /**\r\n     * If Shadow DOM should be used. Default `true`\r\n     *\r\n     * @type {Boolean}\r\n     */\r\n    static get useShadow() { return true; }\r\n\r\n    /**\r\n     * The value for the `mode` option that will be used on the `attachShadow` method.\r\n     *\r\n     * @type {string}\r\n     */\r\n    static get shadowMode() { return \"open\"; }\r\n\r\n    /**\r\n     * Returns the HTML template for the component. Could also be a Template html element\r\n     *\r\n     * @type {String|HTMLTemplateElement}\r\n     */\r\n    static get template() {\r\n        // fixme: remove post v2.\r\n        if (process.env.NODE_ENV !== \"production\") {\r\n            consoleWarn(`${this.name}.template is Deprecated! Use .render() method`);\r\n        }\r\n        return \"<div></div>\";\r\n    }\r\n\r\n    /**\r\n     * Renderer for the template and return what should be inserted into shadowDom.\r\n     * By default, this base class will simply clone the `template` defined in the\r\n     * static property above. This method will called prior to doing that, and if\r\n     * it returns a `truthy` value, then its assume to be either an HTMLElement or\r\n     * DocumentFragment with the element's instance UI (which will be inserted into\r\n     * shadowDom).\r\n     *\r\n     * **NOTE**: Should always use `getComponentInstanceTemplate` or `getComponentTemplate`\r\n     * to retrieve the template or its content, since it is manipulated in browsers that\r\n     * use the polyfills to make the template compatible in those platforms.\r\n     *\r\n     * @param {ComponentElement} eleInstance\r\n     *  The `ComponentElement` instance being initialized\r\n     *\r\n     * @return {HTMLElement|DocumentFragment}\r\n     */\r\n    static renderTemplate(/*eleInstance*/) {\r\n        // FIXME: remove post v2.\r\n        if (process.env.NODE_ENV !== \"production\") {\r\n            consoleWarn(`${this.name}.renderTemplate is NO LONGER SUPPORTED! Use .render() method`);\r\n        }\r\n        return;\r\n    }\r\n\r\n    /**\r\n     * The default initialization options for the `emit()` method.\r\n     * See [Event.contructor]{@link http://devdocs.io/dom/event/event} for more.\r\n     *\r\n     * @type EventInit\r\n     */\r\n    static get eventInitOptions() { return EV_DEFAULT_INIT; }\r\n\r\n    // Returns the list (Array) of props that were marked as `@attr`\r\n    static get observedAttributes() {\r\n        let state = getComponentClassState(this);\r\n\r\n        if (!state.observedAttrs) {\r\n            const propList = getPropsDefinition(this);\r\n            state.observedAttrs = objectKeys(propList).filter(p => propList[p].attr);\r\n        }\r\n\r\n        return state.observedAttrs;\r\n    }\r\n\r\n    //==============================================================\r\n    //  Instance Members\r\n    //==============================================================\r\n\r\n    /**\r\n     * The Component's props.\r\n     * @type {Object}\r\n     */\r\n    get props() {\r\n        throwIfThisIsPrototype(this);\r\n\r\n        if (lazySetupUnderway) {\r\n            return undefined;\r\n        }\r\n\r\n        lazySetupUnderway = true;\r\n\r\n        const propDefinitions = getPropsDefinition(this.constructor);\r\n        let props = {};\r\n        const ev = getState(this).ev;\r\n        const notifyAnyListeners = () => ev.emit(EVENT_ANY);\r\n        notifyAnyListeners._for = this;\r\n        notifyAnyListeners._ev = EVENT_ANY;\r\n\r\n\r\n        objectKeys(propDefinitions).forEach(propName => {\r\n            if (!propDefinitions[propName] || !propDefinitions[propName]._isAlias) {\r\n                let propValue = propDefinitions[propName].default.call(this);\r\n                const notifyPropListeners = () => ev.emit(propName);\r\n\r\n                notifyPropListeners._for = this;\r\n                notifyPropListeners._ev = propName;\r\n\r\n                // FIXME: Can this be more efficient? create just one prop notifier funciton and store list of props in an outer-scoped array?\r\n\r\n                if (\r\n                    propDefinitions[propName].attr &&\r\n                    !propDefinitions[propName].boolean &&\r\n                    elementHasAttributeForProp(this, propDefinitions[propName])\r\n                ) {\r\n                    propValue = geAttributeValueForProp(this, propDefinitions[propName]);\r\n                } else if (this.hasOwnProperty(propName)) {\r\n                    // if the current element has a prop by this same name set directly on the instance,\r\n                    // then this implies that it was set prior to the Element being upgraded.\r\n                    propValue = this[propName];\r\n                    delete this[propName]; // this sets functionality back to the getter/setter.\r\n                }\r\n\r\n                defineProperty(\r\n                    props,\r\n                    propName,\r\n                    undefined,\r\n                    function getProp () {\r\n                        return propValue;\r\n                    },\r\n                    newValue => {\r\n                        newValue = propDefinitions[propName].filter.call(this, newValue);\r\n\r\n                        // Only schedule event notification is the component is mounted\r\n                        if (this.isMounted) {\r\n                            nextTick.queue(notifyPropListeners);\r\n                            nextTick.queue(notifyAnyListeners);\r\n                        }\r\n\r\n                        return propValue = newValue;\r\n                    },\r\n                    true,\r\n                    true\r\n                );\r\n            }\r\n        });\r\n\r\n        defineProperty(this, \"props\", props, undefined, undefined, true, true, false);\r\n        lazySetupUnderway = false;\r\n\r\n        return props;\r\n    }\r\n\r\n    /**\r\n     * Returns a boolean indicating if Component has all required props fulfilled\r\n     */\r\n    get hasRequiredProps() {\r\n        throwIfThisIsPrototype(this);\r\n        return objectKeys(this.constructor.propsDef)\r\n            .filter(propName => this.constructor.propsDef[propName].required)\r\n            .every(propName => !!this.props[propName]);\r\n    }\r\n\r\n    /**\r\n     * returns a boolean indicating if component is connected to DOM\r\n     * @return {Boolean}\r\n     */\r\n    get isMounted() {\r\n        throwIfThisIsPrototype(this);\r\n        return getState(this).isMounted\r\n    }\r\n\r\n    /**\r\n     * Pointer to the UI of the Component. Value is will either be the `showdowRoot` or the element\r\n     * itself.\r\n     *\r\n     * @returns {HTMLElement}\r\n     */\r\n    get $ui() {\r\n        return this._$ui;\r\n    }\r\n\r\n    /**\r\n     * Destroy the instance of the widget\r\n     */\r\n    destroy() {\r\n        if (PRIVATE.has(this)) {\r\n            const state = getState(this);\r\n            PRIVATE.delete(this);\r\n            if (state.destroyQueued) {\r\n                clearTimeout(state.destroyQueued);\r\n                state.destroyQueued = null;\r\n            }\r\n            state.destroyCallbacks.splice(0).forEach(cb => cb());\r\n        }\r\n        if (this.parentNode) {\r\n            this.parentNode.removeChild(this);\r\n        }\r\n        this.didDestroy();\r\n    }\r\n\r\n    /**\r\n     * Adds a callback to be executed when Component is destroyed.\r\n     * @param {Function} callback\r\n     */\r\n    onDestroy(callback) {\r\n        getState(this).destroyCallbacks.push(callback);\r\n    }\r\n\r\n\r\n    /**\r\n     * Find an element in the `$ui` (alias for `querySelector()`)\r\n     *\r\n     * @param {String} selector\r\n     *\r\n     * @return {HTMLElement}\r\n     */\r\n    $(selector) {\r\n        return this.$ui.querySelector(selector);\r\n    }\r\n\r\n    /**\r\n     * Returns an array with matched set of DOM elements based on the given selector.\r\n     * (alias for `querySelectorAll()`)\r\n     *\r\n     * @param {String} selector\r\n     *\r\n     * @returns {Array<HTMLElement>}\r\n     */\r\n    $$(selector) {\r\n        return domFind(this.$ui, selector);\r\n    }\r\n\r\n    /**\r\n     * Updates the component's DOM by running through the render lifecycle of:\r\n     *\r\n     *  `willRender()`\r\n     *  `render()`\r\n     *  `didRender()`\r\n     *\r\n     * This method probably should not be called directly. It is automatically\r\n     * called when props change\r\n     */\r\n    get update() {\r\n        throwIfThisIsPrototype(this);\r\n\r\n        if (lazySetupUnderway) {\r\n            return undefined;\r\n        }\r\n\r\n        const _update = () => {\r\n            if (!this.isMounted) {\r\n                return;\r\n            }\r\n\r\n            const shouldRender = this.willRender();\r\n\r\n            if (\"boolean\" !== typeof shouldRender || shouldRender) {\r\n                this._setView(this.render());\r\n                this.didRender();\r\n            }\r\n        };\r\n\r\n        _update._for = this;\r\n        lazySetupUnderway = true;\r\n        defineProperty(this, \"update\", _update);\r\n        lazySetupUnderway = false;\r\n\r\n        return _update;\r\n    }\r\n\r\n    /**\r\n     * An instance bound method used to queue the render update cycle\r\n     * @type Function\r\n     * @private\r\n     */\r\n    get _queueUpdate() {\r\n        throwIfThisIsPrototype(this);\r\n\r\n        if (lazySetupUnderway) {\r\n            return undefined;\r\n        }\r\n\r\n        const __queueUpdate = () => {\r\n            nextTick.queue(this.update);\r\n        };\r\n\r\n        __queueUpdate._for = this;\r\n        lazySetupUnderway = true;\r\n        defineProperty(this, \"_queueUpdate\", __queueUpdate);\r\n        lazySetupUnderway = false;\r\n\r\n        return __queueUpdate;\r\n    }\r\n\r\n    /**\r\n     * Handles the render output - which normally means flush it ot DOM.\r\n     * Override for different render libraries\r\n     *\r\n     * @protected\r\n     * @param renderOutput\r\n     */\r\n    _setView(renderOutput) {\r\n        let view = renderOutput;\r\n\r\n        if (!supportsNativeShadowDom()) {\r\n            view = prepareRenderedContent(renderOutput, this) || renderOutput;\r\n        }\r\n\r\n        // If it looks like html, then use innerHTML\r\n        if (\"string\" === typeof view) {\r\n            this.$ui.innerHTML = view;\r\n        } else {\r\n            this.$ui.textContent = \"\";\r\n            this.$ui.appendChild(view);\r\n        }\r\n    }\r\n\r\n    //--------------------------------------------------------------\r\n    //~~~~~~~~~~~~~~~~~~~~~~ LIFE CYCLE HOOKS ~~~~~~~~~~~~~~~~~~~~~~\r\n    //--------------------------------------------------------------\r\n\r\n    /**\r\n     * Called to initialize the component. At this point `this.$ui` has been set\r\n     * (to either `shadowRoot` or `this`), but nothing has ben rendered.\r\n     */\r\n    didInit() {\r\n        // FIXME: delete after v2\r\n        if (\"init\" in this) {\r\n            if (process.env.NODE_ENV !== \"production\") {\r\n                consoleWarn(`${this.constructor.name}.init() is Deprecated! Use .didInit()`);\r\n            }\r\n            this.init();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Component was mounted (attached to DOM)\r\n     */\r\n    didMount() {\r\n        // FIXME: delete after v2\r\n        if (\"ready\" in this) {\r\n            if (process.env.NODE_ENV !== \"production\") {\r\n                consoleWarn(`${this.constructor.name}.ready() is Deprecated! Use .didMount()`);\r\n            }\r\n            this.ready();\r\n        }\r\n        // FIXME: delete after v2\r\n        if (\"mounted\" in this) {\r\n            if (process.env.NODE_ENV !== \"production\") {\r\n                consoleWarn(`${this.constructor.name}.mounted() is Deprecated! Use .didMount()`);\r\n            }\r\n\r\n            // mounted() {}\r\n            this.mounted(); // FIXME: remove post v2\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Component's render function is about to be called. if a `Boolean` `false` is\r\n     * returned, `render()` will be canceled.\r\n     * @return {Boolean}\r\n     */\r\n    willRender() {}\r\n\r\n    /**\r\n     * Render the Component's content.\r\n     *\r\n     * __IMPORTANT__: Note that by default, this view handler (`_setView`) does not support\r\n     * dynamic styles in polyfilled environments. Styles will be scooped only on first render.\r\n     *\r\n     * @return {String|HTMLElement|DocumentFragment}\r\n     */\r\n    render(){ return `<span></span>`; }\r\n\r\n    /**\r\n     * Component has been rendered and dates flushed to DOM\r\n     */\r\n    didRender() {}\r\n\r\n    /**\r\n     * Called if component has been initialized (`init()` has run).\r\n     */\r\n    didUnmount() {\r\n        // FIXME: delete after v2\r\n        if (\"unmounted\" in this) {\r\n            if (process.env.NODE_ENV !== \"production\") {\r\n                consoleWarn(`${this.constructor.name}.unmounted() is Deprecated! Use .didUnmount()`);\r\n            }\r\n            this.unmounted();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Component was destroyed (destroy callback were already called)\r\n     */\r\n    didDestroy() {}\r\n\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~ EVENTEMITTER INTERFACE ~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n    /**\r\n     * Dispatches a native `CustomEvent`. The `data` provided will be available\r\n     * in the customEvent.detail property\r\n     *\r\n     * @param {String} eventName\r\n     * @param {*} data\r\n     * @param {EventInit} [eventInit=ComponentElement.eventInitOptions]\r\n     *  Any other options for the CustomEvent initialization.\r\n     *  See [Event.constructor]{@link http://devdocs.io/dom/event/event} for more.\r\n     *\r\n     * @example\r\n     *\r\n     * document.body.addEventListener(\"my-event\", function (ev) { console.log(ev.detail); });\r\n     *\r\n     * // My component\r\n     * myComponent.emit(\"my-event\", { msg: \"hello\" });\r\n     *\r\n     */\r\n    emit(eventName, data, eventInit) {\r\n        const eventNameLowercase = eventName.toLowerCase();\r\n        const event = new CustomEvent(\r\n            eventName,\r\n            objectExtend({}, this.constructor.eventInitOptions, eventInit, { detail: data })\r\n        );\r\n\r\n        if (\"function\" === typeof this[eventNameLowercase]) {\r\n            this[eventNameLowercase](event);\r\n        }\r\n\r\n        this.dispatchEvent(event);\r\n    }\r\n\r\n    /**\r\n     * Set an event listener on the current component\r\n     *\r\n     * @param {String} eventNames\r\n     *  One or more event names to listen for (space delimiter)\r\n     *\r\n     * @param {Function} callback\r\n     *\r\n     * @param {Boolean} [capture=false]\r\n     *\r\n     * @returns {DOMEventListener}\r\n     */\r\n    on(eventNames, callback, capture) {\r\n        return domAddEventListener(this, eventNames, callback, capture);\r\n    }\r\n\r\n    /**\r\n     * Add callback to be called when props change\r\n     *\r\n     * @param {Function} callback\r\n     * @param {String} [propName]\r\n     *  Optional. The specific prop to watch.\r\n     *\r\n     * @return {Function}\r\n     */\r\n    onPropsChange(callback, propName) {\r\n        return getState(this).ev.on(propName || EVENT_ANY, callback);\r\n    }\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~ NATIVE METHODS ~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n    // Reflects changed html attributes to state.props\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        const propsDef =  getPropsDefinition(this.constructor);\r\n        if (propsDef[name]) {\r\n            name = propsDef[name].name;\r\n        }\r\n        this.props[name] = newValue;\r\n    }\r\n\r\n    connectedCallback() {\r\n        const state = getState(this);\r\n\r\n        if (state.destroyQueued) {\r\n            clearTimeout(state.destroyQueued);\r\n            state.destroyQueued = null;\r\n        }\r\n\r\n        if (!supportsNativeShadowDom()) {\r\n            styleComponentInstanceElement(this);\r\n        }\r\n\r\n        state.isMounted = true;\r\n        this.didMount();\r\n        this.update();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        // Delay calling .destroy() by 60s, just in case user re-attaches component back to dom.\r\n        // This seems to be currently the only way to ensure attached `onDestroy` logic run when\r\n        // the element is no longer needed.\r\n        if (PRIVATE.has(this)) {\r\n            const state = getState(this);\r\n            if (!state.destroyQueued) {\r\n                state.destroyQueued = setTimeout(this.destroy.bind(this), this.constructor.delayDestroy);\r\n            }\r\n            state.isMounted = false;\r\n        }\r\n\r\n        this.didUnmount();\r\n    }\r\n}\r\n\r\n\r\nfunction setupComponent (component) {\r\n    const { useShadow, shadowMode } = component.constructor;\r\n    if (useShadow && SHADOW_DOM_SUPPORTED) {\r\n        if (component.shadowRoot) {\r\n            component._$ui = component.shadowRoot;\r\n        }\r\n        else {\r\n            component._$ui = component.attachShadow({ mode: shadowMode });\r\n        }\r\n    }\r\n    else {\r\n        component._$ui = component;\r\n    }\r\n\r\n    component.onPropsChange(component.update);\r\n    component.didInit();\r\n}\r\n\r\n//=======================================================================================\r\n//                                                               MODULE EXPORTS\r\n//=======================================================================================\r\nexport default ComponentElement;\r\nexport { ComponentElement }\r\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import objectExtend from \"@purtuga/common/src/jsutils/objectExtend\"\r\nimport {defineProperty, removeAttribute, setAttribute } from \"@purtuga/common/src/jsutils/runtime-aliases\"\r\nimport {throwIfThisIsPrototype} from \"@purtuga/common/src/jsutils/throwIfThisIsPrototype\"\r\nimport {getKebabCase, elementHasAttributeForProp} from \"../utils\"\r\n\r\n//===============================================================================\r\nconst RE_UPPER_CASE_LETTERS = /[A-Z]/;\r\nconst NOOP = val => val;\r\n\r\n/**\r\n * Create a ComponentElement property.\r\n *\r\n * @param {Object|ComponentElement~PropDefinition} [options|Descriptor]\r\n *\r\n * @returns {Function|Descriptor}\r\n */\r\nexport function prop(options = {}) {\r\n    if (options.key && options.kind) {\r\n        return _propDecorator({}, options);\r\n    }\r\n    return _propDecorator.bind(null, options);\r\n}\r\n\r\nfunction _propDecorator(options, {key, initializer, descriptor}) {\r\n    const propDefinition = getPropSetup(\r\n        key,\r\n        initializer || descriptor.get,\r\n        descriptor.set,\r\n        options\r\n    );\r\n    const newDescriptor = getDecoratorDescriptor(key, key, propDefinition);\r\n\r\n    // Setup the aliases to proxy the values to the same `key`\r\n    if (propDefinition.aliases) {\r\n        newDescriptor.extras = propDefinition\r\n            .aliases\r\n            .filter(aliasName => aliasName !== key) // Skip the Key name, which is also in the list of aliases\r\n            .map(aliasName => getDecoratorDescriptor(aliasName, key));\r\n    }\r\n\r\n    return newDescriptor;\r\n\r\n    //--------------------------------------------------------------------\r\n    // typical Descriptor, for something done like:\r\n    //          @prop myTest = \"value here\"\r\n    //  {\r\n    //     \"kind\": \"field\",\r\n    //     \"key\": \"myTest\",\r\n    //     \"placement\": \"field\",\r\n    //     \"initializer\": function(){ return \"value here\"; },\r\n    //     \"descriptor\": {\r\n    //         \"configurable\": true,\r\n    //         \"writable\": true,\r\n    //         \"enumerable\": true\r\n    //     }\r\n    // }\r\n    //--------------------------------------------------------------------\r\n}\r\n\r\nfunction getDecoratorDescriptor(key, proxyToPropName, componentPropDefinition) {\r\n    const DecoratorDescriptor = {\r\n        key,\r\n        kind: \"method\",\r\n        placement: \"prototype\",\r\n        descriptor: {\r\n            configurable: true,\r\n            get() {\r\n                throwIfThisIsPrototype(this);\r\n                return this.props[proxyToPropName];\r\n            },\r\n            set(newValue) {\r\n                throwIfThisIsPrototype(this);\r\n                return this.props[proxyToPropName] = newValue;\r\n            }\r\n        }\r\n    };\r\n\r\n    if (componentPropDefinition) {\r\n        DecoratorDescriptor.finisher = function (Klass) {\r\n            // Create Class \"propsDef\" that inherits from super class\r\n            if (!Klass.hasOwnProperty(\"propsDef\")) {\r\n                defineProperty(\r\n                    Klass,\r\n                    \"propsDef\",\r\n                    objectExtend(Object.create(null), Klass.propsDef)\r\n                );\r\n            }\r\n            Klass.propsDef[key] = componentPropDefinition;\r\n        };\r\n    }\r\n\r\n    return DecoratorDescriptor;\r\n}\r\n\r\n\r\n/**\r\n * A property definition\r\n *\r\n * @private\r\n *\r\n * @param name\r\n * @param {Function} initializer\r\n * @param {Function} validator\r\n * @param {Object} propDef\r\n *\r\n * @returns {ComponentElement~PropDefinition}\r\n */\r\nfunction getPropSetup(name, initializer, validator, propDef) {\r\n    /**\r\n     * A Class prop definition\r\n     *\r\n     * @typedef {Object} ComponentElement~PropDefinition\r\n     * @property {String} name              Then name of the prop\r\n     * @property {Boolean} attr             Can the prop be set via an HTML attribute\r\n     * @property {Boolean} required         Is the prop required\r\n     * @property {Boolean} boolean          Is the prop value meant to be a boolean (note: also forces `attr` to true)\r\n     * @property {Function} default         Function that returns default value (the `getter` when decorator is used)\r\n     * @property {Function} filter          Function that filters the value being set (the `setter` when decorator is used)\r\n     * @property {Array<String>} aliases    An array of aliases for the prop, including the prop name itself\r\n     */\r\n    const propertyDefinition = objectExtend(\r\n        {\r\n            name,\r\n            attr: false,\r\n            required: false,\r\n            boolean: false,\r\n            default: initializer || NOOP,\r\n            filter: validator || NOOP,\r\n            aliases: [ name ]\r\n            // _isAlias: --- used in getPropsDefinition()\r\n        },\r\n        propDef\r\n    );\r\n\r\n    // If this is a boolean, then force `attr` to `true`, and\r\n    // redefine default adn filter values\r\n    if (propertyDefinition.boolean) {\r\n        propertyDefinition.attr = true;\r\n        propertyDefinition.default = propertyDefinition.filter = function (newValue) {\r\n            const realHtmlPropValue = elementHasAttributeForProp(this, propertyDefinition);\r\n\r\n            // If called with a Boolean, then it must have been set via a instance prop,\r\n            // and thus its value takes precedence over HTML property. In this case, we\r\n            // reflect the value to the HTML prop - because in most cases, styles are\r\n            // driven boolean attributes\r\n            if (\"boolean\" === typeof newValue) {\r\n                if (realHtmlPropValue !== newValue) {\r\n                    if (newValue) {\r\n                        setAttribute(this, name, newValue);\r\n                    } else {\r\n                        removeAttribute(this, name);\r\n                    }\r\n                }\r\n                return newValue;\r\n            }\r\n\r\n            return realHtmlPropValue;\r\n        }\r\n    }\r\n\r\n    // Add name lowercase alias - if applicable\r\n    if (name.toLowerCase() !== name) {\r\n        propertyDefinition.aliases.push(name.toLowerCase());\r\n    }\r\n\r\n    // If the prop name has upper case letters, then its possible that it is\r\n    // defined as camelCase - create ka-bab alias.\r\n    if (RE_UPPER_CASE_LETTERS.test(name)) {\r\n        propertyDefinition.aliases.push(getKebabCase(name));\r\n    }\r\n\r\n    return propertyDefinition;\r\n}\r\n","import {defineProperty} from \"@purtuga/common/src/jsutils/runtime-aliases\";\r\nimport {throwIfThisIsPrototype} from \"@purtuga/common/src/jsutils/throwIfThisIsPrototype.js\"\r\n/**\r\n * Binds the given method to the Class instance on first `get`.\r\n *\r\n * @return {Function|Object}\r\n */\r\nexport function bind(options) {\r\n    if (options.key && options.kind) {\r\n        return _bound(options);\r\n    }\r\n    return _bound;\r\n}\r\n\r\nfunction _bound(decoratorDescriptor) {\r\n    const {kind, key, descriptor} = decoratorDescriptor;\r\n    if (kind === \"method\" && descriptor.value) {\r\n        let isDoingLazySetup = false; // Fuck you IE!\r\n        const method = descriptor.value;\r\n\r\n        delete descriptor.value;\r\n        delete descriptor.writable;\r\n\r\n        descriptor.get = function () {\r\n            throwIfThisIsPrototype(this);\r\n\r\n            if (isDoingLazySetup) {\r\n                return;\r\n            }\r\n            isDoingLazySetup = true;\r\n\r\n            const boundMethod = method.bind(this);\r\n            defineProperty(this, key, boundMethod);\r\n            isDoingLazySetup = false;\r\n\r\n            return boundMethod;\r\n        }\r\n    }\r\n\r\n    return decoratorDescriptor;\r\n\r\n    // {\r\n    //     \"kind\": \"method\",\r\n    //     \"key\": \"private\",\r\n    //     \"placement\": \"prototype\",\r\n    //     \"descriptor\": {\r\n    //         \"writable\": true,\r\n    //         \"configurable\": true,\r\n    //         \"enumerable\": false,\r\n    //         \"value\": function(){}\r\n    //     }\r\n    // }\r\n}\r\n","import objectExtend from \"../jsutils/objectExtend\"\r\n\r\nconst WINDOW        = window;\r\nconst DOCUMENT      = WINDOW.document;\r\nconst SCROLL_TOP    = \"scrollTop\";\r\nconst SCROLL_LEFT   = \"scrollLeft\";\r\nconst PAGE_Y_OFFSET = \"pageYOffset\";\r\nconst PAGE_X_OFFSET = \"pageXOffset\";\r\nconst UNDEFINED     = \"undefined\";\r\nconst PX            = \"px\";\r\n\r\n//const isTop     = /top/i;\r\n//const isBottom  = /bottom/i;\r\nconst isLeft    = /left/i;\r\n//const isRight   = /right/i;\r\n\r\n\r\n/**\r\n * Positions an element against another. Elements (both `positionEle` and\r\n * `anchorEle` should already be visible in dom (ex. call this method right\r\n * after adding them to DOM).\r\n *\r\n * @function domPosition\r\n *\r\n * @param {HTMLElement} positionEle\r\n *\r\n * @param {HTMLElement} anchorEle\r\n *\r\n * @param {Object} [options]\r\n *\r\n * @param {String} [options.my]\r\n *  Which area of the `positionEle` should be used to position it against the\r\n *  `anchorEle`. Default is `top left`. Possible values:\r\n *  -   `top left`\r\n *  -   `top right`\r\n *\r\n * @param {String} [options.at]\r\n *  The `anchorEle` position where the `positionEle` should be displayed. Default\r\n *  is `bottom left` (so right below the `anchorEle`, left aligned).\r\n *\r\n * @param {HTMLElement} [options.viewport=window]\r\n *  The viewport to be used in detecting collision. (NOTE: currently,\r\n *  only window is supported)\r\n *\r\n */\r\nexport function domPosition(positionEle, anchorEle, options){\r\n    var positionEleStyles   = positionEle.style;\r\n    var anchorEleRect       = anchorEle.getBoundingClientRect();\r\n    var positionEleRect     = positionEle.getBoundingClientRect();\r\n    var opt                 = objectExtend({\r\n        my:         \"top left\",\r\n        at:         \"bottom left\",\r\n        viewport:   WINDOW\r\n    }, options);\r\n    var { scrollTop, scrollLeft } = getViewportScrollInfo(opt.viewport); // FIXME: support for non-window viewport\r\n\r\n    // FIXME: support for non window viewport\r\n    // var viewportTop     = 0;\r\n    var viewportBottom  = opt.viewport.innerHeight;\r\n    var viewportRight   = opt.viewport.innerWidth;\r\n\r\n    var isMyLeft    = isLeft.test(opt.my);\r\n    var isMyRight   = !isMyLeft;\r\n    var isAtLeft    = isLeft.test(opt.at);\r\n    var isAtRight   = !isAtLeft;\r\n\r\n    // Set default coordinates based o above position defaults\r\n    var posLeft = anchorEleRect.left;\r\n    var posTop  = anchorEleRect.bottom + scrollTop;\r\n\r\n    //------------------------------------------\r\n    // CALCULATE: TOP\r\n    // Top side of position ele\r\n    //------------------------------------------\r\n\r\n    // FIXME: support for \"my\" === bottom as well as \"at\" top\r\n\r\n\r\n    //------------------------------------------\r\n    // CALCULATE: LEFT\r\n    // Left side of the position el\r\n    //------------------------------------------\r\n    // my === left  &&  at === right\r\n    if (isMyLeft && isAtRight) {\r\n        posLeft = anchorEleRect.right;\r\n\r\n    // my === left  &&  at === right\r\n    } else if (isMyRight && isAtRight) {\r\n        posLeft = anchorEleRect.right - positionEleRect.width;\r\n\r\n    // my === right  &&  at === left\r\n    } else if (isMyRight && isAtLeft) {\r\n        posLeft = anchorEleRect.left - positionEleRect.width;\r\n    }\r\n\r\n    //------------------------------------------------------\r\n    // Adjust positions based on viewport collisions\r\n    //------------------------------------------------------\r\n\r\n    //--- LEFT --\\\\\r\n    // If the Right side of the position element goes beyound\r\n    // the right side of the viewport, flip the horizontal position...\r\n    if ((posLeft + positionEleRect.width) > (viewportRight + scrollLeft)) {\r\n        posLeft -= positionEleRect.width;\r\n    }\r\n\r\n    //--- TOP --\\\\\r\n    // If it the position of the element goes beyond the bottom of\r\n    // the viewport, flip it up...\r\n    if ((posTop + positionEleRect.height) > (viewportBottom + scrollTop)) {\r\n        posTop -= (positionEleRect.height + anchorEleRect.height);\r\n    }\r\n\r\n    positionEleStyles.left = posLeft + PX;\r\n    positionEleStyles.top  = posTop + PX;\r\n}\r\n\r\nexport default domPosition;\r\n\r\n\r\n/**\r\n * returns the `scrollTop` and `scrollLeft` for a given element\r\n *\r\n * @param {HTMLElement|Window|Document} viewport\r\n * @returns {Object}\r\n *\r\n * @example\r\n *\r\n * // return object:\r\n *\r\n * {\r\n *      scrollTop:      222,\r\n *      scrollLeft:     11\r\n * }\r\n *\r\n */\r\nfunction getViewportScrollInfo(viewport) {\r\n    let response = {};\r\n\r\n    if (viewport === WINDOW || viewport === DOCUMENT){\r\n        if (typeof WINDOW[PAGE_Y_OFFSET] !== UNDEFINED){\r\n            response[SCROLL_TOP]    = WINDOW[PAGE_Y_OFFSET];\r\n            response[SCROLL_LEFT]   = WINDOW[PAGE_X_OFFSET];\r\n\r\n        } else if (DOCUMENT.documentElement) {\r\n            response[SCROLL_TOP]    = DOCUMENT.documentElement[SCROLL_TOP];\r\n            response[SCROLL_LEFT]   = DOCUMENT.documentElement[SCROLL_LEFT];\r\n\r\n        } else {\r\n            response[SCROLL_TOP]    = DOCUMENT.body[SCROLL_TOP];\r\n            response[SCROLL_LEFT]   = DOCUMENT.body[SCROLL_LEFT];\r\n        }\r\n    } else {\r\n        response[SCROLL_TOP]    = viewport[SCROLL_TOP];\r\n        response[SCROLL_LEFT]   = viewport[SCROLL_LEFT];\r\n    }\r\n\r\n    return response;\r\n}\r\n","import {ComponentElement, prop, bind} from \"@purtuga/component-element/src/index.js\"\r\nimport domPosition from \"@purtuga/common/src/domutils/domPosition.js\";\r\nimport domAddEventListener from \"@purtuga/common/src/domutils/domAddEventListener.js\";\r\n\r\n//=====================================================================================\r\nconst removeBodyEvent = eleInst => {\r\n    if (eleInst._docEv && eleInst._docEv.remove) {\r\n        eleInst._docEv.remove();\r\n    }\r\n    eleInst._docEv = null;\r\n};\r\n\r\n\r\n// FIXME: Support for `show` and `hide` events\r\n\r\n\r\n/**\r\n * A popup widget that will be displayed and position relative to a another element\r\n *\r\n * ### Styling\r\n * The following variables are used for styling:\r\n *\r\n *      --theme-box-shadow\r\n *      --theme-color-bg    (background)\r\n *      --theme-color-fg    (forground color for text)\r\n *      --theme-spacing-2   (all round padding)\r\n *      --theme-color-1     (scrollbar background)\r\n *      --theme-color-6     (scrollbar thumb)\r\n *\r\n * @example\r\n *\r\n * const popup = document.createElement(\"pop-up\");\r\n * popup.innerHTML = `<h1>Hello</h1>`;\r\n * popup.for = document.querySelector(\"a#show\");\r\n * document.body.appendChild(popup);\r\n * popup.show = true;\r\n */\r\nexport class Popup extends ComponentElement {\r\n    //-------------------------------------------------------------\r\n    //\r\n    //                                              STATIC MEMBERS\r\n    //\r\n    //-------------------------------------------------------------\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ STATIC PROPERTIES ~~~~~\r\n    static tagName = \"pop-up\";\r\n\r\n    // static get delayDestroy() {}\r\n    // static get useShadow() {}\r\n    // static get shadowMode() {}\r\n    // static getEventInitOptions(){}\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ STATIC METHODS ~~~~~\r\n\r\n    // static define(name) {}\r\n\r\n\r\n    //-------------------------------------------------------------\r\n    //\r\n    //                                            INSTANCE MEMBERS\r\n    //\r\n    //-------------------------------------------------------------\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  PROPS AND ATTRIBUTES  ~~~~\r\n\r\n    /**\r\n     * The element that the popup is for. Could be a css selector (String)\r\n     * or a HTML Element.\r\n     * @property\r\n     * @type {String|HTMLElement}\r\n     */\r\n    @prop({attr: true})\r\n    set for(value) {\r\n        if (value && \"string\" === typeof value) {\r\n            return document.querySelector(value);\r\n        }\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * When set to `true`, popup will be made visible.\r\n     *\r\n     * @property {Boolean} show\r\n     */\r\n    @prop({boolean: true})\r\n    get show() { return false; }\r\n\r\n\r\n    /**\r\n     * If Popup should be auto closed when user clicks outside of its content.\r\n     *\r\n     * @property {Boolean} autoClose\r\n     */\r\n    @prop({boolean: true})\r\n    get autoClose() { return false; }\r\n\r\n\r\n    /**\r\n     * The edge of the popup that should be used when position it next to the\r\n     * `for` element. Default is `top left`.\r\n     * See `@purtuga/common/src/domUtils/domPosition` for other possible values\r\n     *\r\n     * @property {string} my\r\n     */\r\n    @prop({attr: true})\r\n    get my() { return \"top left\"; }\r\n\r\n\r\n    /**\r\n     * The edge of the `for` element that will be used to position the popup against.\r\n     * Default is `bottom left`.\r\n     * See `@purtuga/common/src/domUtils/domPosition` for other possible values\r\n     *\r\n     * @property {string} at\r\n     */\r\n    @prop({attr: true})\r\n    get at() { return \"bottom left\"; }\r\n\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  LIFE CYCLE HOOKS  ~~~~~\r\n    // Called from constructor\r\n    didInit() {\r\n        this._docEv = null;\r\n        this.onPropsChange(this.position, \"at\");\r\n        this.onPropsChange(this.position, \"my\");\r\n        this.onPropsChange(this._handleShowProp);\r\n    }\r\n\r\n    willRender() {\r\n        return !this._renderDone;\r\n    }\r\n\r\n    render() {\r\n        this._renderDone = true;\r\n\r\n        return `\r\n<style>\r\n:host {\r\n    box-sizing: border-box;\r\n    position: absolute;\r\n    min-height: 2em;\r\n    width: 15em;\r\n    max-height: 15em;\r\n    z-index: 5000;\r\n    overflow: auto;\r\n    display: none;\r\n\r\n    border: var(--theme-border, 1px solid);\r\n    border-color: var(--theme-color-1, #ECECEC);\r\n\r\n    box-shadow: var(--theme-box-shadow, \r\n        0 8px 10px 1px rgba(0,0,0,0.14),\r\n        0 3px 14px 2px rgba(0,0,0,0.12),\r\n        0 5px 5px -3px rgba(0,0,0,0.2));\r\n\r\n    background-color: white;\r\n    background-color: var(--theme-color-bg, white);\r\n\r\n    color: black;\r\n    color: var(--theme-color-fg, black);\r\n\r\n    padding: 0.5em;\r\n    padding: var(--theme-spacing-2, 0.5em);\r\n}\r\n:host::-webkit-scrollbar {\r\n    width:              0.5em;\r\n    background-color:   var(--theme-color-1, #F5F5F5);\r\n}\r\n:host::-webkit-scrollbar-thumb {\r\n    -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,.3);\r\n    background-color  : var(--theme-color-6, #555);\r\n}\r\n:host([show]) {\r\n    display: block;\r\n}\r\n</style>\r\n<div><slot></slot></div>`;\r\n    }\r\n\r\n    didRender() {\r\n        this._handleShowProp();\r\n    }\r\n\r\n    didUnmount() {\r\n        removeBodyEvent(this);\r\n    }\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    @bind\r\n    _handleShowProp(){\r\n        if (this.for && this.show) {\r\n            this.position();\r\n\r\n            // Auto close? then setup body event\r\n            if (this.autoClose && !this._docEv) {\r\n                this._docEv = true;\r\n                setTimeout(() => {\r\n                    this._docEv = domAddEventListener(document, \"click\", ev => {\r\n                        if (!this.contains(ev.target)) {\r\n                            // FIXME: support onHide callback? maybe event?\r\n\r\n                            removeBodyEvent(this);\r\n                            this.show = false;\r\n                        }\r\n                    });\r\n                }, 200);\r\n            }\r\n        }\r\n        else {\r\n            removeBodyEvent(this);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Positions the popup against the current `for` element.\r\n     */\r\n    @bind\r\n    position() {\r\n        if (this.for && this.show) {\r\n            const options = {}; // FIXME: move this to a computed prop\r\n            if (this.my) {\r\n                options.my = this.my\r\n            }\r\n            if (this.at) {\r\n                options.at = this.at;\r\n            }\r\n            domPosition(this, this.for, options);\r\n        }\r\n    }\r\n}\r\n\r\nexport default Popup;\r\n","/**\r\n * Shortcut/Functional alias to `Node.insertBefore` method.\r\n *\r\n * @param {Node|DocumentFragment} newNode\r\n * @param {Node} referenceNode\r\n *\r\n * @returns {Node|DocumentFragment}\r\n */\r\nexport function domInsertBefore(newNode, referenceNode) {\r\n    if (referenceNode && referenceNode.parentNode && referenceNode.parentNode.insertBefore) {\r\n        referenceNode.parentNode.insertBefore(newNode, referenceNode);\r\n    }\r\n    return newNode;\r\n}\r\nexport default domInsertBefore;\r\n\r\n","import {ComponentElement, STATE_SYMBOL, prop, bind} from \"@purtuga/component-element/src/index.js\"\r\nimport {domAddEventListener} from \"@purtuga/common/src/domutils/domAddEventListener.js\"\r\nimport {domInsertBefore} from \"@purtuga/common/src/domutils/domInsertBefore.js\"\r\n\r\n\r\n//=========================================================================\r\nconst INTERCEPTOR_TOP_1 = \"topTabInterceptor1\";\r\nconst INTERCEPTOR_TOP_2 = \"topTabInterceptor2\";\r\n\r\nconst INTERCEPTOR_BOTTOM_1 = \"bottomTabInterceptor1\";\r\nconst INTERCEPTOR_BOTTOM_2 = \"bottomTabInterceptor2\";\r\n\r\nconst INTERCEPTOR_LIST = [\r\n    INTERCEPTOR_TOP_1,\r\n    INTERCEPTOR_TOP_2,\r\n    INTERCEPTOR_BOTTOM_2,\r\n    INTERCEPTOR_BOTTOM_1\r\n];\r\n\r\nconst INTERCEPTOR_STYLES = \"outline: none !important;display:block !important;height:1px !important;width:1px !important;color:transparent !important;position:absolute !important;left:-9999999px !important;top:-99999999px !important;z-index:-1 !important;\";\r\n\r\n/**\r\n * Custom Element that, when visible, makes its self as large as its parent content\r\n * (driven by the first positioned element) and prevents access to any element that\r\n * is a child of the same parent to this element.\r\n *\r\n * @extends ComponentElement\r\n *\r\n * @example\r\n *\r\n *      <content-access block on-parent></content-access>\r\n */\r\nexport class ContentAccess extends ComponentElement {\r\n    //-------------------------------------------------------------\r\n    //\r\n    //                                              STATIC MEMBERS\r\n    //\r\n    //-------------------------------------------------------------\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ STATIC PROPERTIES ~~~~~\r\n    static tagName = \"content-access\";\r\n\r\n    // static get delayDestroy() {}\r\n    // static get useShadow() {}\r\n    // static get shadowMode() {}\r\n    // static getEventInitOptions(){}\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ STATIC METHODS ~~~~~\r\n\r\n    // static define(name) {}\r\n\r\n\r\n    //-------------------------------------------------------------\r\n    //\r\n    //                                            INSTANCE MEMBERS\r\n    //\r\n    //-------------------------------------------------------------\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  PROPS AND ATTRIBUTES  ~~~~\r\n\r\n    /**\r\n     * Attribute that when present on the element, will make this\r\n     * element visible and content around it (same parent) non-accessible\r\n     *\r\n     * @property\r\n     * @type Boolean\r\n     */\r\n    @prop({attr: true, boolean: true})\r\n    get block() { return false; }\r\n\r\n\r\n    /**\r\n     * When attribute present on element, then the behaviour of this component\r\n     * changes to making it `position:absolute` and to fill the parent's space.\r\n     * The tab control is applied to all content of the parent element.\r\n     * Also: Any content (elements) placed inside of the `content-access` will\r\n     * be visible and accessible to the user - similar to how modal dialogs work.\r\n     *\r\n     * @property\r\n     * @type Boolean\r\n     */\r\n    @prop({attr: true, boolean: true})\r\n    get onParent() { return false; }\r\n\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  LIFE CYCLE HOOKS  ~~~~~\r\n    // Called from constructor\r\n    didInit() {\r\n        this[STATE_SYMBOL] = {\r\n            [INTERCEPTOR_TOP_1]: null,\r\n            [INTERCEPTOR_TOP_2]: null,\r\n            [INTERCEPTOR_BOTTOM_1]: null,\r\n            [INTERCEPTOR_BOTTOM_2]: null,\r\n            isRefocusing: false\r\n        };\r\n        this.onPropsChange(this._handleBlock, \"block\");\r\n        this.onPropsChange(this._handleBlock, \"onParent\");\r\n        domAddEventListener(this, \"click\", this);\r\n    }\r\n\r\n\r\n    // called when element is attached to dom\r\n    didMount() {\r\n        this._handleBlock();\r\n    }\r\n\r\n    willRender() {\r\n        return !this._renderDone;\r\n    }\r\n\r\n    render() {\r\n        this._renderDone = true;\r\n\r\n        return `\r\n<style>\r\n    :host {\r\n        display: inline-block;\r\n        box-sizing: border-box;\r\n    }\r\n    :host([on-parent]) {\r\n        display: none;\r\n    }\r\n    :host([on-parent]) .content {\r\n        position:relative;\r\n        z-index: 1;\r\n        max-height: 100%;\r\n        max-width: 100%;\r\n        overflow: auto;\r\n    }\r\n    :host([on-parent]),\r\n    .modal {\r\n        position: absolute;\r\n        box-sizing: border-box;\r\n        top: 0;\r\n        left: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n        bottom: 0;\r\n        right: 0;\r\n    }\r\n    .modal {\r\n        background: lightgrey;\r\n        background: var(--theme-color-1, lightgrey);\r\n        opacity: 0.6;\r\n    }\r\n    :host([block][on-parent]) {\r\n        display: block;\r\n    }\r\n    /*:host([on-parent]) .modal,*/\r\n    :host(:not([on-parent]):not([block])) .modal {\r\n        display: none;\r\n    }\r\n    :host([block]:not([on-parent])) {\r\n        position: relative;\r\n    }\r\n</style>\r\n<div class=\"content\">\r\n    <slot></slot>\r\n</div>\r\n<div class=\"modal\"></div>\r\n`;\r\n    }\r\n\r\n    didDestroy() {\r\n        removeTabInterceptors(this);\r\n    }\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    @bind\r\n    _handleBlock() {\r\n        if (this.block) {\r\n            insertTabInterceptors(this);\r\n        } else {\r\n            removeTabInterceptors(this);\r\n        }\r\n    }\r\n\r\n    handleEvent(ev) {\r\n        if (this.block && ev.type === \"focus\" && ev.target._role && !this[STATE_SYMBOL].isRefocusing) {\r\n            this[STATE_SYMBOL].isRefocusing = true;\r\n            switch (ev.target._role) {\r\n                // Focusing from the top: send focus to bottom\r\n                case INTERCEPTOR_TOP_1:\r\n                case INTERCEPTOR_TOP_2:\r\n                    this[STATE_SYMBOL][INTERCEPTOR_BOTTOM_1].focus();\r\n                    break;\r\n\r\n                // Focusing from the bottom: send focus to top\r\n                case INTERCEPTOR_BOTTOM_1:\r\n                case INTERCEPTOR_BOTTOM_2:\r\n                    this[STATE_SYMBOL][INTERCEPTOR_TOP_1].focus();\r\n                    break;\r\n            }\r\n            this[STATE_SYMBOL].isRefocusing = false;\r\n\r\n        } else if (ev.type === \"click\" && this.block && !this.onParent) {\r\n            this[STATE_SYMBOL][INTERCEPTOR_BOTTOM_1].focus();\r\n        }\r\n    }\r\n}\r\n\r\nfunction insertTabInterceptors (inst) {\r\n    if (inst.parentNode) {\r\n        if (!inst[STATE_SYMBOL][INTERCEPTOR_TOP_1]) {\r\n            createTabInterceptorElements(inst);\r\n        }\r\n\r\n        if (inst.onParent) {\r\n            domInsertBefore(inst[STATE_SYMBOL][INTERCEPTOR_TOP_2], inst.parentNode.firstChild);\r\n            domInsertBefore(inst[STATE_SYMBOL][INTERCEPTOR_TOP_1], inst.parentNode.firstChild);\r\n\r\n            inst.parentNode.appendChild(inst[STATE_SYMBOL][INTERCEPTOR_BOTTOM_2]);\r\n            inst.parentNode.appendChild(inst[STATE_SYMBOL][INTERCEPTOR_BOTTOM_1]);\r\n        }\r\n        else {\r\n            domInsertBefore(inst[STATE_SYMBOL][INTERCEPTOR_TOP_1], inst);\r\n            domInsertBefore(inst[STATE_SYMBOL][INTERCEPTOR_TOP_2], inst);\r\n\r\n            if (inst.nextSibling) {\r\n                domInsertBefore(inst[STATE_SYMBOL][INTERCEPTOR_BOTTOM_1], inst.nextSibling);\r\n                domInsertBefore(inst[STATE_SYMBOL][INTERCEPTOR_BOTTOM_2], inst.nextSibling);\r\n\r\n            } else {\r\n                inst.parentNode.appendChild(inst[STATE_SYMBOL][INTERCEPTOR_BOTTOM_2]);\r\n                inst.parentNode.appendChild(inst[STATE_SYMBOL][INTERCEPTOR_BOTTOM_1]);\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n\r\nfunction removeTabInterceptors(inst) {\r\n    if (inst[STATE_SYMBOL][INTERCEPTOR_TOP_1]) {\r\n        INTERCEPTOR_LIST.forEach(interceptorEle => inst[STATE_SYMBOL][interceptorEle].parentNode && inst[STATE_SYMBOL][interceptorEle].parentNode.removeChild(inst[STATE_SYMBOL][interceptorEle]));\r\n    }\r\n}\r\n\r\nfunction createTabInterceptorElements(inst) {\r\n    if (!inst[STATE_SYMBOL][INTERCEPTOR_TOP_1]) {\r\n        INTERCEPTOR_LIST.forEach(name => {\r\n            inst[STATE_SYMBOL][name] = document.createElement(\"a\");\r\n            inst[STATE_SYMBOL][name].innerText = \"-\";\r\n            inst[STATE_SYMBOL][name]._role = name;\r\n            inst[STATE_SYMBOL][name].setAttribute(\"_role\", name);\r\n            inst[STATE_SYMBOL][name].setAttribute(\"tabindex\", \"0\");\r\n            inst[STATE_SYMBOL][name].setAttribute(\"style\", INTERCEPTOR_STYLES);\r\n            domAddEventListener(inst[STATE_SYMBOL][name], \"focus\", inst);\r\n        });\r\n    }\r\n}\r\n\r\nexport default ContentAccess;\r\n","import {\r\n    ComponentElement,\r\n    prop,\r\n    bind\r\n} from \"@purtuga/component-element/src/index.js\"\r\nimport {\r\n    appendChild,\r\n    createElement,\r\n    createTextNode,\r\n    setAttribute,\r\n    doc\r\n} from \"@purtuga/common/src/jsutils/runtime-aliases.js\";\r\n\r\n//=============================================================\r\nconst SOURCE_SETUP = Symbol(\"SOURCE_SETUP\");\r\nconst SOURCE_STYLES = Symbol(\"SOURCE_STYLES\");\r\nconst STATE = Symbol(\"STATE\");\r\nconst SOURCES = {};\r\nconst CACHE = Object.create(null);\r\n\r\n// Aliases\r\nconst fromCharCode = String.fromCharCode;\r\n\r\n/**\r\n * Display icons from various sources.\r\n *\r\n * Usage:\r\n *\r\n * ```html\r\n * <i-con\r\n *      from=\"source-name\"\r\n *      name=\"icon-name\"\r\n *      size=\"xs|sm|md|lg\"\r\n *  ></i-con>\r\n * ```\r\n *\r\n * __Supported CSS Variables__\r\n *\r\n * -    `--icon-size`: set custom icon size\r\n *\r\n * @extends ComponentElement\r\n */\r\nexport class Icon extends ComponentElement {\r\n    //-------------------------------------------------------------\r\n    //\r\n    //                                              STATIC MEMBERS\r\n    //\r\n    //-------------------------------------------------------------\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ STATIC PROPERTIES ~~~~~\r\n    static tagName = \"i-con\";\r\n\r\n    /**\r\n     * An array of icons sources. Object key is the value that should be used in\r\n     * the `from` attribute.\r\n     *\r\n     * @returns {Object<String, IconSource>}\r\n     */\r\n    static sources = SOURCES;\r\n\r\n    // static get delayDestroy() {}\r\n    // static get useShadow() {}\r\n    // static get shadowMode() {}\r\n    // static getEventInitOptions(){}\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ STATIC METHODS ~~~~~\r\n\r\n    // static define(name) {}\r\n\r\n    /**\r\n     * Fetches a given svg Icon from the given url, unless its already cached,\r\n     * in which case, the cached value is returned\r\n     *\r\n     * @param {String} iconUrl\r\n     * @returns {Promise<String, Error>}\r\n     */\r\n    static fetchSvg(iconUrl) {\r\n        if (!CACHE[iconUrl]) {\r\n            CACHE[iconUrl] = new Promise((resolve, reject) => {\r\n                const request = new XMLHttpRequest();\r\n                request.addEventListener('load', function () {\r\n                    if (this.status < 200 || this.status >= 300) {\r\n                        reject(new Error(`${this.status} ${this.responseText}`));\r\n                        return;\r\n                    }\r\n                    resolve(this.responseText);\r\n                });\r\n                request.onerror = reject;\r\n                request.onabort = reject;\r\n                request.open(\"GET\", iconUrl);\r\n                request.send();\r\n            });\r\n        }\r\n\r\n        return CACHE[iconUrl];\r\n    }\r\n\r\n    /**\r\n     * Sets up a Font for use in Font icons.\r\n     *\r\n     * @param {String} fontFaceCss\r\n     *  The css `@font-face` definition.\r\n     */\r\n    static setupFont(fontFaceCss) {\r\n        doc.head.appendChild(getStyleEle(fontFaceCss));\r\n    }\r\n\r\n    /**\r\n     * Given an HEX Unicode codepoint, returns UTF16 surrogate pairs.\r\n     *\r\n     * @param   string  generic codepoint, i.e. '1F4A9'\r\n     * @return  string  codepoint transformed into utf16 surrogates pair,\r\n     *          i.e. \\uD83D\\uDCA9\r\n     *\r\n     * @link https://unpkg.com/twemoji@11.2.0/2/twemoji.js\r\n     *\r\n     * @example\r\n     *  twemoji.convert.fromCodePoint('1f1e8');\r\n     *  // \"\\ud83c\\udde8\"\r\n     *\r\n     *  '1f1e8-1f1f3'.split('-').map(twemoji.convert.fromCodePoint).join('')\r\n     *  // \"\\ud83c\\udde8\\ud83c\\uddf3\"\r\n     */\r\n    static fromCodePoint(codepoint) {\r\n        // From: https://unpkg.com/twemoji@11.2.0/2/twemoji.js\r\n        //       But changed to string up `U+` if its present in the given value\r\n\r\n        // TODO: should we momoize?\r\n        var code = typeof codepoint === 'string' ?\r\n            parseInt(codepoint.replace(/U\\+/i, \"\"), 16) : codepoint;\r\n        if (code < 0x10000) {\r\n            return fromCharCode(code);\r\n        }\r\n        code -= 0x10000;\r\n        return fromCharCode(\r\n            0xD800 + (code >> 10),\r\n            0xDC00 + (code & 0x3FF)\r\n        );\r\n    }\r\n\r\n    //-------------------------------------------------------------\r\n    //\r\n    //                                            INSTANCE MEMBERS\r\n    //\r\n    //-------------------------------------------------------------\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  PROPS AND ATTRIBUTES  ~~~~\r\n\r\n    /**\r\n     * The source from where the icon should be served\r\n     * @type {string}\r\n     */\r\n    @prop({ attr: true })\r\n    from = \"\";\r\n\r\n    /**\r\n     * The icons name. Source should know how ot deal with this value\r\n     * @type {string}\r\n     */\r\n    @prop({ attr: true })\r\n    name = \"\";\r\n\r\n    /**\r\n     * The icon code. Optional approach to defining an icon when using Font based icons.\r\n     * @type {string}\r\n     */\r\n    @prop({ attr: true })\r\n    code = \"\";\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  LIFE CYCLE HOOKS  ~~~~~\r\n\r\n    didInit() {\r\n        if (!this[STATE]) {\r\n            this[STATE] = {\r\n                $icon: null,\r\n                from: null,\r\n                name: null\r\n            };\r\n            this[SOURCE_STYLES] = {};\r\n            this.onPropsChange(this._handlePropChanges);\r\n        }\r\n    }\r\n\r\n    willRender() {\r\n        return !this._renderDone;\r\n    }\r\n\r\n    render() {\r\n        this._renderDone = true;\r\n\r\n        return `\r\n<style>\r\n    :host {\r\n        display: inline-block;\r\n        position: relative;\r\n        box-sizing: border-box;\r\n        contain: content;\r\n        font-size: initial;\r\n        width: 24px;\r\n        height: 24px;\r\n        vertical-align: baseline;\r\n        overflow: hidden;\r\n        \r\n        /* -- var support -- */\r\n        width: var(--icon-size, 24px);\r\n        height: var(--icon-size, 24px);\r\n    }\r\n    \r\n    .i-con-font {\r\n        font-size: 24px;\r\n        font-size: var(--icon-size, 24px);\r\n    }\r\n    \r\n    /* -------------------------------------------\r\n            SIZES\r\n       ------------------------------------------- */\r\n    :host([size=xs]) {\r\n        width: 0.8rem;\r\n        height: 0.8rem;\r\n    }\r\n    :host([size=xs]) .i-con-font {\r\n        font-size: 0.8rem;\r\n    }\r\n    \r\n    :host([size=sm]) {\r\n        width: 1.55rem;\r\n        height: 1.55rem;\r\n    }\r\n    :host([size=sm]) .i-con-font {\r\n        font-size: 1.55rem;\r\n    }\r\n    \r\n    :host([size=md]) {\r\n        width: 2.25rem;\r\n        height: 2.25rem;\r\n    }\r\n    :host([size=md]) .i-con-font {\r\n        font-size: 2.25rem;\r\n    }\r\n    \r\n    :host([size=lg]) {\r\n        width: 3.0rem;\r\n        height: 3.0rem;\r\n    }\r\n    :host([size=lg]) .i-con-font {\r\n        font-size: 3.0rem;\r\n    }\r\n    :host([size=xl]) {\r\n        width: 3.75rem;\r\n        height: 3.75rem;\r\n    }\r\n    :host([size=xl]) .i-con-font {\r\n        font-size: 3.75rem;\r\n    }\r\n    \r\n    .i-con,\r\n    svg {\r\n        width: 100%;\r\n        height: 100%;\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n    }\r\n    .i-con {\r\n        box-sizing: border-box;\r\n    } \r\n</style>\r\n`;\r\n    }\r\n\r\n    didRender() {\r\n        this._handlePropChanges();\r\n    }\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n\r\n    @bind\r\n    _handlePropChanges() {\r\n        const state = this[STATE];\r\n        const props = this.props;\r\n\r\n        // Reset current state\r\n        if (\r\n            props.name !== state.name ||\r\n            props.code !== state.code ||\r\n            props.from !== state.from\r\n        ) {\r\n            // If there is a source currently in use, and that source has a custom stylesheet,\r\n            // then remove it from DOM.\r\n            if (\r\n                state.from &&\r\n                this[SOURCE_STYLES][state.from]\r\n            ) {\r\n                this[SOURCE_STYLES][state.from].remove();\r\n            }\r\n\r\n            state.name = state.from = state.code = state.source = null;\r\n\r\n            if (state.$icon) {\r\n                if (state.$icon.parentNode) {\r\n                    state.$icon.parentNode.removeChild(state.$icon);\r\n                }\r\n                state.$icon = null;\r\n            }\r\n        }\r\n\r\n        if ((props.name || props.code) && props.from) {\r\n            state.name = props.name;\r\n            state.code = props.code;\r\n            state.from = props.from;\r\n\r\n            const iconSource = this.constructor.sources[props.from];\r\n\r\n            if (iconSource) {\r\n                state.source = iconSource;\r\n\r\n                // If this source needs setup, do it now\r\n                if (!iconSource[SOURCE_SETUP]) {\r\n                    iconSource[SOURCE_SETUP] = true;\r\n\r\n                    if (\"doSetup\" in iconSource) {\r\n                        iconSource.doSetup(this.constructor);\r\n                    }\r\n                }\r\n\r\n                // If this source has Styles, then set them up now for this instance\r\n                if (!this[SOURCE_STYLES][state.from] && \"getStyles\" in iconSource) {\r\n                    this[SOURCE_STYLES][state.from] = getStyleEle(iconSource.getStyles());\r\n                }\r\n\r\n                iconSource\r\n                    .getIcon(this.props, this)\r\n                    .then(this._showIconElement);\r\n            }\r\n        }\r\n    }\r\n\r\n    @bind\r\n    _showIconElement(iconEle) {\r\n        if (iconEle && this.props.name === this[STATE].name) {\r\n            // If iconEle is a documentFragment, then use only its first element\r\n            // TODO: maybe in the future support everything in the fagment\r\n            if (iconEle.nodeType === 11) {\r\n                iconEle = iconEle.firstChild;\r\n\r\n                if (!iconEle) {\r\n                    return;\r\n                }\r\n            }\r\n\r\n            this[STATE].$icon = iconEle;\r\n            appendChild(this.$ui, iconEle);\r\n\r\n            // If this source requires some styles to be injected, do it now\r\n            if (this[SOURCE_STYLES][this[STATE].from]) {\r\n                this.$ui.insertBefore(\r\n                    this[SOURCE_STYLES][this[STATE].from],\r\n                    this[STATE].$icon\r\n                );\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nfunction getStyleEle(cssCode, id) {\r\n    const styleEle = createElement(\"style\");\r\n    styleEle.type = \"text/css\";\r\n    appendChild(styleEle, createTextNode(cssCode));\r\n    if (id) {\r\n        setAttribute(styleEle, \"data-id\", id);\r\n    }\r\n    return styleEle;\r\n}\r\n\r\n\r\n/**\r\n * An Icon Source definition\r\n *\r\n * @typedef {Object} IconSource\r\n *\r\n * @property {Function} getIcon\r\n *  Must return a promise that resolves to an Element that represents the icon.\r\n *  This icon, if not an SVG, should have a CSS class name of `i-con`\r\n *\r\n * @property {Function} doSetup\r\n *  Called only once to do global setup. Example: to load font-face for font icons\r\n *\r\n * @property {Function} getStyles\r\n *  Called to get styles for the icon.\r\n */\r\n\r\nexport default Icon;\r\n","import { consoleError, createElement } from \"@purtuga/common/src/jsutils/runtime-aliases.js\"\r\n\r\n//============================================================\r\nconst TEMPLATE = createElement(\"template\");\r\n\r\n/**\r\n * Support for [BoxIcons](https://boxicons.com/)\r\n *\r\n * @type {IconSource}\r\n */\r\nexport const boxicons = {\r\n    cdnUrl: \"//unpkg.com/boxicons@latest/svg\",\r\n    getIcon(props, iconInstance) {\r\n        if (props.name) {\r\n            const iconUrl = `${this.cdnUrl}/regular/bx-${props.name}.svg`;\r\n\r\n            return iconInstance.constructor\r\n                .fetchSvg(iconUrl)\r\n                .then(returnNewElement)\r\n                .catch(handleReject);\r\n        }\r\n        return Promise.reject(new Error(\"boxicon 'name' missing\"));\r\n    }\r\n};\r\n\r\nfunction handleReject(error) {\r\n    consoleError(error);\r\n    return Promise.reject(error);\r\n}\r\n\r\nfunction returnNewElement(svgString) {\r\n    TEMPLATE.innerHTML = svgString;\r\n    return document.importNode(TEMPLATE.content, true).firstChild;\r\n}\r\n","import { createElement, doc } from \"@purtuga/common/src/jsutils/runtime-aliases.js\"\r\n\r\n//===========================================================================\r\nconst OFFICE_ICON_ELEMENT = Symbol(\"OFFICE\");\r\nconst ICON_TEMPLATE = createElement(\"template\");\r\nconst IS_CODEPOINT = /^U\\+/i;\r\nlet fromCodePoint;\r\n\r\nICON_TEMPLATE.innerHTML = `<span class=\"i-con i-con-font ms-Icon\"></span>`;\r\n\r\n/**\r\n * Font support for [Office UI Fabric](https://developer.microsoft.com/en-us/fabric#/styles/icons)\r\n * Icon can be defined by name, using the `iconMap` property below, or by `code` - the Unicode that\r\n * represents the icon. The `code` value can the actual unicode character (the escape sequence -\r\n * ex. `\\uF505`) or the Unicode codepoint (ex. `U+F505`).\r\n *\r\n * @type {IconSource}\r\n *\r\n * @example\r\n *\r\n * // Extend to icon name to code maps\r\n *\r\n * import {officeUiFabric} from \"common-widget-elements/src/Icon/source.office-ui-fabric\"\r\n * import * as iconMap from \"common-widget-elements/src/Icon/source.office-ui-fabric-icon-codes\"\r\n *\r\n * officeUiFabric.iconMap = iconMap;\r\n * officeUiFabric.iconAliases = {\r\n *    \"12PointStar\": iconMap.twelvePointStar,\r\n *    \"6PointStar\": iconMap.sixPointStar\r\n * };\r\n *\r\n * export { officeUiFabric };\r\n */\r\nexport const officeUiFabric = {\r\n    cdnUrl: \"//static2.sharepointonline.com/files/fabric/assets/icons\",\r\n    isIconLoaded: false,\r\n\r\n    /**\r\n     * A map (object) of \"icon name\" to \"icon Unicode code point\" that represents the icon.\r\n     * (NOTE: unicode should be represented as `U+<code>`, not the UTF16 escaped sequence).\r\n     * See `source.office-ui-fabric-icon-codes.js` for a list of code along with names, which\r\n     * can be used set this object.\r\n     *\r\n     * @type {Object}\r\n     */\r\n    iconMap: {},\r\n\r\n    /**\r\n     * A map of \"icon name alias\" to \"Icon unicode\". These names might have had to be\r\n     * changed due to constrains in the icon-codes.js file\r\n     *\r\n     * @type {Object}\r\n     */\r\n    iconAliases: {},\r\n\r\n    doSetup(IconClass) {\r\n        fromCodePoint = IconClass.fromCodePoint;\r\n        IconClass.setupFont(this.getFontFaceCss());\r\n    },\r\n\r\n    getIcon({ code, name }, iconInstance) {\r\n        // Setup the instance\r\n        // Create the Internal element that will be used to display the icon\r\n        if (!iconInstance[OFFICE_ICON_ELEMENT]) {\r\n            iconInstance[OFFICE_ICON_ELEMENT] = doc.importNode(ICON_TEMPLATE.content, true).firstChild;\r\n\r\n        }\r\n        iconInstance[OFFICE_ICON_ELEMENT].textContent = code\r\n            ? IS_CODEPOINT.test(code)\r\n                ? fromCodePoint(code)\r\n                : code\r\n            : fromCodePoint(this.iconMap[name] || this.iconAliases[name]);\r\n        return Promise.resolve(iconInstance[OFFICE_ICON_ELEMENT]);\r\n    },\r\n\r\n    getFontFaceCss() {\r\n        return `\r\n@font-face {\r\n    font-family: FabricMDL2Icons;\r\n    src: url(${this.cdnUrl}/fabricmdl2icons-2.68.woff2) format(\"woff2\"),\r\n         url(${this.cdnUrl}/fabricmdl2icons-2.68.woff) format(\"woff\"),\r\n         url(${this.cdnUrl}/fabricmdl2icons-2.68.ttf) format(\"truetype\");\r\n    font-weight: 400;\r\n    font-style: normal;\r\n}\r\n`;\r\n    },\r\n\r\n    getStyles() {\r\n        return `\r\n${this.getFontFaceCss()}\r\n\r\n.ms-Icon {\r\n    display: inline-block;\r\n    font-family: FabricMDL2Icons;\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    speak: none;\r\n}\r\n`;\r\n    }\r\n};\r\n","import {consoleError, createElement} from \"@purtuga/common/src/jsutils/runtime-aliases.js\";\r\n\r\n//======================================================================\r\nconst TEMPLATE = createElement(\"template\");\r\n\r\n// FIXME: create emoji tables - similar to: https://unicode.org/emoji/charts/full-emoji-list.html\r\n\r\n/**\r\n * Shows Emoji from Twenmoji.\r\n * Get code from https://unicode.org/emoji/charts/full-emoji-list.html\r\n * Images served from unpkg - https://unpkg.com/twemoji@latest/2/svg/\r\n *\r\n * @type {IconSource}\r\n */\r\nexport const twemoji = {\r\n    cdnUrl: \"//unpkg.com/twemoji@latest/2/svg\",\r\n    getIcon(props, iconInstance) {\r\n        if (props.code) {\r\n            const iconUrl = `${this.cdnUrl}/${getSvgImgNameFromCode(props.code)}.svg`;\r\n\r\n            return iconInstance.constructor\r\n                .fetchSvg(iconUrl)\r\n                .then(returnNewElement)\r\n                .catch(handleReject);\r\n        }\r\n        return Promise.reject(new Error(\"twemoji 'node' missing\"));\r\n    }\r\n};\r\n\r\nfunction getSvgImgNameFromCode(code) {\r\n    return code\r\n        .toLowerCase()\r\n        .replace(/^u\\+/, \"\");\r\n}\r\n\r\nfunction handleReject(error) {\r\n    consoleError(error);\r\n    return Promise.reject(error);\r\n}\r\n\r\nfunction returnNewElement(svgString) {\r\n    TEMPLATE.innerHTML = svgString;\r\n    return document.importNode(TEMPLATE.content, true).firstChild;\r\n}","//--------------------------------------------------------------------------------\r\n// Exports `Icon` with all currently available sources.\r\n// If wanting to avoid the \"bulk\", use the `Icon/Base/Icon` class instead\r\n// add your own custom sources to that.\r\n//--------------------------------------------------------------------------------\r\nimport Icon from \"./base/Icon.js\";\r\nimport {boxicons} from \"./source.boxicons.js\";\r\nimport {officeUiFabric} from \"./source.office-ui-fabric.js\";\r\nimport {twemoji} from \"./source.twemoji.js\";\r\n\r\nIcon.sources.boxicons = boxicons;\r\nIcon.sources.twemoji = twemoji;\r\nIcon.sources[\"office-ui-fabric\"] = officeUiFabric;\r\n\r\n\r\nexport { Icon };\r\nexport default Icon;\r\n","/**\r\n * Toggles a CSS class on/off on an element\r\n *\r\n * @function domToggleClass\r\n *\r\n * @param {HTMLElement} el\r\n * @param {String} cssClass\r\n */\r\nexport function domToggleClass(el, cssClass){\r\n    if (el) {\r\n        return el.classList.toggle(cssClass);\r\n    }\r\n}\r\nexport default domToggleClass;","/**\r\n * Adds class to an element\r\n *\r\n * @function domAddClass\r\n *\r\n * @param {HTMLElement} el\r\n * @param {String} cssClass\r\n *  Multiple classes can be set using spaces as a delimiter\r\n */\r\nexport function domAddClass(el, cssClass){\r\n    let classNameList = String(cssClass).trim().split(/\\s+/).map(className => className.trim());\r\n    if (el && classNameList.length) {\r\n        classNameList.forEach((cssClass) => el.classList.add(cssClass));\r\n    }\r\n}\r\nexport default domAddClass;","import {ComponentElement, prop, bind} from \"@purtuga/component-element/src/index.js\"\r\nimport {domToggleClass} from \"@purtuga/common/src/domutils/domToggleClass.js\";\r\nimport {domAddClass} from \"@purtuga/common/src/domutils/domAddClass.js\";\r\nimport {domAddEventListener} from \"@purtuga/common/src/domutils/domAddEventListener.js\";\r\nimport {hasAttribute} from \"@purtuga/common/src/jsutils/runtime-aliases.js\";\r\n\r\n//=============================================================\r\n\r\n/**\r\n * Provides the user with a confirmation upon clicking the component that\r\n * allows them to either proceed or cancel\r\n *\r\n * __SUPPORTED CSS VARS__\r\n *\r\n * tbd...\r\n *\r\n * @extends ComponentElement\r\n *\r\n * @property disabled\r\n *\r\n * @fires ConfirmAction#confirmed\r\n */\r\nclass ConfirmAction extends ComponentElement {\r\n    //-------------------------------------------------------------\r\n    //\r\n    //                                              STATIC MEMBERS\r\n    //\r\n    //-------------------------------------------------------------\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ STATIC PROPERTIES ~~~~~\r\n    static tagName = \"confirm-action\";\r\n\r\n    // static get delayDestroy() {}\r\n    // static get useShadow() {}\r\n    // static get shadowMode() {}\r\n    // static getEventInitOptions(){}\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ STATIC METHODS ~~~~~\r\n\r\n    // static define(name) {}\r\n\r\n\r\n    //-------------------------------------------------------------\r\n    //\r\n    //                                            INSTANCE MEMBERS\r\n    //\r\n    //-------------------------------------------------------------\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  PROPS AND ATTRIBUTES  ~~~~\r\n\r\n    @prop({ boolean: true }) disabled = false;\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  LIFE CYCLE HOOKS  ~~~~~\r\n\r\n    // didInit(){}\r\n    // didMount(){}\r\n\r\n    willRender(){\r\n        return !this._renderDone;\r\n    }\r\n\r\n    render() {\r\n        if (this._renderDone) {\r\n            return;\r\n        }\r\n\r\n        return `\r\n<style>\r\n    :host {\r\n        --yes-bg: var(--theme-color-accent-success-0, #b6eeb5);\r\n        --yes-bg-hover: var(--theme-color-accent-success-1, #9ecf99);\r\n        --no-bg: transparent;\r\n        --no-bg-hover: var(--theme-color-1, #e8e8e8);\r\n    \r\n        display: inline-block;\r\n        position: relative;\r\n        box-sizing: border-box;\r\n        font-family: var(--theme-font-family, Arial);\r\n        color: var(--theme-color-fg, black);\r\n        padding: var(--theme-spacing-1, 0.2em);\r\n    }\r\n    .action {\r\n        cursor: pointer;\r\n    }\r\n    .confirm {\r\n        display: flex;\r\n        align-content: space-between;\r\n        position: absolute;\r\n        white-space: nowrap;\r\n        background-color: var(--theme-color-bg, white);\r\n        color: var(--theme-color-fg);\r\n        border: var(--theme-border-light, 1px solid lightgrey);\r\n        left: -1px;\r\n        top: -1px;\r\n        height: 102%;\r\n        min-width: 102%;\r\n        max-width: var(--confirm-width, 300px);\r\n        user-select: none;\r\n        overflow: hidden;\r\n    }\r\n    .confirm > * {\r\n        padding: var(--theme-spacing-1, 0.2em);\r\n    }\r\n    :host([confirm-align-right]) .confirm {\r\n        left: auto;\r\n        right: -1px;\r\n    }\r\n    .hide {\r\n        display: none;\r\n    }\r\n    .msg {\r\n        flex: auto;\r\n        white-space: nowrap;\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n    }\r\n    .no,\r\n    .yes {\r\n        padding-left: var(--theme-spacing, 0.5em);\r\n        padding-right: var(--theme-spacing, 0.5em);\r\n        transition: background-color 0.3s;\r\n    }\r\n    .no {\r\n        background-color: var(--no-bg);\r\n    }\r\n    .no:hover {\r\n        background-color: var(--no-bg-hover);\r\n    }\r\n    .yes {\r\n        background-color: var(--yes-bg);\r\n    }\r\n    .yes:hover {\r\n        background-color: var(--yes-bg-hover);\r\n    }\r\n\r\n    :host([disabled]) {\r\n        opacity: 0.3;\r\n        pointer-events: none;\r\n    }\r\n    :host([disabled]) .action {\r\n        cursor: auto;\r\n    }\r\n</style>\r\n<span class=\"action\"><slot>&#9654;</slot></span>\r\n<div class=\"confirm hide\">\r\n    <span class=\"msg\">\r\n        <slot name=\"message\">Proceed?</slot>\r\n    </span>\r\n    <span class=\"no action\">\r\n        <slot name=\"cancel\">No</slot>\r\n    </span>\r\n    <span class=\"yes action\">\r\n        <slot name=\"confirm\">Yes</slot>\r\n    </span>\r\n</div>`;\r\n    }\r\n\r\n    didRender() {\r\n        if (!this._renderDone) {\r\n            this._renderDone = true;\r\n            this._$confirm = this.$(\".confirm\");\r\n            domAddEventListener(this.$(\".action\"), \"click\", this._handleShowHideConfirm);\r\n            domAddEventListener(this.$(\".yes\"), \"click\", this._handleConfirm);\r\n            domAddEventListener(this.$(\".no\"), \"click\", this._handleShowHideConfirm);\r\n            this.onPropsChange(this._handlePropsChange, \"disabled\");\r\n        }\r\n    }\r\n\r\n    // didUnmount() {}\r\n    // didDestroy() {}\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  INSTANCE METHODS  ~~~~\r\n\r\n    @bind\r\n    _handlePropsChange() {\r\n        if (this.props.disabled) {\r\n            domAddClass(this._$confirm, \"hide\");\r\n        }\r\n    }\r\n\r\n    @bind\r\n    _handleShowHideConfirm() {\r\n        if (!hasAttribute(this, \"disabled\")) {\r\n            domToggleClass(this._$confirm, \"hide\");\r\n        }\r\n    }\r\n\r\n    @bind\r\n    _handleConfirm() {\r\n        /**\r\n         * The action has been confirmed by the user\r\n         *\r\n         * @event ConfirmAction#confirmed\r\n         */\r\n        this.emit(\"confirmed\");\r\n        this._handleShowHideConfirm();\r\n    }\r\n\r\n}\r\n\r\n//-------------------------------------------------------------\r\n//\r\n//                                       CLASS PRIVATE MEMBERS\r\n//\r\n//-------------------------------------------------------------\r\n\r\n// Private functions here...\r\n\r\n//------------------------------------------ EXPORTS ----------\r\nexport default ConfirmAction;\r\nexport {\r\n    ConfirmAction\r\n}\r\n","/* global BUILD */\r\nexport {Popup} from \"./Popup/Popup.js\"\r\nexport {ContentAccess} from \"./ContentAccess/ContentAccess.js\"\r\nexport {Icon} from \"./Icon/Icon.js\"\r\nexport {ConfirmAction} from \"./ConfirmAction/ConfirmAction.js\"\r\n\r\nexport const VERSION = BUILD.DATA.VERSION;\r\n"],"sourceRoot":""}